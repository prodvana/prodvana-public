syntax = "proto3";
package prodvana.common_config;
option go_package = "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/common_config";
import "prodvana/common_config/program.proto";
import "prodvana/common_config/env.proto";
import "validate/validate.proto";

message ProgramChange {
    string name = 1 [(validate.rules).string.min_len = 1];
}

message StringParameterDefinition {
    string default_value = 1;
}

message DockerImageParameterDefinition {
    message Changes {
        oneof oneof {
            option (validate.required) = true;
            ProgramChange program = 1;
        }
    }
    string default_tag = 1;  // can be omitted if parameter is required
    prodvana.common_config.ImageRegistryInfo image_registry_info = 2 [(validate.rules).message.required = true];
    repeated Changes changes = 3 [(validate.rules).repeated.items.message.required = true];
}

message FixedReplicaChange {
}

message IntParameterDefinition {
    message Changes {
        oneof oneof {
            option (validate.required) = true;
            FixedReplicaChange fixed_replica = 1;
        }
    }
    int64 default_value = 1;
    repeated Changes changes = 2 [(validate.rules).repeated.items.message.required = true];
}

message SecretParameterDefinition { }

message CommitParameterDefinition {
    string repository = 1 [(validate.rules).string.min_len = 1];
    // branch to pull commits from, defaults to `main`
    string branch = 2;
}

message ParameterDefinition {
    // parameter name, used in substitutions
    string name = 1 [(validate.rules).string.min_len = 1];

    // optional description for display purposes
    string description = 2;

    oneof config_oneof {
        option (validate.required) = true;
        StringParameterDefinition string = 3;
        DockerImageParameterDefinition docker_image = 4;
        IntParameterDefinition int = 5;
        SecretParameterDefinition secret = 6;
        CommitParameterDefinition commit = 8;
    }

    bool required = 7;
    // next: 9
}

message SecretParameterValue {
    oneof secret_oneof {
        option (validate.required) = true;
        // Raw secret value
        string raw_secret = 1;
        // Existing secret reference.
        prodvana.common_config.Secret secret_ref = 2;
    }
}

message ParameterValue {
    string name = 1 [(validate.rules).string.min_len = 1];
    oneof value_oneof {
        option (validate.required) = true;
        string string = 2;
        int64 int = 4;
        string docker_image_tag = 5 [(validate.rules).string = {
            // From https://docs.docker.com/engine/reference/commandline/tag/,
            // ... the optional TAG is a custom, human-readable manifest identifier that is
            // typically a specific version or variant of an image. The tag must be valid ASCII
            // and can contain lowercase and uppercase letters, digits, underscores, periods, and
            // hyphens. It cannot start with a period or hyphen and must be no longer than 128
            // characters.
            //
            // Mostly cribbed from https://gitlab.com/gitlab-org/gitlab/-/blob/b70669f1b854b048e24ecfd36041b3dc1982234c/lib/gitlab/regex.rb#L58
            //
            // Edited to support both docker image tags and pinned sha256 digests.
           pattern: "^[A-Za-z0-9_][0-9A-Za-z_.-]*$|^sha256:[0-9a-f]{64}$",
        }];
        SecretParameterValue secret = 6;
        string commit = 7;
    }
    reserved 3;
    reserved "docker_image";
    // next tag: 8
}

message ParametersConfig {
    repeated ParameterDefinition parameters = 1 [(validate.rules).repeated.items.message.required = true];
}
