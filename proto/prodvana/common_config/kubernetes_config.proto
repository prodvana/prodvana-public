syntax = "proto3";
package prodvana.common_config;
option go_package = "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/common_config";
import "validate/validate.proto";

message LocalConfig {
    oneof path_oneof {
        // Specify a path to a local file or directory
        string path = 1;
    }
    // cannot be set in conjunction with path or tarball_blob_id
    // Specify multiple paths. They will get concatenated.
    repeated string paths = 2;

    // A sub_path relative to path containing the actual config.
    // sub_path value can be templated, e.g. `{{.Builtins.ReleaseChannel.Name}}`.
    // if specified, path must also be specified and be a directory.
    string sub_path = 3;
    // Used in conjunction with sub_path to exclude sub paths from being tarball'ed and uploaded
    // to Prodvana.
    // Follows the same format as gitignore.
    repeated string exclude_patterns = 5;

    // If set, only include files that match this pattern. If not set, include all files not explicitly excluded.
    repeated string include_patterns = 6;

    reserved 4;
    reserved "tarball_blob_id";

    // next tag: 6
}

// a remote config, specified by a remote source and a subpath
message RemoteConfig {
    oneof remote_oneof {
        // A directory tarball blob id uploaded to prodvana.
        string tarball_blob_id = 1;
        // TODO(naphat) git repo support?
    }
    string sub_path = 2;
}

message KubernetesConfig {
    enum Type {
        UNKNOWN = 0;
        KUBERNETES = 1;
        KUSTOMIZE = 2;
    }
    Type type = 1 [(validate.rules).enum = {not_in: [0]}];
    oneof source_oneof {
        option (validate.required) = true;
        string inlined = 2 [(validate.rules).string.min_len = 1];
        LocalConfig local = 3;
        RemoteConfig remote = 5;
    }

    enum EnvInjectionMode {
        ENV_INJECT_UNKNOWN = 0;
        // disables env injection entirely
        ENV_INJECT_DISABLED = 1;
        // inject non-secret env values from the Release Channel
        ENV_INJECT_NON_SECRET_ENV = 2;
    }

    // Defaults to ENV_INJECT_NON_SECRET_ENV
    EnvInjectionMode env_injection_mode = 4;

    repeated KubernetesPatch patches = 6 [(validate.rules).repeated.items.message.required = true];

    // next tag: 7
}

message KubernetesPatch {
    message Target {
        // omit any of these fields to match all values
        string group = 1;
        string version = 2;
        string kind = 3;
        string name = 4;
        string namespace = 5;
    }
    message Replace {
        string path = 1;  // json6902 path
        oneof value_oneof {
            option (validate.required) = true;
            string string = 2;
            string int_as_string = 3;
        }
    }
    Target target = 1;  // filter to a specific Kubernetes object. Omit to apply to all objects.
    oneof patch_oneof {
        option (validate.required) = true;
        Replace replace = 2 [(validate.rules).message.required = true];
    }
}
