syntax = "proto3";
package prodvana.desired_state.model;
option go_package = "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/desired_state/model";
import "prodvana/common_config/task.proto";
import "prodvana/desired_state/model/desired_state.proto";
import "google/protobuf/timestamp.proto";

message Notifications {
    message ProgramFailures {
        // Either k8s errors or runtime extension apply errors
        int32 failure_count = 1;
        google.protobuf.Timestamp most_recent_failure = 2;
    }

    message RuntimeFailure {
        // Info to convey:
        // - Extension Fetch couldn't be started - kubernetes errors?
        // - Extension Fetch ran but failed
        // - K8s apply error
        // - Extension Apply couldn't be applied

        enum FailureType {
            UNKNOWN = 0;
            EXTENSION_FETCH_INVOKE_ERROR = 1;
            EXTENSION_FETCH_RESULT_ERROR = 2;
            RUNTIME_APPLY_ERROR = 3;
            EXTENSION_APPLY_INVOKE_ERROR = 4;
        }

        FailureType failure_type = 1;
        string message = 2;
        // TODO: Indicate event id if possible
    }

    message ConvergenceExtensionFailure {
        Identifier extension_id = 1;
    }

    message DelayedConvergence {
        // - Runtime extension fetch has not completed a long time after it was started
    }

    ProgramFailures program_failures = 1;
    repeated RuntimeFailure runtime_failures = 2;
    repeated ProtectionFailure protection_failure = 3;
    repeated ConvergenceExtensionFailure convergence_extension_failure = 4;
    DelayedConvergence delayed_convergence = 5;
    repeated ConcurrencyLimitExceeded concurrency_limit_exceeded_errors = 6;
    // TODO: Link to next action?
}

enum DependencyType {
    DEPENDENCY_UNKNOWN = 0;
    DEPENDENCY_CHILD = 1;
    DEPENDENCY_PROTECTION_ATTACHMENT = 2;
    DEPENDENCY_RELEASE_CHANNEL = 3;
    DEPENDENCY_PRECONDITION = 4;
    DEPENDENCY_DELIVERY_EXTENSION = 5;
}

message Dependency {
    DependencyType type = 1;
    Identifier id = 2;
}

message Entity {
    Identifier id = 1;
    string desired_state_id = 2;
    string root_desired_state_id = 3;
    string parent_desired_state_id = 25;
    string release_id = 24;
    Annotations annotations = 4;
    Status status = 5;
    SimpleStatus simple_status = 17;
    State starting_state = 6;
    State last_seen_state = 7;
    State desired_state = 8; // the state we want to get to before calling convergence complete
    State target_state = 19; // the state we are actually going to apply. when preconditions are met, target state = desired state, otherwise, target state = previous desired state
    repeated ConditionState precondition_statuses = 9;
    repeated StatusExplanation status_explanations = 10;
    repeated DebugLog logs = 11;
    ActionExplanation action_explanation = 12;
    google.protobuf.Timestamp last_update_timestamp = 13;  // when the entity state last changed
    google.protobuf.Timestamp last_fetched_timestamp = 14;  // when prodvana last fetched entity state, best effort
    google.protobuf.Timestamp last_applied_timestamp = 15;  // when prodvana last applied state for this entity, best effort
    google.protobuf.Timestamp expected_next_apply_timestamp = 27; // when prodvana expects to run apply again for this entity, if there is any work to be done. If nil, apply is expected to happen immediately, again if there is any work to be done.
    bool has_work = 28; // if true, Prodvana will try to run apply at next expected_next_apply_timestamp
    string has_work_reason = 29;

    repeated Identifier dependencies = 16;
    repeated Identifier direct_dependencies = 23;
    repeated Dependency dependencies_with_type = 26;
    prodvana.common_config.TaskLifecycle lifecycle = 18;
    MissingApproval missing_approval = 20;

    ApplyError apply_error = 21;

    Notifications notifications = 22;

    KeyDeliveryDecision last_key_delivery_decision = 30;
    KeyDeliveryDecision last_rollback_key_delivery_decision = 31;

    // next tag: 32
}

message EntityGraph {
    Identifier root = 1;
    repeated Entity entities = 2;
    // if set, this entity graph is for a desired state that has been replaced, and this is the root's replaced timestamp
    google.protobuf.Timestamp replaced_timestamp = 3;
}
