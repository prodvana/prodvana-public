syntax = "proto3";
package prodvana.desired_state.maestro;
option go_package = "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/desired_state/maestro";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "prodvana/desired_state/model/desired_state.proto";
import "prodvana/object/meta.proto";

enum Status {
    UNKNOWN_STATUS = 0;
    // Pending means this train entry has never been started and is waiting for dependencies to be met.
    PENDING = 1;
    // Dependencies have been met and this train entry has been promoted.
    IN_PROGRESS = 2;
    // Successfully converged.
    SUCCEEDED = 3;
    // Promoted but failed to converge.
    FAILED = 4;
    // This train entry was skipped - any dependencies on this entry can proceed.
    SKIPPED = 5;
}

enum Strategy {
    UNKNOWN_STRATEGY = 0;
    ON_STABLE = 2;
    MAESTRO_DISABLED = 3;
    OVERWRITE = 4;
    reserved 1;
}

message MaestroConfig {
    Strategy strategy = 1 [(validate.rules).enum = {not_in: [0]}];
}

message MaestroReleaseConfig {
    prodvana.desired_state.model.Identifier entity_id = 1;
    MaestroConfig maestro_config = 2;
    prodvana.desired_state.model.State input_desired_state = 5;
    prodvana.desired_state.model.State compiled_desired_state = 3;
    google.protobuf.Timestamp creation_timestamp = 4;
    prodvana.desired_state.model.SetDesiredStateMetadata set_desired_state_metadata = 6;
    // next tag: 7
}

message MaestroReleaseState {
    Status status = 1;
    google.protobuf.Timestamp last_update_timestamp = 2;
    map<string, Status> release_channel_statuses = 3;  // status by release channel id. Use release_channel_states instead.
    map<string, MaestroReleaseChannelState> release_channel_states = 4;
}

message MaestroReleaseChannelState {
    Status status = 1;
    string desired_state_id = 2;
    string entity_id = 3;
}

message MaestroRelease {
    prodvana.object.ObjectMeta meta = 1;
    MaestroReleaseConfig config = 2;
    MaestroReleaseState state = 3;
}
