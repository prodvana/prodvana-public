syntax = "proto3";
package prodvana.environment;
option go_package = "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/secrets";
import "google/api/annotations.proto";
import "prodvana/common_config/env.proto";
import "validate/validate.proto";

message ListSecretsReq { }

message ListSecretsResp {
    repeated prodvana.common_config.Secret secrets = 1;
}

message ListSecretVersionsReq {
    string key = 1 [(validate.rules).string.min_len = 1];
}

message ListSecretVersionsResp {
    repeated string versions = 1;
}

message SetSecretReq {
    string key = 1 [(validate.rules).string.min_len = 1];
    string value = 2 [(validate.rules).string.min_len = 1];
}

message SetSecretResp {
    string version = 1;
}

message DeleteSecretReq {
    string key = 1 [(validate.rules).string.min_len = 1];
}

message DeleteSecretResp { }

message DeleteSecretVersionReq {
    string key = 1 [(validate.rules).string.min_len = 1];
    string version = 2 [(validate.rules).string.min_len = 1];
}

message DeleteSecretVersionResp { }

service SecretsManager {
    rpc ListSecrets (ListSecretsReq) returns (ListSecretsResp) {
        option (google.api.http) = {
            get: "/v1/secrets/list"
        };
    }
    rpc ListSecretVersions (ListSecretVersionsReq) returns (ListSecretVersionsResp) {
        option (google.api.http) = {
            get: "/v1/secrets/{key=*}/versions"
        };
    }
    rpc SetSecret(SetSecretReq) returns (SetSecretResp) {
        option (google.api.http) = {
            post: "/v1/secrets"
            body: "*"
        };
    }
    rpc DeleteSecret(DeleteSecretReq) returns (DeleteSecretResp) {
        option (google.api.http) = {
            delete: "/v1/secrets/{key=*}/delete"
        };
    }
    rpc DeleteSecretVersion(DeleteSecretVersionReq) returns (DeleteSecretVersionResp) {
        option (google.api.http) = {
            delete: "/v1/secrets/{key=*}/versions/{version=*}/delete"
        };
    }
}
