syntax = "proto3";
package prodvana.release_channel;
option go_package = "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/release_channel";

import "google/protobuf/duration.proto";
import "prodvana/common_config/constants.proto";
import "prodvana/common_config/env.proto";
import "prodvana/common_config/maturity.proto";
import "prodvana/pipelines/pipelines.proto";
import "prodvana/protection/attachments.proto";
import "prodvana/runtimes/runtimes_config.proto";
import "prodvana/workflow/integration_config.proto";
import "validate/validate.proto";

message Policy {
    map<string, prodvana.common_config.EnvValue> default_env = 1 [(validate.rules).map = {
        keys: {
            string: {
                pattern: '^[a-zA-Z_]+[a-zA-Z0-9_]*$',
            },
        },
        no_sparse: true,
    }];
}

message ReleaseChannelConfig {
    // intentionally does not reference cluster - this allows us to copy release channels across clusters via the same config
    string name = 1 [
        (validate.rules).string = {
            min_len: 1,
            max_len: 63,
            pattern: '^[a-z]([a-z0-9-]*[a-z0-9]){0,1}$',
        }
    ];
    int64 order = 2;
    prodvana.common_config.Maturity maturity = 3;  // deprecated
    Policy policy = 4;

    repeated ReleaseChannelRuntimeConfig runtimes = 5;
    prodvana.workflow.AnnotationsConfig deploy_annotations = 6;

    repeated Precondition preconditions = 7;

    repeated prodvana.protection.ProtectionAttachmentConfig protections = 8;
    repeated prodvana.protection.ProtectionAttachmentConfig convergence_protections = 9;

    // constants made available in template substitutions
    repeated prodvana.common_config.Constant constants = 10;
}

message Precondition {
    message ReleaseChannelStable {
        string release_channel = 1;
        google.protobuf.Duration duration = 2;
    }
    message ManualApproval {
        string name = 1;
        string description = 2;
    }
    message CustomTask {
        string task_name = 1;
        prodvana.pipelines.CustomTask custom_task = 2;
    }
    oneof precondition {
        ReleaseChannelStable release_channel_stable = 1;
        ManualApproval manual_approval = 2;
        CustomTask custom_task = 3;
    }
    reserved 4;
    reserved "protection";
}

enum RuntimeConnectionType {
    UNKNOWN_CONNECTION = 0;
    LONG_LIVED_COMPUTE = 1;
    EXTENSION = 2;
}

message ReleaseChannelRuntimeConfig {
    string runtime = 2 [
        (validate.rules).string = {
            min_len: 1,
            max_len: 63,
            pattern: '^[a-z]([a-z0-9-]*[a-z0-9]){0,1}$',
        }
    ];
    // Optional identifier for this runtime connection within this release channel,
    // useful if the release channel has multiple runtimes of the same type.
    // Defaults to the value of `runtime``.
    string name = 3 [
        (validate.rules).string = {
            min_len: 0,
            max_len: 63,
            pattern: '^[a-z]?([a-z0-9-]*[a-z0-9]){0,1}$',
        }
    ];
    oneof capability {  // if not set, will be autogenerated to container orchestration
        prodvana.runtimes.ContainerOrchestrationRuntime container_orchestration = 1;
    }

    // set internally by prodvana, overridden even if set manually.
    RuntimeConnectionType type = 4;

    // next tag: 5
}
