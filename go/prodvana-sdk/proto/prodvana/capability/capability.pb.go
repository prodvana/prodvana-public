// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.21.10
// source: prodvana/capability/capability.proto

package capability

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	common_config "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/common_config"
	pipelines "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/pipelines"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PerReleaseChannelCapabilityConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseChannel string `protobuf:"bytes,1,opt,name=release_channel,json=releaseChannel,proto3" json:"release_channel,omitempty"`
	// Types that are assignable to DefinitionOneof:
	//
	//	*PerReleaseChannelCapabilityConfig_Inlined
	//	*PerReleaseChannelCapabilityConfig_Ref
	DefinitionOneof isPerReleaseChannelCapabilityConfig_DefinitionOneof `protobuf_oneof:"definition_oneof"`
}

func (x *PerReleaseChannelCapabilityConfig) Reset() {
	*x = PerReleaseChannelCapabilityConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_capability_capability_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerReleaseChannelCapabilityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerReleaseChannelCapabilityConfig) ProtoMessage() {}

func (x *PerReleaseChannelCapabilityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_capability_capability_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerReleaseChannelCapabilityConfig.ProtoReflect.Descriptor instead.
func (*PerReleaseChannelCapabilityConfig) Descriptor() ([]byte, []int) {
	return file_prodvana_capability_capability_proto_rawDescGZIP(), []int{0}
}

func (x *PerReleaseChannelCapabilityConfig) GetReleaseChannel() string {
	if x != nil {
		return x.ReleaseChannel
	}
	return ""
}

func (m *PerReleaseChannelCapabilityConfig) GetDefinitionOneof() isPerReleaseChannelCapabilityConfig_DefinitionOneof {
	if m != nil {
		return m.DefinitionOneof
	}
	return nil
}

func (x *PerReleaseChannelCapabilityConfig) GetInlined() *CapabilityInstanceConfig {
	if x, ok := x.GetDefinitionOneof().(*PerReleaseChannelCapabilityConfig_Inlined); ok {
		return x.Inlined
	}
	return nil
}

func (x *PerReleaseChannelCapabilityConfig) GetRef() *CapabilityInstanceRef {
	if x, ok := x.GetDefinitionOneof().(*PerReleaseChannelCapabilityConfig_Ref); ok {
		return x.Ref
	}
	return nil
}

type isPerReleaseChannelCapabilityConfig_DefinitionOneof interface {
	isPerReleaseChannelCapabilityConfig_DefinitionOneof()
}

type PerReleaseChannelCapabilityConfig_Inlined struct {
	// either inline capability config definition, or reference a CapabilityInstanceDefinition
	// on the top level application object
	Inlined *CapabilityInstanceConfig `protobuf:"bytes,2,opt,name=inlined,proto3,oneof"`
}

type PerReleaseChannelCapabilityConfig_Ref struct {
	Ref *CapabilityInstanceRef `protobuf:"bytes,3,opt,name=ref,proto3,oneof"`
}

func (*PerReleaseChannelCapabilityConfig_Inlined) isPerReleaseChannelCapabilityConfig_DefinitionOneof() {
}

func (*PerReleaseChannelCapabilityConfig_Ref) isPerReleaseChannelCapabilityConfig_DefinitionOneof() {}

type CapabilityConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string                               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PerReleaseChannel []*PerReleaseChannelCapabilityConfig `protobuf:"bytes,2,rep,name=per_release_channel,json=perReleaseChannel,proto3" json:"per_release_channel,omitempty"`
}

func (x *CapabilityConfig) Reset() {
	*x = CapabilityConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_capability_capability_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CapabilityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilityConfig) ProtoMessage() {}

func (x *CapabilityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_capability_capability_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilityConfig.ProtoReflect.Descriptor instead.
func (*CapabilityConfig) Descriptor() ([]byte, []int) {
	return file_prodvana_capability_capability_proto_rawDescGZIP(), []int{1}
}

func (x *CapabilityConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CapabilityConfig) GetPerReleaseChannel() []*PerReleaseChannelCapabilityConfig {
	if x != nil {
		return x.PerReleaseChannel
	}
	return nil
}

type CapabilityInstanceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // omit if inlined
	// env vars to inject
	Env map[string]*common_config.EnvValue `protobuf:"bytes,2,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Tasks to inject in the pipeline, before the push of the service instance depending on this capability
	// Custom tasks will automatically have env vars from `env` above injected.
	// When multiple service instances reference the same capability instance, the tasks are deduped and injected
	// before the push of the first service instance in the pipeline.
	PrePushTasks []*pipelines.Task `protobuf:"bytes,3,rep,name=pre_push_tasks,json=prePushTasks,proto3" json:"pre_push_tasks,omitempty"`
}

func (x *CapabilityInstanceConfig) Reset() {
	*x = CapabilityInstanceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_capability_capability_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CapabilityInstanceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilityInstanceConfig) ProtoMessage() {}

func (x *CapabilityInstanceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_capability_capability_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilityInstanceConfig.ProtoReflect.Descriptor instead.
func (*CapabilityInstanceConfig) Descriptor() ([]byte, []int) {
	return file_prodvana_capability_capability_proto_rawDescGZIP(), []int{2}
}

func (x *CapabilityInstanceConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CapabilityInstanceConfig) GetEnv() map[string]*common_config.EnvValue {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *CapabilityInstanceConfig) GetPrePushTasks() []*pipelines.Task {
	if x != nil {
		return x.PrePushTasks
	}
	return nil
}

type CapabilityInstanceRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CapabilityInstanceRef) Reset() {
	*x = CapabilityInstanceRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_capability_capability_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CapabilityInstanceRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilityInstanceRef) ProtoMessage() {}

func (x *CapabilityInstanceRef) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_capability_capability_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilityInstanceRef.ProtoReflect.Descriptor instead.
func (*CapabilityInstanceRef) Descriptor() ([]byte, []int) {
	return file_prodvana_capability_capability_proto_rawDescGZIP(), []int{3}
}

func (x *CapabilityInstanceRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_prodvana_capability_capability_proto protoreflect.FileDescriptor

var file_prodvana_capability_capability_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x63, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2e, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x20, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x65, 0x6e, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x73, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf9, 0x01, 0x0a, 0x21, 0x50,
	0x65, 0x72, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x30, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x49, 0x0a, 0x07, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x63,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3e, 0x0a,
	0x03, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x03, 0x72, 0x65, 0x66, 0x42, 0x17, 0x0a,
	0x10, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x6e, 0x65, 0x6f,
	0x66, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0xa6, 0x01, 0x0a, 0x10, 0x43, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x75, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2e, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x65, 0x72, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x0d, 0xfa,
	0x42, 0x0a, 0x92, 0x01, 0x07, 0x22, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x11, 0x70, 0x65,
	0x72, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22,
	0xca, 0x02, 0x0a, 0x18, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x71, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x6e, 0x76,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x27, 0xfa, 0x42, 0x24, 0x9a, 0x01, 0x21, 0x18, 0x01, 0x22,
	0x1d, 0x72, 0x1b, 0x32, 0x19, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x5f, 0x5d, 0x2b,
	0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5f, 0x5d, 0x2a, 0x24, 0x52, 0x03,
	0x65, 0x6e, 0x76, 0x12, 0x4d, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x92, 0x01, 0x07, 0x22, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x1a, 0x58, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x34, 0x0a, 0x15,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x66, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x4f, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prodvana_capability_capability_proto_rawDescOnce sync.Once
	file_prodvana_capability_capability_proto_rawDescData = file_prodvana_capability_capability_proto_rawDesc
)

func file_prodvana_capability_capability_proto_rawDescGZIP() []byte {
	file_prodvana_capability_capability_proto_rawDescOnce.Do(func() {
		file_prodvana_capability_capability_proto_rawDescData = protoimpl.X.CompressGZIP(file_prodvana_capability_capability_proto_rawDescData)
	})
	return file_prodvana_capability_capability_proto_rawDescData
}

var file_prodvana_capability_capability_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_prodvana_capability_capability_proto_goTypes = []interface{}{
	(*PerReleaseChannelCapabilityConfig)(nil), // 0: prodvana.capability.PerReleaseChannelCapabilityConfig
	(*CapabilityConfig)(nil),                  // 1: prodvana.capability.CapabilityConfig
	(*CapabilityInstanceConfig)(nil),          // 2: prodvana.capability.CapabilityInstanceConfig
	(*CapabilityInstanceRef)(nil),             // 3: prodvana.capability.CapabilityInstanceRef
	nil,                                       // 4: prodvana.capability.CapabilityInstanceConfig.EnvEntry
	(*pipelines.Task)(nil),                    // 5: prodvana.pipelines.Task
	(*common_config.EnvValue)(nil),            // 6: prodvana.common_config.EnvValue
}
var file_prodvana_capability_capability_proto_depIdxs = []int32{
	2, // 0: prodvana.capability.PerReleaseChannelCapabilityConfig.inlined:type_name -> prodvana.capability.CapabilityInstanceConfig
	3, // 1: prodvana.capability.PerReleaseChannelCapabilityConfig.ref:type_name -> prodvana.capability.CapabilityInstanceRef
	0, // 2: prodvana.capability.CapabilityConfig.per_release_channel:type_name -> prodvana.capability.PerReleaseChannelCapabilityConfig
	4, // 3: prodvana.capability.CapabilityInstanceConfig.env:type_name -> prodvana.capability.CapabilityInstanceConfig.EnvEntry
	5, // 4: prodvana.capability.CapabilityInstanceConfig.pre_push_tasks:type_name -> prodvana.pipelines.Task
	6, // 5: prodvana.capability.CapabilityInstanceConfig.EnvEntry.value:type_name -> prodvana.common_config.EnvValue
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_prodvana_capability_capability_proto_init() }
func file_prodvana_capability_capability_proto_init() {
	if File_prodvana_capability_capability_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_prodvana_capability_capability_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerReleaseChannelCapabilityConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_capability_capability_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CapabilityConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_capability_capability_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CapabilityInstanceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_capability_capability_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CapabilityInstanceRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_prodvana_capability_capability_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PerReleaseChannelCapabilityConfig_Inlined)(nil),
		(*PerReleaseChannelCapabilityConfig_Ref)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prodvana_capability_capability_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_prodvana_capability_capability_proto_goTypes,
		DependencyIndexes: file_prodvana_capability_capability_proto_depIdxs,
		MessageInfos:      file_prodvana_capability_capability_proto_msgTypes,
	}.Build()
	File_prodvana_capability_capability_proto = out.File
	file_prodvana_capability_capability_proto_rawDesc = nil
	file_prodvana_capability_capability_proto_goTypes = nil
	file_prodvana_capability_capability_proto_depIdxs = nil
}
