// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.21.10
// source: prodvana/managed_resource/manager.proto

package managed_resource

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigureK8SClusterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to CloudProviderOneof:
	//
	//	*ConfigureK8SClusterReq_GcpOptions_
	//	*ConfigureK8SClusterReq_EksOptions
	CloudProviderOneof isConfigureK8SClusterReq_CloudProviderOneof `protobuf_oneof:"cloud_provider_oneof"`
	InstanceType       string                                      `protobuf:"bytes,3,opt,name=instance_type,json=instanceType,proto3" json:"instance_type,omitempty"`
	NodepoolZones      []string                                    `protobuf:"bytes,4,rep,name=nodepool_zones,json=nodepoolZones,proto3" json:"nodepool_zones,omitempty"`
	NodeCountPerZone   int32                                       `protobuf:"varint,5,opt,name=node_count_per_zone,json=nodeCountPerZone,proto3" json:"node_count_per_zone,omitempty"`
	Region             string                                      `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *ConfigureK8SClusterReq) Reset() {
	*x = ConfigureK8SClusterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_managed_resource_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureK8SClusterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureK8SClusterReq) ProtoMessage() {}

func (x *ConfigureK8SClusterReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_managed_resource_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureK8SClusterReq.ProtoReflect.Descriptor instead.
func (*ConfigureK8SClusterReq) Descriptor() ([]byte, []int) {
	return file_prodvana_managed_resource_manager_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigureK8SClusterReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *ConfigureK8SClusterReq) GetCloudProviderOneof() isConfigureK8SClusterReq_CloudProviderOneof {
	if m != nil {
		return m.CloudProviderOneof
	}
	return nil
}

func (x *ConfigureK8SClusterReq) GetGcpOptions() *ConfigureK8SClusterReq_GcpOptions {
	if x, ok := x.GetCloudProviderOneof().(*ConfigureK8SClusterReq_GcpOptions_); ok {
		return x.GcpOptions
	}
	return nil
}

func (x *ConfigureK8SClusterReq) GetEksOptions() *ConfigureK8SClusterReq_EKSOptions {
	if x, ok := x.GetCloudProviderOneof().(*ConfigureK8SClusterReq_EksOptions); ok {
		return x.EksOptions
	}
	return nil
}

func (x *ConfigureK8SClusterReq) GetInstanceType() string {
	if x != nil {
		return x.InstanceType
	}
	return ""
}

func (x *ConfigureK8SClusterReq) GetNodepoolZones() []string {
	if x != nil {
		return x.NodepoolZones
	}
	return nil
}

func (x *ConfigureK8SClusterReq) GetNodeCountPerZone() int32 {
	if x != nil {
		return x.NodeCountPerZone
	}
	return 0
}

func (x *ConfigureK8SClusterReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type isConfigureK8SClusterReq_CloudProviderOneof interface {
	isConfigureK8SClusterReq_CloudProviderOneof()
}

type ConfigureK8SClusterReq_GcpOptions_ struct {
	GcpOptions *ConfigureK8SClusterReq_GcpOptions `protobuf:"bytes,2,opt,name=gcp_options,json=gcpOptions,proto3,oneof"`
}

type ConfigureK8SClusterReq_EksOptions struct {
	EksOptions *ConfigureK8SClusterReq_EKSOptions `protobuf:"bytes,7,opt,name=eks_options,json=eksOptions,proto3,oneof"`
}

func (*ConfigureK8SClusterReq_GcpOptions_) isConfigureK8SClusterReq_CloudProviderOneof() {}

func (*ConfigureK8SClusterReq_EksOptions) isConfigureK8SClusterReq_CloudProviderOneof() {}

type ConfigureK8SClusterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                 `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	RunId   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	Version string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// TODO(naphat) delete archive_url once we automate pulumi runs
	ArchiveUrl string `protobuf:"bytes,3,opt,name=archive_url,json=archiveUrl,proto3" json:"archive_url,omitempty"`
}

func (x *ConfigureK8SClusterResp) Reset() {
	*x = ConfigureK8SClusterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_managed_resource_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureK8SClusterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureK8SClusterResp) ProtoMessage() {}

func (x *ConfigureK8SClusterResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_managed_resource_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureK8SClusterResp.ProtoReflect.Descriptor instead.
func (*ConfigureK8SClusterResp) Descriptor() ([]byte, []int) {
	return file_prodvana_managed_resource_manager_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigureK8SClusterResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConfigureK8SClusterResp) GetRunId() *timestamppb.Timestamp {
	if x != nil {
		return x.RunId
	}
	return nil
}

func (x *ConfigureK8SClusterResp) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ConfigureK8SClusterResp) GetArchiveUrl() string {
	if x != nil {
		return x.ArchiveUrl
	}
	return ""
}

type ManagedResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type      string               `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	LatestRun *ManagedResource_Run `protobuf:"bytes,4,opt,name=latest_run,json=latestRun,proto3" json:"latest_run,omitempty"`
}

func (x *ManagedResource) Reset() {
	*x = ManagedResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_managed_resource_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagedResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagedResource) ProtoMessage() {}

func (x *ManagedResource) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_managed_resource_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagedResource.ProtoReflect.Descriptor instead.
func (*ManagedResource) Descriptor() ([]byte, []int) {
	return file_prodvana_managed_resource_manager_proto_rawDescGZIP(), []int{2}
}

func (x *ManagedResource) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ManagedResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ManagedResource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ManagedResource) GetLatestRun() *ManagedResource_Run {
	if x != nil {
		return x.LatestRun
	}
	return nil
}

type GetManagedResourceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManagedResource string `protobuf:"bytes,1,opt,name=managed_resource,json=managedResource,proto3" json:"managed_resource,omitempty"`
}

func (x *GetManagedResourceReq) Reset() {
	*x = GetManagedResourceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_managed_resource_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetManagedResourceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManagedResourceReq) ProtoMessage() {}

func (x *GetManagedResourceReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_managed_resource_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManagedResourceReq.ProtoReflect.Descriptor instead.
func (*GetManagedResourceReq) Descriptor() ([]byte, []int) {
	return file_prodvana_managed_resource_manager_proto_rawDescGZIP(), []int{3}
}

func (x *GetManagedResourceReq) GetManagedResource() string {
	if x != nil {
		return x.ManagedResource
	}
	return ""
}

type GetManagedResourceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManagedResource *ManagedResource `protobuf:"bytes,1,opt,name=managed_resource,json=managedResource,proto3" json:"managed_resource,omitempty"`
}

func (x *GetManagedResourceResp) Reset() {
	*x = GetManagedResourceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_managed_resource_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetManagedResourceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManagedResourceResp) ProtoMessage() {}

func (x *GetManagedResourceResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_managed_resource_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManagedResourceResp.ProtoReflect.Descriptor instead.
func (*GetManagedResourceResp) Descriptor() ([]byte, []int) {
	return file_prodvana_managed_resource_manager_proto_rawDescGZIP(), []int{4}
}

func (x *GetManagedResourceResp) GetManagedResource() *ManagedResource {
	if x != nil {
		return x.ManagedResource
	}
	return nil
}

type ListManagedResourcesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListManagedResourcesReq) Reset() {
	*x = ListManagedResourcesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_managed_resource_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListManagedResourcesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListManagedResourcesReq) ProtoMessage() {}

func (x *ListManagedResourcesReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_managed_resource_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListManagedResourcesReq.ProtoReflect.Descriptor instead.
func (*ListManagedResourcesReq) Descriptor() ([]byte, []int) {
	return file_prodvana_managed_resource_manager_proto_rawDescGZIP(), []int{5}
}

type ListManagedResourcesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManagedResources []*ManagedResource `protobuf:"bytes,1,rep,name=managed_resources,json=managedResources,proto3" json:"managed_resources,omitempty"`
}

func (x *ListManagedResourcesResp) Reset() {
	*x = ListManagedResourcesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_managed_resource_manager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListManagedResourcesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListManagedResourcesResp) ProtoMessage() {}

func (x *ListManagedResourcesResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_managed_resource_manager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListManagedResourcesResp.ProtoReflect.Descriptor instead.
func (*ListManagedResourcesResp) Descriptor() ([]byte, []int) {
	return file_prodvana_managed_resource_manager_proto_rawDescGZIP(), []int{6}
}

func (x *ListManagedResourcesResp) GetManagedResources() []*ManagedResource {
	if x != nil {
		return x.ManagedResources
	}
	return nil
}

type GetArchiveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManagedResource string `protobuf:"bytes,1,opt,name=managed_resource,json=managedResource,proto3" json:"managed_resource,omitempty"`
	Version         string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"` // default to latest version
}

func (x *GetArchiveReq) Reset() {
	*x = GetArchiveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_managed_resource_manager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArchiveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArchiveReq) ProtoMessage() {}

func (x *GetArchiveReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_managed_resource_manager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArchiveReq.ProtoReflect.Descriptor instead.
func (*GetArchiveReq) Descriptor() ([]byte, []int) {
	return file_prodvana_managed_resource_manager_proto_rawDescGZIP(), []int{7}
}

func (x *GetArchiveReq) GetManagedResource() string {
	if x != nil {
		return x.ManagedResource
	}
	return ""
}

func (x *GetArchiveReq) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetArchiveResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bytes []byte `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *GetArchiveResp) Reset() {
	*x = GetArchiveResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_managed_resource_manager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArchiveResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArchiveResp) ProtoMessage() {}

func (x *GetArchiveResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_managed_resource_manager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArchiveResp.ProtoReflect.Descriptor instead.
func (*GetArchiveResp) Descriptor() ([]byte, []int) {
	return file_prodvana_managed_resource_manager_proto_rawDescGZIP(), []int{8}
}

func (x *GetArchiveResp) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type MarkRunDoneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManagedResource string                 `protobuf:"bytes,1,opt,name=managed_resource,json=managedResource,proto3" json:"managed_resource,omitempty"`
	RunId           *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	Succeeded       bool                   `protobuf:"varint,3,opt,name=succeeded,proto3" json:"succeeded,omitempty"`
	Msg             string                 `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *MarkRunDoneReq) Reset() {
	*x = MarkRunDoneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_managed_resource_manager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkRunDoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkRunDoneReq) ProtoMessage() {}

func (x *MarkRunDoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_managed_resource_manager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkRunDoneReq.ProtoReflect.Descriptor instead.
func (*MarkRunDoneReq) Descriptor() ([]byte, []int) {
	return file_prodvana_managed_resource_manager_proto_rawDescGZIP(), []int{9}
}

func (x *MarkRunDoneReq) GetManagedResource() string {
	if x != nil {
		return x.ManagedResource
	}
	return ""
}

func (x *MarkRunDoneReq) GetRunId() *timestamppb.Timestamp {
	if x != nil {
		return x.RunId
	}
	return nil
}

func (x *MarkRunDoneReq) GetSucceeded() bool {
	if x != nil {
		return x.Succeeded
	}
	return false
}

func (x *MarkRunDoneReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type MarkRunDoneResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MarkRunDoneResp) Reset() {
	*x = MarkRunDoneResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_managed_resource_manager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkRunDoneResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkRunDoneResp) ProtoMessage() {}

func (x *MarkRunDoneResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_managed_resource_manager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkRunDoneResp.ProtoReflect.Descriptor instead.
func (*MarkRunDoneResp) Descriptor() ([]byte, []int) {
	return file_prodvana_managed_resource_manager_proto_rawDescGZIP(), []int{10}
}

type DeleteManagedResourceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManagedResource string `protobuf:"bytes,1,opt,name=managed_resource,json=managedResource,proto3" json:"managed_resource,omitempty"`
}

func (x *DeleteManagedResourceReq) Reset() {
	*x = DeleteManagedResourceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_managed_resource_manager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteManagedResourceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteManagedResourceReq) ProtoMessage() {}

func (x *DeleteManagedResourceReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_managed_resource_manager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteManagedResourceReq.ProtoReflect.Descriptor instead.
func (*DeleteManagedResourceReq) Descriptor() ([]byte, []int) {
	return file_prodvana_managed_resource_manager_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteManagedResourceReq) GetManagedResource() string {
	if x != nil {
		return x.ManagedResource
	}
	return ""
}

type DeleteManagedResourceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// resource ID and run ID, which can be used in conjunction with GetManagedResource to track
	// status of deletion.
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RunId *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
}

func (x *DeleteManagedResourceResp) Reset() {
	*x = DeleteManagedResourceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_managed_resource_manager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteManagedResourceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteManagedResourceResp) ProtoMessage() {}

func (x *DeleteManagedResourceResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_managed_resource_manager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteManagedResourceResp.ProtoReflect.Descriptor instead.
func (*DeleteManagedResourceResp) Descriptor() ([]byte, []int) {
	return file_prodvana_managed_resource_manager_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteManagedResourceResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteManagedResourceResp) GetRunId() *timestamppb.Timestamp {
	if x != nil {
		return x.RunId
	}
	return nil
}

type ConfigureK8SClusterReq_GcpOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// TODO(naphat) there should be an integrations table for this and elevate to top level data model
	Credentials string `protobuf:"bytes,2,opt,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *ConfigureK8SClusterReq_GcpOptions) Reset() {
	*x = ConfigureK8SClusterReq_GcpOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_managed_resource_manager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureK8SClusterReq_GcpOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureK8SClusterReq_GcpOptions) ProtoMessage() {}

func (x *ConfigureK8SClusterReq_GcpOptions) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_managed_resource_manager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureK8SClusterReq_GcpOptions.ProtoReflect.Descriptor instead.
func (*ConfigureK8SClusterReq_GcpOptions) Descriptor() ([]byte, []int) {
	return file_prodvana_managed_resource_manager_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ConfigureK8SClusterReq_GcpOptions) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *ConfigureK8SClusterReq_GcpOptions) GetCredentials() string {
	if x != nil {
		return x.Credentials
	}
	return ""
}

type ConfigureK8SClusterReq_EKSOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKey string `protobuf:"bytes,1,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	SecretKey string `protobuf:"bytes,2,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	AccountId string `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	RoleArn   string `protobuf:"bytes,4,opt,name=role_arn,json=roleArn,proto3" json:"role_arn,omitempty"`
}

func (x *ConfigureK8SClusterReq_EKSOptions) Reset() {
	*x = ConfigureK8SClusterReq_EKSOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_managed_resource_manager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureK8SClusterReq_EKSOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureK8SClusterReq_EKSOptions) ProtoMessage() {}

func (x *ConfigureK8SClusterReq_EKSOptions) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_managed_resource_manager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureK8SClusterReq_EKSOptions.ProtoReflect.Descriptor instead.
func (*ConfigureK8SClusterReq_EKSOptions) Descriptor() ([]byte, []int) {
	return file_prodvana_managed_resource_manager_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ConfigureK8SClusterReq_EKSOptions) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *ConfigureK8SClusterReq_EKSOptions) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *ConfigureK8SClusterReq_EKSOptions) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ConfigureK8SClusterReq_EKSOptions) GetRoleArn() string {
	if x != nil {
		return x.RoleArn
	}
	return ""
}

type ManagedResource_Run struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version             string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	State               string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Terminal            bool                   `protobuf:"varint,3,opt,name=terminal,proto3" json:"terminal,omitempty"`
	CreationTimestamp   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=creation_timestamp,json=creationTimestamp,proto3" json:"creation_timestamp,omitempty"`
	LastUpdateTimestamp *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_update_timestamp,json=lastUpdateTimestamp,proto3" json:"last_update_timestamp,omitempty"`
	Message             string                 `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ManagedResource_Run) Reset() {
	*x = ManagedResource_Run{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_managed_resource_manager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagedResource_Run) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagedResource_Run) ProtoMessage() {}

func (x *ManagedResource_Run) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_managed_resource_manager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagedResource_Run.ProtoReflect.Descriptor instead.
func (*ManagedResource_Run) Descriptor() ([]byte, []int) {
	return file_prodvana_managed_resource_manager_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ManagedResource_Run) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ManagedResource_Run) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ManagedResource_Run) GetTerminal() bool {
	if x != nil {
		return x.Terminal
	}
	return false
}

func (x *ManagedResource_Run) GetCreationTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationTimestamp
	}
	return nil
}

func (x *ManagedResource_Run) GetLastUpdateTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdateTimestamp
	}
	return nil
}

func (x *ManagedResource_Run) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_prodvana_managed_resource_manager_proto protoreflect.FileDescriptor

var file_prodvana_managed_resource_manager_proto_rawDesc = []byte{
	0x0a, 0x27, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x70, 0x72, 0x6f, 0x64, 0x76,
	0x61, 0x6e, 0x61, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xea, 0x04, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x4b, 0x38, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x5f, 0x0a, 0x0b, 0x67, 0x63, 0x70, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x4b, 0x38, 0x73,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x2e, 0x47, 0x63, 0x70, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x63, 0x70, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x5f, 0x0a, 0x0b, 0x65, 0x6b, 0x73, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76,
	0x61, 0x6e, 0x61, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x4b, 0x38,
	0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x2e, 0x45, 0x4b, 0x53, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x6b, 0x73, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x6f, 0x64,
	0x65, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x70, 0x6f, 0x6f, 0x6c, 0x5a, 0x6f, 0x6e, 0x65, 0x73,
	0x12, 0x2d, 0x0a, 0x13, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x5a, 0x6f, 0x6e, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x1a, 0x48, 0x0a, 0x0a, 0x47, 0x63, 0x70, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x1a, 0x84, 0x01, 0x0a, 0x0a, 0x45, 0x4b, 0x53, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x72, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x72, 0x6e, 0x42, 0x16, 0x0a, 0x14, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66,
	0x22, 0x97, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x4b, 0x38,
	0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x06,
	0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xa1, 0x03, 0x0a, 0x0f, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x72, 0x75, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x52, 0x09, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x52, 0x75, 0x6e, 0x1a, 0x86, 0x02, 0x0a, 0x03, 0x52, 0x75, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x49, 0x0a, 0x12, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x4e, 0x0a, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x13, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x42,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0x6f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x10,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e,
	0x61, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x22, 0x73,
	0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x11, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x10, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x22, 0x9e, 0x01, 0x0a, 0x0e, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x75, 0x6e, 0x44, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x31, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x72, 0x75, 0x6e,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x11, 0x0a, 0x0f, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x75, 0x6e, 0x44, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x45, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x5e, 0x0a, 0x19,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x75, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x64, 0x32, 0xf3, 0x07, 0x0a,
	0x0f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x12, 0xac, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x4b, 0x38,
	0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76,
	0x61, 0x6e, 0x61, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x4b, 0x38,
	0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x4b, 0x38, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x6b, 0x38, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12,
	0xad, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e,
	0x61, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76,
	0x61, 0x6e, 0x61, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x32, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3d, 0x2a, 0x7d, 0x12,
	0x9e, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76,
	0x61, 0x6e, 0x61, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x33, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0xb7, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12,
	0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x76, 0x61, 0x6e, 0x61, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x52, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4c, 0x12, 0x4a, 0x2f, 0x76,
	0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x7b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x3d, 0x2a, 0x7d, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x30, 0x01, 0x12, 0xbd, 0x01, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x76, 0x61, 0x6e, 0x61, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x2a, 0x31, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x7b,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x3d, 0x2a, 0x7d, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x66, 0x0a, 0x0b, 0x4d, 0x61,
	0x72, 0x6b, 0x52, 0x75, 0x6e, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x76, 0x61, 0x6e, 0x61, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x75, 0x6e, 0x44, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x75, 0x6e, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x42, 0x55, 0x5a, 0x53, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_prodvana_managed_resource_manager_proto_rawDescOnce sync.Once
	file_prodvana_managed_resource_manager_proto_rawDescData = file_prodvana_managed_resource_manager_proto_rawDesc
)

func file_prodvana_managed_resource_manager_proto_rawDescGZIP() []byte {
	file_prodvana_managed_resource_manager_proto_rawDescOnce.Do(func() {
		file_prodvana_managed_resource_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_prodvana_managed_resource_manager_proto_rawDescData)
	})
	return file_prodvana_managed_resource_manager_proto_rawDescData
}

var file_prodvana_managed_resource_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_prodvana_managed_resource_manager_proto_goTypes = []interface{}{
	(*ConfigureK8SClusterReq)(nil),            // 0: prodvana.managed_resource.ConfigureK8sClusterReq
	(*ConfigureK8SClusterResp)(nil),           // 1: prodvana.managed_resource.ConfigureK8sClusterResp
	(*ManagedResource)(nil),                   // 2: prodvana.managed_resource.ManagedResource
	(*GetManagedResourceReq)(nil),             // 3: prodvana.managed_resource.GetManagedResourceReq
	(*GetManagedResourceResp)(nil),            // 4: prodvana.managed_resource.GetManagedResourceResp
	(*ListManagedResourcesReq)(nil),           // 5: prodvana.managed_resource.ListManagedResourcesReq
	(*ListManagedResourcesResp)(nil),          // 6: prodvana.managed_resource.ListManagedResourcesResp
	(*GetArchiveReq)(nil),                     // 7: prodvana.managed_resource.GetArchiveReq
	(*GetArchiveResp)(nil),                    // 8: prodvana.managed_resource.GetArchiveResp
	(*MarkRunDoneReq)(nil),                    // 9: prodvana.managed_resource.MarkRunDoneReq
	(*MarkRunDoneResp)(nil),                   // 10: prodvana.managed_resource.MarkRunDoneResp
	(*DeleteManagedResourceReq)(nil),          // 11: prodvana.managed_resource.DeleteManagedResourceReq
	(*DeleteManagedResourceResp)(nil),         // 12: prodvana.managed_resource.DeleteManagedResourceResp
	(*ConfigureK8SClusterReq_GcpOptions)(nil), // 13: prodvana.managed_resource.ConfigureK8sClusterReq.GcpOptions
	(*ConfigureK8SClusterReq_EKSOptions)(nil), // 14: prodvana.managed_resource.ConfigureK8sClusterReq.EKSOptions
	(*ManagedResource_Run)(nil),               // 15: prodvana.managed_resource.ManagedResource.Run
	(*timestamppb.Timestamp)(nil),             // 16: google.protobuf.Timestamp
}
var file_prodvana_managed_resource_manager_proto_depIdxs = []int32{
	13, // 0: prodvana.managed_resource.ConfigureK8sClusterReq.gcp_options:type_name -> prodvana.managed_resource.ConfigureK8sClusterReq.GcpOptions
	14, // 1: prodvana.managed_resource.ConfigureK8sClusterReq.eks_options:type_name -> prodvana.managed_resource.ConfigureK8sClusterReq.EKSOptions
	16, // 2: prodvana.managed_resource.ConfigureK8sClusterResp.run_id:type_name -> google.protobuf.Timestamp
	15, // 3: prodvana.managed_resource.ManagedResource.latest_run:type_name -> prodvana.managed_resource.ManagedResource.Run
	2,  // 4: prodvana.managed_resource.GetManagedResourceResp.managed_resource:type_name -> prodvana.managed_resource.ManagedResource
	2,  // 5: prodvana.managed_resource.ListManagedResourcesResp.managed_resources:type_name -> prodvana.managed_resource.ManagedResource
	16, // 6: prodvana.managed_resource.MarkRunDoneReq.run_id:type_name -> google.protobuf.Timestamp
	16, // 7: prodvana.managed_resource.DeleteManagedResourceResp.run_id:type_name -> google.protobuf.Timestamp
	16, // 8: prodvana.managed_resource.ManagedResource.Run.creation_timestamp:type_name -> google.protobuf.Timestamp
	16, // 9: prodvana.managed_resource.ManagedResource.Run.last_update_timestamp:type_name -> google.protobuf.Timestamp
	0,  // 10: prodvana.managed_resource.ResourceManager.ConfigureK8sCluster:input_type -> prodvana.managed_resource.ConfigureK8sClusterReq
	3,  // 11: prodvana.managed_resource.ResourceManager.GetManagedResource:input_type -> prodvana.managed_resource.GetManagedResourceReq
	5,  // 12: prodvana.managed_resource.ResourceManager.ListManagedResources:input_type -> prodvana.managed_resource.ListManagedResourcesReq
	7,  // 13: prodvana.managed_resource.ResourceManager.GetArchive:input_type -> prodvana.managed_resource.GetArchiveReq
	11, // 14: prodvana.managed_resource.ResourceManager.DeleteManagedResource:input_type -> prodvana.managed_resource.DeleteManagedResourceReq
	9,  // 15: prodvana.managed_resource.ResourceManager.MarkRunDone:input_type -> prodvana.managed_resource.MarkRunDoneReq
	1,  // 16: prodvana.managed_resource.ResourceManager.ConfigureK8sCluster:output_type -> prodvana.managed_resource.ConfigureK8sClusterResp
	4,  // 17: prodvana.managed_resource.ResourceManager.GetManagedResource:output_type -> prodvana.managed_resource.GetManagedResourceResp
	6,  // 18: prodvana.managed_resource.ResourceManager.ListManagedResources:output_type -> prodvana.managed_resource.ListManagedResourcesResp
	8,  // 19: prodvana.managed_resource.ResourceManager.GetArchive:output_type -> prodvana.managed_resource.GetArchiveResp
	12, // 20: prodvana.managed_resource.ResourceManager.DeleteManagedResource:output_type -> prodvana.managed_resource.DeleteManagedResourceResp
	10, // 21: prodvana.managed_resource.ResourceManager.MarkRunDone:output_type -> prodvana.managed_resource.MarkRunDoneResp
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_prodvana_managed_resource_manager_proto_init() }
func file_prodvana_managed_resource_manager_proto_init() {
	if File_prodvana_managed_resource_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_prodvana_managed_resource_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureK8SClusterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_managed_resource_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureK8SClusterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_managed_resource_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagedResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_managed_resource_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetManagedResourceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_managed_resource_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetManagedResourceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_managed_resource_manager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListManagedResourcesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_managed_resource_manager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListManagedResourcesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_managed_resource_manager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArchiveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_managed_resource_manager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArchiveResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_managed_resource_manager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkRunDoneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_managed_resource_manager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkRunDoneResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_managed_resource_manager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteManagedResourceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_managed_resource_manager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteManagedResourceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_managed_resource_manager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureK8SClusterReq_GcpOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_managed_resource_manager_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureK8SClusterReq_EKSOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_managed_resource_manager_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagedResource_Run); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_prodvana_managed_resource_manager_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ConfigureK8SClusterReq_GcpOptions_)(nil),
		(*ConfigureK8SClusterReq_EksOptions)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prodvana_managed_resource_manager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_prodvana_managed_resource_manager_proto_goTypes,
		DependencyIndexes: file_prodvana_managed_resource_manager_proto_depIdxs,
		MessageInfos:      file_prodvana_managed_resource_manager_proto_msgTypes,
	}.Build()
	File_prodvana_managed_resource_manager_proto = out.File
	file_prodvana_managed_resource_manager_proto_rawDesc = nil
	file_prodvana_managed_resource_manager_proto_goTypes = nil
	file_prodvana_managed_resource_manager_proto_depIdxs = nil
}
