// Code generated by protoc-gen-go-vtproto. DO NOT EDIT.
// protoc-gen-go-vtproto version: v0.6.0
// source: prodvana/common_config/release.proto

package common_config

import (
	proto "google.golang.org/protobuf/proto"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

func (m *ReleaseSettings_BypassSettings) CloneVT() *ReleaseSettings_BypassSettings {
	if m == nil {
		return (*ReleaseSettings_BypassSettings)(nil)
	}
	r := new(ReleaseSettings_BypassSettings)
	r.NoBypassProtections = m.NoBypassProtections
	r.NoBypassConvergenceExtensions = m.NoBypassConvergenceExtensions
	r.NoBypassApprovals = m.NoBypassApprovals
	r.NoBypassReleaseChannelOrdering = m.NoBypassReleaseChannelOrdering
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ReleaseSettings_BypassSettings) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ReleaseSettings) CloneVT() *ReleaseSettings {
	if m == nil {
		return (*ReleaseSettings)(nil)
	}
	r := new(ReleaseSettings)
	r.BypassSettings = m.BypassSettings.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ReleaseSettings) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (this *ReleaseSettings_BypassSettings) StableEqualVT(that *ReleaseSettings_BypassSettings) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.NoBypassProtections != that.NoBypassProtections {
		return false
	}
	if this.NoBypassConvergenceExtensions != that.NoBypassConvergenceExtensions {
		return false
	}
	if this.NoBypassApprovals != that.NoBypassApprovals {
		return false
	}
	if this.NoBypassReleaseChannelOrdering != that.NoBypassReleaseChannelOrdering {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ReleaseSettings_BypassSettings) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ReleaseSettings_BypassSettings)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *ReleaseSettings) StableEqualVT(that *ReleaseSettings) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.BypassSettings.StableEqualVT(that.BypassSettings) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ReleaseSettings) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ReleaseSettings)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *ReleaseSettings_BypassSettings) EqualVT(that *ReleaseSettings_BypassSettings) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.NoBypassProtections != that.NoBypassProtections {
		return false
	}
	if this.NoBypassConvergenceExtensions != that.NoBypassConvergenceExtensions {
		return false
	}
	if this.NoBypassApprovals != that.NoBypassApprovals {
		return false
	}
	if this.NoBypassReleaseChannelOrdering != that.NoBypassReleaseChannelOrdering {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ReleaseSettings_BypassSettings) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ReleaseSettings_BypassSettings)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ReleaseSettings) EqualVT(that *ReleaseSettings) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.BypassSettings.EqualVT(that.BypassSettings) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ReleaseSettings) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ReleaseSettings)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
