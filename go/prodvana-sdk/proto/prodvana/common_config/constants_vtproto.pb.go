// Code generated by protoc-gen-go-vtproto. DO NOT EDIT.
// protoc-gen-go-vtproto version: v0.6.0
// source: prodvana/common_config/constants.proto

package common_config

import (
	proto "google.golang.org/protobuf/proto"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

func (m *Constant) CloneVT() *Constant {
	if m == nil {
		return (*Constant)(nil)
	}
	r := new(Constant)
	r.Name = m.Name
	if m.ConfigOneof != nil {
		r.ConfigOneof = m.ConfigOneof.(interface{ CloneVT() isConstant_ConfigOneof }).CloneVT()
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *Constant) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *Constant_String_) CloneVT() isConstant_ConfigOneof {
	if m == nil {
		return (*Constant_String_)(nil)
	}
	r := new(Constant_String_)
	r.String_ = m.String_.CloneVT()
	return r
}

func (m *StringConstant) CloneVT() *StringConstant {
	if m == nil {
		return (*StringConstant)(nil)
	}
	r := new(StringConstant)
	r.Value = m.Value
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *StringConstant) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (this *Constant) StableEqualVT(that *Constant) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.ConfigOneof == nil && that.ConfigOneof != nil {
		return false
	} else if this.ConfigOneof != nil {
		if that.ConfigOneof == nil {
			return false
		}
		if !this.ConfigOneof.(interface {
			StableEqualVT(isConstant_ConfigOneof) bool
		}).StableEqualVT(that.ConfigOneof) {
			return false
		}
	}
	if this.Name != that.Name {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *Constant) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*Constant)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *Constant_String_) StableEqualVT(thatIface isConstant_ConfigOneof) bool {
	that, ok := thatIface.(*Constant_String_)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.String_, that.String_; p != q {
		if p == nil {
			p = &StringConstant{}
		}
		if q == nil {
			q = &StringConstant{}
		}
		if !p.StableEqualVT(q) {
			return false
		}
	}
	return true
}

func (this *Constant) EqualVT(that *Constant) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.ConfigOneof == nil && that.ConfigOneof != nil {
		return false
	} else if this.ConfigOneof != nil {
		if that.ConfigOneof == nil {
			return false
		}
		if !this.ConfigOneof.(interface {
			EqualVT(isConstant_ConfigOneof) bool
		}).EqualVT(that.ConfigOneof) {
			return false
		}
	}
	if this.Name != that.Name {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *Constant) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*Constant)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *Constant_String_) EqualVT(thatIface isConstant_ConfigOneof) bool {
	that, ok := thatIface.(*Constant_String_)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.String_, that.String_; p != q {
		if p == nil {
			p = &StringConstant{}
		}
		if q == nil {
			q = &StringConstant{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *StringConstant) StableEqualVT(that *StringConstant) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Value != that.Value {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *StringConstant) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*StringConstant)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *StringConstant) EqualVT(that *StringConstant) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Value != that.Value {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *StringConstant) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*StringConstant)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
