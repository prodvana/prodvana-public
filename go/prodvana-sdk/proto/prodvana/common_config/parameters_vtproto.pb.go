// Code generated by protoc-gen-go-vtproto. DO NOT EDIT.
// protoc-gen-go-vtproto version: v0.6.0
// source: prodvana/common_config/parameters.proto

package common_config

import (
	proto "google.golang.org/protobuf/proto"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

func (m *ProgramChange) CloneVT() *ProgramChange {
	if m == nil {
		return (*ProgramChange)(nil)
	}
	r := new(ProgramChange)
	r.Name = m.Name
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ProgramChange) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *StringParameterDefinition) CloneVT() *StringParameterDefinition {
	if m == nil {
		return (*StringParameterDefinition)(nil)
	}
	r := new(StringParameterDefinition)
	r.DefaultValue = m.DefaultValue
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *StringParameterDefinition) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *DockerImageParameterDefinition_Changes) CloneVT() *DockerImageParameterDefinition_Changes {
	if m == nil {
		return (*DockerImageParameterDefinition_Changes)(nil)
	}
	r := new(DockerImageParameterDefinition_Changes)
	if m.Oneof != nil {
		r.Oneof = m.Oneof.(interface {
			CloneVT() isDockerImageParameterDefinition_Changes_Oneof
		}).CloneVT()
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *DockerImageParameterDefinition_Changes) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *DockerImageParameterDefinition_Changes_Program) CloneVT() isDockerImageParameterDefinition_Changes_Oneof {
	if m == nil {
		return (*DockerImageParameterDefinition_Changes_Program)(nil)
	}
	r := new(DockerImageParameterDefinition_Changes_Program)
	r.Program = m.Program.CloneVT()
	return r
}

func (m *DockerImageParameterDefinition) CloneVT() *DockerImageParameterDefinition {
	if m == nil {
		return (*DockerImageParameterDefinition)(nil)
	}
	r := new(DockerImageParameterDefinition)
	r.DefaultTag = m.DefaultTag
	r.ImageRegistryInfo = m.ImageRegistryInfo.CloneVT()
	if rhs := m.Changes; rhs != nil {
		tmpContainer := make([]*DockerImageParameterDefinition_Changes, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.Changes = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *DockerImageParameterDefinition) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *FixedReplicaChange) CloneVT() *FixedReplicaChange {
	if m == nil {
		return (*FixedReplicaChange)(nil)
	}
	r := new(FixedReplicaChange)
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *FixedReplicaChange) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *IntParameterDefinition_Changes) CloneVT() *IntParameterDefinition_Changes {
	if m == nil {
		return (*IntParameterDefinition_Changes)(nil)
	}
	r := new(IntParameterDefinition_Changes)
	if m.Oneof != nil {
		r.Oneof = m.Oneof.(interface {
			CloneVT() isIntParameterDefinition_Changes_Oneof
		}).CloneVT()
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *IntParameterDefinition_Changes) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *IntParameterDefinition_Changes_FixedReplica) CloneVT() isIntParameterDefinition_Changes_Oneof {
	if m == nil {
		return (*IntParameterDefinition_Changes_FixedReplica)(nil)
	}
	r := new(IntParameterDefinition_Changes_FixedReplica)
	r.FixedReplica = m.FixedReplica.CloneVT()
	return r
}

func (m *IntParameterDefinition) CloneVT() *IntParameterDefinition {
	if m == nil {
		return (*IntParameterDefinition)(nil)
	}
	r := new(IntParameterDefinition)
	r.DefaultValue = m.DefaultValue
	if rhs := m.Changes; rhs != nil {
		tmpContainer := make([]*IntParameterDefinition_Changes, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.Changes = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *IntParameterDefinition) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *SecretParameterDefinition) CloneVT() *SecretParameterDefinition {
	if m == nil {
		return (*SecretParameterDefinition)(nil)
	}
	r := new(SecretParameterDefinition)
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *SecretParameterDefinition) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *CommitParameterDefinition) CloneVT() *CommitParameterDefinition {
	if m == nil {
		return (*CommitParameterDefinition)(nil)
	}
	r := new(CommitParameterDefinition)
	r.Repository = m.Repository
	r.Branch = m.Branch
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *CommitParameterDefinition) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *BlobParameterDefinition) CloneVT() *BlobParameterDefinition {
	if m == nil {
		return (*BlobParameterDefinition)(nil)
	}
	r := new(BlobParameterDefinition)
	r.DefaultValue = m.DefaultValue
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *BlobParameterDefinition) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ParameterDefinition) CloneVT() *ParameterDefinition {
	if m == nil {
		return (*ParameterDefinition)(nil)
	}
	r := new(ParameterDefinition)
	r.Name = m.Name
	r.Description = m.Description
	r.Required = m.Required
	if m.ConfigOneof != nil {
		r.ConfigOneof = m.ConfigOneof.(interface {
			CloneVT() isParameterDefinition_ConfigOneof
		}).CloneVT()
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ParameterDefinition) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ParameterDefinition_String_) CloneVT() isParameterDefinition_ConfigOneof {
	if m == nil {
		return (*ParameterDefinition_String_)(nil)
	}
	r := new(ParameterDefinition_String_)
	r.String_ = m.String_.CloneVT()
	return r
}

func (m *ParameterDefinition_DockerImage) CloneVT() isParameterDefinition_ConfigOneof {
	if m == nil {
		return (*ParameterDefinition_DockerImage)(nil)
	}
	r := new(ParameterDefinition_DockerImage)
	r.DockerImage = m.DockerImage.CloneVT()
	return r
}

func (m *ParameterDefinition_Int) CloneVT() isParameterDefinition_ConfigOneof {
	if m == nil {
		return (*ParameterDefinition_Int)(nil)
	}
	r := new(ParameterDefinition_Int)
	r.Int = m.Int.CloneVT()
	return r
}

func (m *ParameterDefinition_Secret) CloneVT() isParameterDefinition_ConfigOneof {
	if m == nil {
		return (*ParameterDefinition_Secret)(nil)
	}
	r := new(ParameterDefinition_Secret)
	r.Secret = m.Secret.CloneVT()
	return r
}

func (m *ParameterDefinition_Commit) CloneVT() isParameterDefinition_ConfigOneof {
	if m == nil {
		return (*ParameterDefinition_Commit)(nil)
	}
	r := new(ParameterDefinition_Commit)
	r.Commit = m.Commit.CloneVT()
	return r
}

func (m *ParameterDefinition_Blob) CloneVT() isParameterDefinition_ConfigOneof {
	if m == nil {
		return (*ParameterDefinition_Blob)(nil)
	}
	r := new(ParameterDefinition_Blob)
	r.Blob = m.Blob.CloneVT()
	return r
}

func (m *SecretParameterValue) CloneVT() *SecretParameterValue {
	if m == nil {
		return (*SecretParameterValue)(nil)
	}
	r := new(SecretParameterValue)
	if m.SecretOneof != nil {
		r.SecretOneof = m.SecretOneof.(interface {
			CloneVT() isSecretParameterValue_SecretOneof
		}).CloneVT()
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *SecretParameterValue) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *SecretParameterValue_RawSecret) CloneVT() isSecretParameterValue_SecretOneof {
	if m == nil {
		return (*SecretParameterValue_RawSecret)(nil)
	}
	r := new(SecretParameterValue_RawSecret)
	r.RawSecret = m.RawSecret
	return r
}

func (m *SecretParameterValue_SecretRef) CloneVT() isSecretParameterValue_SecretOneof {
	if m == nil {
		return (*SecretParameterValue_SecretRef)(nil)
	}
	r := new(SecretParameterValue_SecretRef)
	r.SecretRef = m.SecretRef.CloneVT()
	return r
}

func (m *BlobParameterValue) CloneVT() *BlobParameterValue {
	if m == nil {
		return (*BlobParameterValue)(nil)
	}
	r := new(BlobParameterValue)
	if m.BlobOneof != nil {
		r.BlobOneof = m.BlobOneof.(interface {
			CloneVT() isBlobParameterValue_BlobOneof
		}).CloneVT()
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *BlobParameterValue) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *BlobParameterValue_Inlined) CloneVT() isBlobParameterValue_BlobOneof {
	if m == nil {
		return (*BlobParameterValue_Inlined)(nil)
	}
	r := new(BlobParameterValue_Inlined)
	r.Inlined = m.Inlined
	return r
}

func (m *ParameterValue) CloneVT() *ParameterValue {
	if m == nil {
		return (*ParameterValue)(nil)
	}
	r := new(ParameterValue)
	r.Name = m.Name
	if m.ValueOneof != nil {
		r.ValueOneof = m.ValueOneof.(interface {
			CloneVT() isParameterValue_ValueOneof
		}).CloneVT()
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ParameterValue) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ParameterValue_String_) CloneVT() isParameterValue_ValueOneof {
	if m == nil {
		return (*ParameterValue_String_)(nil)
	}
	r := new(ParameterValue_String_)
	r.String_ = m.String_
	return r
}

func (m *ParameterValue_Int) CloneVT() isParameterValue_ValueOneof {
	if m == nil {
		return (*ParameterValue_Int)(nil)
	}
	r := new(ParameterValue_Int)
	r.Int = m.Int
	return r
}

func (m *ParameterValue_DockerImageTag) CloneVT() isParameterValue_ValueOneof {
	if m == nil {
		return (*ParameterValue_DockerImageTag)(nil)
	}
	r := new(ParameterValue_DockerImageTag)
	r.DockerImageTag = m.DockerImageTag
	return r
}

func (m *ParameterValue_Secret) CloneVT() isParameterValue_ValueOneof {
	if m == nil {
		return (*ParameterValue_Secret)(nil)
	}
	r := new(ParameterValue_Secret)
	r.Secret = m.Secret.CloneVT()
	return r
}

func (m *ParameterValue_Commit) CloneVT() isParameterValue_ValueOneof {
	if m == nil {
		return (*ParameterValue_Commit)(nil)
	}
	r := new(ParameterValue_Commit)
	r.Commit = m.Commit
	return r
}

func (m *ParameterValue_Blob) CloneVT() isParameterValue_ValueOneof {
	if m == nil {
		return (*ParameterValue_Blob)(nil)
	}
	r := new(ParameterValue_Blob)
	r.Blob = m.Blob.CloneVT()
	return r
}

func (m *ParametersConfig) CloneVT() *ParametersConfig {
	if m == nil {
		return (*ParametersConfig)(nil)
	}
	r := new(ParametersConfig)
	if rhs := m.Parameters; rhs != nil {
		tmpContainer := make([]*ParameterDefinition, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.Parameters = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ParametersConfig) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (this *ProgramChange) EqualVT(that *ProgramChange) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Name != that.Name {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ProgramChange) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ProgramChange)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *StringParameterDefinition) EqualVT(that *StringParameterDefinition) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DefaultValue != that.DefaultValue {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *StringParameterDefinition) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*StringParameterDefinition)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *DockerImageParameterDefinition_Changes) EqualVT(that *DockerImageParameterDefinition_Changes) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Oneof == nil && that.Oneof != nil {
		return false
	} else if this.Oneof != nil {
		if that.Oneof == nil {
			return false
		}
		if !this.Oneof.(interface {
			EqualVT(isDockerImageParameterDefinition_Changes_Oneof) bool
		}).EqualVT(that.Oneof) {
			return false
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *DockerImageParameterDefinition_Changes) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*DockerImageParameterDefinition_Changes)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *DockerImageParameterDefinition_Changes_Program) EqualVT(thatIface isDockerImageParameterDefinition_Changes_Oneof) bool {
	that, ok := thatIface.(*DockerImageParameterDefinition_Changes_Program)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.Program, that.Program; p != q {
		if p == nil {
			p = &ProgramChange{}
		}
		if q == nil {
			q = &ProgramChange{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *DockerImageParameterDefinition) EqualVT(that *DockerImageParameterDefinition) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DefaultTag != that.DefaultTag {
		return false
	}
	if !this.ImageRegistryInfo.EqualVT(that.ImageRegistryInfo) {
		return false
	}
	if len(this.Changes) != len(that.Changes) {
		return false
	}
	for i, vx := range this.Changes {
		vy := that.Changes[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &DockerImageParameterDefinition_Changes{}
			}
			if q == nil {
				q = &DockerImageParameterDefinition_Changes{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *DockerImageParameterDefinition) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*DockerImageParameterDefinition)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *FixedReplicaChange) EqualVT(that *FixedReplicaChange) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *FixedReplicaChange) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*FixedReplicaChange)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *IntParameterDefinition_Changes) EqualVT(that *IntParameterDefinition_Changes) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Oneof == nil && that.Oneof != nil {
		return false
	} else if this.Oneof != nil {
		if that.Oneof == nil {
			return false
		}
		if !this.Oneof.(interface {
			EqualVT(isIntParameterDefinition_Changes_Oneof) bool
		}).EqualVT(that.Oneof) {
			return false
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *IntParameterDefinition_Changes) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*IntParameterDefinition_Changes)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *IntParameterDefinition_Changes_FixedReplica) EqualVT(thatIface isIntParameterDefinition_Changes_Oneof) bool {
	that, ok := thatIface.(*IntParameterDefinition_Changes_FixedReplica)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.FixedReplica, that.FixedReplica; p != q {
		if p == nil {
			p = &FixedReplicaChange{}
		}
		if q == nil {
			q = &FixedReplicaChange{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *IntParameterDefinition) EqualVT(that *IntParameterDefinition) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DefaultValue != that.DefaultValue {
		return false
	}
	if len(this.Changes) != len(that.Changes) {
		return false
	}
	for i, vx := range this.Changes {
		vy := that.Changes[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &IntParameterDefinition_Changes{}
			}
			if q == nil {
				q = &IntParameterDefinition_Changes{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *IntParameterDefinition) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*IntParameterDefinition)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *SecretParameterDefinition) EqualVT(that *SecretParameterDefinition) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *SecretParameterDefinition) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*SecretParameterDefinition)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *CommitParameterDefinition) EqualVT(that *CommitParameterDefinition) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Repository != that.Repository {
		return false
	}
	if this.Branch != that.Branch {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *CommitParameterDefinition) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*CommitParameterDefinition)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *BlobParameterDefinition) EqualVT(that *BlobParameterDefinition) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DefaultValue != that.DefaultValue {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *BlobParameterDefinition) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*BlobParameterDefinition)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ParameterDefinition) EqualVT(that *ParameterDefinition) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.ConfigOneof == nil && that.ConfigOneof != nil {
		return false
	} else if this.ConfigOneof != nil {
		if that.ConfigOneof == nil {
			return false
		}
		if !this.ConfigOneof.(interface {
			EqualVT(isParameterDefinition_ConfigOneof) bool
		}).EqualVT(that.ConfigOneof) {
			return false
		}
	}
	if this.Name != that.Name {
		return false
	}
	if this.Description != that.Description {
		return false
	}
	if this.Required != that.Required {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ParameterDefinition) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ParameterDefinition)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ParameterDefinition_String_) EqualVT(thatIface isParameterDefinition_ConfigOneof) bool {
	that, ok := thatIface.(*ParameterDefinition_String_)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.String_, that.String_; p != q {
		if p == nil {
			p = &StringParameterDefinition{}
		}
		if q == nil {
			q = &StringParameterDefinition{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *ParameterDefinition_DockerImage) EqualVT(thatIface isParameterDefinition_ConfigOneof) bool {
	that, ok := thatIface.(*ParameterDefinition_DockerImage)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.DockerImage, that.DockerImage; p != q {
		if p == nil {
			p = &DockerImageParameterDefinition{}
		}
		if q == nil {
			q = &DockerImageParameterDefinition{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *ParameterDefinition_Int) EqualVT(thatIface isParameterDefinition_ConfigOneof) bool {
	that, ok := thatIface.(*ParameterDefinition_Int)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.Int, that.Int; p != q {
		if p == nil {
			p = &IntParameterDefinition{}
		}
		if q == nil {
			q = &IntParameterDefinition{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *ParameterDefinition_Secret) EqualVT(thatIface isParameterDefinition_ConfigOneof) bool {
	that, ok := thatIface.(*ParameterDefinition_Secret)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.Secret, that.Secret; p != q {
		if p == nil {
			p = &SecretParameterDefinition{}
		}
		if q == nil {
			q = &SecretParameterDefinition{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *ParameterDefinition_Commit) EqualVT(thatIface isParameterDefinition_ConfigOneof) bool {
	that, ok := thatIface.(*ParameterDefinition_Commit)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.Commit, that.Commit; p != q {
		if p == nil {
			p = &CommitParameterDefinition{}
		}
		if q == nil {
			q = &CommitParameterDefinition{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *ParameterDefinition_Blob) EqualVT(thatIface isParameterDefinition_ConfigOneof) bool {
	that, ok := thatIface.(*ParameterDefinition_Blob)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.Blob, that.Blob; p != q {
		if p == nil {
			p = &BlobParameterDefinition{}
		}
		if q == nil {
			q = &BlobParameterDefinition{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *SecretParameterValue) EqualVT(that *SecretParameterValue) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.SecretOneof == nil && that.SecretOneof != nil {
		return false
	} else if this.SecretOneof != nil {
		if that.SecretOneof == nil {
			return false
		}
		if !this.SecretOneof.(interface {
			EqualVT(isSecretParameterValue_SecretOneof) bool
		}).EqualVT(that.SecretOneof) {
			return false
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *SecretParameterValue) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*SecretParameterValue)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *SecretParameterValue_RawSecret) EqualVT(thatIface isSecretParameterValue_SecretOneof) bool {
	that, ok := thatIface.(*SecretParameterValue_RawSecret)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if this.RawSecret != that.RawSecret {
		return false
	}
	return true
}

func (this *SecretParameterValue_SecretRef) EqualVT(thatIface isSecretParameterValue_SecretOneof) bool {
	that, ok := thatIface.(*SecretParameterValue_SecretRef)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.SecretRef, that.SecretRef; p != q {
		if p == nil {
			p = &Secret{}
		}
		if q == nil {
			q = &Secret{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *BlobParameterValue) EqualVT(that *BlobParameterValue) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.BlobOneof == nil && that.BlobOneof != nil {
		return false
	} else if this.BlobOneof != nil {
		if that.BlobOneof == nil {
			return false
		}
		if !this.BlobOneof.(interface {
			EqualVT(isBlobParameterValue_BlobOneof) bool
		}).EqualVT(that.BlobOneof) {
			return false
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *BlobParameterValue) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*BlobParameterValue)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *BlobParameterValue_Inlined) EqualVT(thatIface isBlobParameterValue_BlobOneof) bool {
	that, ok := thatIface.(*BlobParameterValue_Inlined)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if this.Inlined != that.Inlined {
		return false
	}
	return true
}

func (this *ParameterValue) EqualVT(that *ParameterValue) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.ValueOneof == nil && that.ValueOneof != nil {
		return false
	} else if this.ValueOneof != nil {
		if that.ValueOneof == nil {
			return false
		}
		if !this.ValueOneof.(interface {
			EqualVT(isParameterValue_ValueOneof) bool
		}).EqualVT(that.ValueOneof) {
			return false
		}
	}
	if this.Name != that.Name {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ParameterValue) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ParameterValue)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ParameterValue_String_) EqualVT(thatIface isParameterValue_ValueOneof) bool {
	that, ok := thatIface.(*ParameterValue_String_)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if this.String_ != that.String_ {
		return false
	}
	return true
}

func (this *ParameterValue_Int) EqualVT(thatIface isParameterValue_ValueOneof) bool {
	that, ok := thatIface.(*ParameterValue_Int)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if this.Int != that.Int {
		return false
	}
	return true
}

func (this *ParameterValue_DockerImageTag) EqualVT(thatIface isParameterValue_ValueOneof) bool {
	that, ok := thatIface.(*ParameterValue_DockerImageTag)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if this.DockerImageTag != that.DockerImageTag {
		return false
	}
	return true
}

func (this *ParameterValue_Secret) EqualVT(thatIface isParameterValue_ValueOneof) bool {
	that, ok := thatIface.(*ParameterValue_Secret)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.Secret, that.Secret; p != q {
		if p == nil {
			p = &SecretParameterValue{}
		}
		if q == nil {
			q = &SecretParameterValue{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *ParameterValue_Commit) EqualVT(thatIface isParameterValue_ValueOneof) bool {
	that, ok := thatIface.(*ParameterValue_Commit)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if this.Commit != that.Commit {
		return false
	}
	return true
}

func (this *ParameterValue_Blob) EqualVT(thatIface isParameterValue_ValueOneof) bool {
	that, ok := thatIface.(*ParameterValue_Blob)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.Blob, that.Blob; p != q {
		if p == nil {
			p = &BlobParameterValue{}
		}
		if q == nil {
			q = &BlobParameterValue{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *ParametersConfig) EqualVT(that *ParametersConfig) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.Parameters) != len(that.Parameters) {
		return false
	}
	for i, vx := range this.Parameters {
		vy := that.Parameters[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &ParameterDefinition{}
			}
			if q == nil {
				q = &ParameterDefinition{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ParametersConfig) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ParametersConfig)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
