// Code generated by protoc-gen-go-vtproto. DO NOT EDIT.
// protoc-gen-go-vtproto version: v0.6.0
// source: prodvana/volumes/volumes.proto

package volumes

import (
	proto "google.golang.org/protobuf/proto"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

func (m *VolumeSource_SecretSource) CloneVT() *VolumeSource_SecretSource {
	if m == nil {
		return (*VolumeSource_SecretSource)(nil)
	}
	r := new(VolumeSource_SecretSource)
	r.SecretName = m.SecretName
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *VolumeSource_SecretSource) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *VolumeSource_EphemeralSource) CloneVT() *VolumeSource_EphemeralSource {
	if m == nil {
		return (*VolumeSource_EphemeralSource)(nil)
	}
	r := new(VolumeSource_EphemeralSource)
	r.Medium = m.Medium
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *VolumeSource_EphemeralSource) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *VolumeSource) CloneVT() *VolumeSource {
	if m == nil {
		return (*VolumeSource)(nil)
	}
	r := new(VolumeSource)
	if m.Source != nil {
		r.Source = m.Source.(interface{ CloneVT() isVolumeSource_Source }).CloneVT()
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *VolumeSource) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *VolumeSource_Secret) CloneVT() isVolumeSource_Source {
	if m == nil {
		return (*VolumeSource_Secret)(nil)
	}
	r := new(VolumeSource_Secret)
	r.Secret = m.Secret.CloneVT()
	return r
}

func (m *VolumeSource_Ephemeral) CloneVT() isVolumeSource_Source {
	if m == nil {
		return (*VolumeSource_Ephemeral)(nil)
	}
	r := new(VolumeSource_Ephemeral)
	r.Ephemeral = m.Ephemeral.CloneVT()
	return r
}

func (m *VolumeMount) CloneVT() *VolumeMount {
	if m == nil {
		return (*VolumeMount)(nil)
	}
	r := new(VolumeMount)
	r.MountPath = m.MountPath
	r.ReadOnly = m.ReadOnly
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *VolumeMount) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *Volume) CloneVT() *Volume {
	if m == nil {
		return (*Volume)(nil)
	}
	r := new(Volume)
	r.Name = m.Name
	r.Source = m.Source.CloneVT()
	r.Mount = m.Mount.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *Volume) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (this *VolumeSource_SecretSource) EqualVT(that *VolumeSource_SecretSource) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.SecretName != that.SecretName {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *VolumeSource_SecretSource) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*VolumeSource_SecretSource)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *VolumeSource_EphemeralSource) EqualVT(that *VolumeSource_EphemeralSource) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Medium != that.Medium {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *VolumeSource_EphemeralSource) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*VolumeSource_EphemeralSource)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *VolumeSource) EqualVT(that *VolumeSource) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Source == nil && that.Source != nil {
		return false
	} else if this.Source != nil {
		if that.Source == nil {
			return false
		}
		if !this.Source.(interface {
			EqualVT(isVolumeSource_Source) bool
		}).EqualVT(that.Source) {
			return false
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *VolumeSource) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*VolumeSource)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *VolumeSource_Secret) EqualVT(thatIface isVolumeSource_Source) bool {
	that, ok := thatIface.(*VolumeSource_Secret)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.Secret, that.Secret; p != q {
		if p == nil {
			p = &VolumeSource_SecretSource{}
		}
		if q == nil {
			q = &VolumeSource_SecretSource{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *VolumeSource_Ephemeral) EqualVT(thatIface isVolumeSource_Source) bool {
	that, ok := thatIface.(*VolumeSource_Ephemeral)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.Ephemeral, that.Ephemeral; p != q {
		if p == nil {
			p = &VolumeSource_EphemeralSource{}
		}
		if q == nil {
			q = &VolumeSource_EphemeralSource{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *VolumeMount) EqualVT(that *VolumeMount) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.MountPath != that.MountPath {
		return false
	}
	if this.ReadOnly != that.ReadOnly {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *VolumeMount) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*VolumeMount)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *Volume) EqualVT(that *Volume) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Name != that.Name {
		return false
	}
	if !this.Source.EqualVT(that.Source) {
		return false
	}
	if !this.Mount.EqualVT(that.Mount) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *Volume) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*Volume)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
