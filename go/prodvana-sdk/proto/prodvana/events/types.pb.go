// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.21.10
// source: prodvana/events/types.proto

package events

import (
	model "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/desired_state/model"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_UNKNOWN EventType = 0
	// when a user sets a new desired state
	EventType_SET_DESIRED_STATE EventType = 1
	// when dyanmic delivery sets a new target state as part of convergence. A desired state convergence
	// involves a series of SET_TARGET_STATE event, one per each entity managed as part of convergence.
	EventType_SET_TARGET_STATE EventType = 2
	EventType_PROGRAM_EXIT     EventType = 3
	// When dynamic delivery materializes a target state to physical infrastructure as part of convergence.
	// Each SET_TARGET_STATE is followed by one or more APPLY_TARGET_STATE, unless convergence is aborted.
	EventType_APPLY_TARGET_STATE    EventType = 4
	EventType_MANUAL_APPROVAL       EventType = 6
	EventType_CUSTOM_TASK_EXECUTION EventType = 7
	// generic runtime events when more specific event types are not available.
	EventType_RUNTIME_UPDATE              EventType = 8
	EventType_DELIVERY_PROGRESS           EventType = 9
	EventType_DELIVERY_MANUAL_PROMOTION   EventType = 10
	EventType_DESIRED_STATE_STATUS_CHANGE EventType = 11
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "SET_DESIRED_STATE",
		2:  "SET_TARGET_STATE",
		3:  "PROGRAM_EXIT",
		4:  "APPLY_TARGET_STATE",
		6:  "MANUAL_APPROVAL",
		7:  "CUSTOM_TASK_EXECUTION",
		8:  "RUNTIME_UPDATE",
		9:  "DELIVERY_PROGRESS",
		10: "DELIVERY_MANUAL_PROMOTION",
		11: "DESIRED_STATE_STATUS_CHANGE",
	}
	EventType_value = map[string]int32{
		"UNKNOWN":                     0,
		"SET_DESIRED_STATE":           1,
		"SET_TARGET_STATE":            2,
		"PROGRAM_EXIT":                3,
		"APPLY_TARGET_STATE":          4,
		"MANUAL_APPROVAL":             6,
		"CUSTOM_TASK_EXECUTION":       7,
		"RUNTIME_UPDATE":              8,
		"DELIVERY_PROGRESS":           9,
		"DELIVERY_MANUAL_PROMOTION":   10,
		"DESIRED_STATE_STATUS_CHANGE": 11,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_prodvana_events_types_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_prodvana_events_types_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_prodvana_events_types_proto_rawDescGZIP(), []int{0}
}

type ApplyTargetStateEvent_ApplyResult int32

const (
	ApplyTargetStateEvent_UNKNOWN   ApplyTargetStateEvent_ApplyResult = 0
	ApplyTargetStateEvent_SUCCEEDED ApplyTargetStateEvent_ApplyResult = 1
	ApplyTargetStateEvent_FAILED    ApplyTargetStateEvent_ApplyResult = 2
)

// Enum value maps for ApplyTargetStateEvent_ApplyResult.
var (
	ApplyTargetStateEvent_ApplyResult_name = map[int32]string{
		0: "UNKNOWN",
		1: "SUCCEEDED",
		2: "FAILED",
	}
	ApplyTargetStateEvent_ApplyResult_value = map[string]int32{
		"UNKNOWN":   0,
		"SUCCEEDED": 1,
		"FAILED":    2,
	}
)

func (x ApplyTargetStateEvent_ApplyResult) Enum() *ApplyTargetStateEvent_ApplyResult {
	p := new(ApplyTargetStateEvent_ApplyResult)
	*p = x
	return p
}

func (x ApplyTargetStateEvent_ApplyResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApplyTargetStateEvent_ApplyResult) Descriptor() protoreflect.EnumDescriptor {
	return file_prodvana_events_types_proto_enumTypes[1].Descriptor()
}

func (ApplyTargetStateEvent_ApplyResult) Type() protoreflect.EnumType {
	return &file_prodvana_events_types_proto_enumTypes[1]
}

func (x ApplyTargetStateEvent_ApplyResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApplyTargetStateEvent_ApplyResult.Descriptor instead.
func (ApplyTargetStateEvent_ApplyResult) EnumDescriptor() ([]byte, []int) {
	return file_prodvana_events_types_proto_rawDescGZIP(), []int{2, 0}
}

type RuntimeUpdateEvent_RuntimeAction int32

const (
	RuntimeUpdateEvent_UNKNOWN          RuntimeUpdateEvent_RuntimeAction = 0
	RuntimeUpdateEvent_CREATE_OR_UPDATE RuntimeUpdateEvent_RuntimeAction = 1
	RuntimeUpdateEvent_WAIT_HEALTHY     RuntimeUpdateEvent_RuntimeAction = 2
)

// Enum value maps for RuntimeUpdateEvent_RuntimeAction.
var (
	RuntimeUpdateEvent_RuntimeAction_name = map[int32]string{
		0: "UNKNOWN",
		1: "CREATE_OR_UPDATE",
		2: "WAIT_HEALTHY",
	}
	RuntimeUpdateEvent_RuntimeAction_value = map[string]int32{
		"UNKNOWN":          0,
		"CREATE_OR_UPDATE": 1,
		"WAIT_HEALTHY":     2,
	}
)

func (x RuntimeUpdateEvent_RuntimeAction) Enum() *RuntimeUpdateEvent_RuntimeAction {
	p := new(RuntimeUpdateEvent_RuntimeAction)
	*p = x
	return p
}

func (x RuntimeUpdateEvent_RuntimeAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuntimeUpdateEvent_RuntimeAction) Descriptor() protoreflect.EnumDescriptor {
	return file_prodvana_events_types_proto_enumTypes[2].Descriptor()
}

func (RuntimeUpdateEvent_RuntimeAction) Type() protoreflect.EnumType {
	return &file_prodvana_events_types_proto_enumTypes[2]
}

func (x RuntimeUpdateEvent_RuntimeAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuntimeUpdateEvent_RuntimeAction.Descriptor instead.
func (RuntimeUpdateEvent_RuntimeAction) EnumDescriptor() ([]byte, []int) {
	return file_prodvana_events_types_proto_rawDescGZIP(), []int{9, 0}
}

type RuntimeUpdateEvent_RuntimeStatus int32

const (
	RuntimeUpdateEvent_RUNTIME_STATUS_UNKNOWN RuntimeUpdateEvent_RuntimeStatus = 0
	RuntimeUpdateEvent_PENDING                RuntimeUpdateEvent_RuntimeStatus = 1
	RuntimeUpdateEvent_SUCCESS                RuntimeUpdateEvent_RuntimeStatus = 2
	RuntimeUpdateEvent_FAILURE                RuntimeUpdateEvent_RuntimeStatus = 3
)

// Enum value maps for RuntimeUpdateEvent_RuntimeStatus.
var (
	RuntimeUpdateEvent_RuntimeStatus_name = map[int32]string{
		0: "RUNTIME_STATUS_UNKNOWN",
		1: "PENDING",
		2: "SUCCESS",
		3: "FAILURE",
	}
	RuntimeUpdateEvent_RuntimeStatus_value = map[string]int32{
		"RUNTIME_STATUS_UNKNOWN": 0,
		"PENDING":                1,
		"SUCCESS":                2,
		"FAILURE":                3,
	}
)

func (x RuntimeUpdateEvent_RuntimeStatus) Enum() *RuntimeUpdateEvent_RuntimeStatus {
	p := new(RuntimeUpdateEvent_RuntimeStatus)
	*p = x
	return p
}

func (x RuntimeUpdateEvent_RuntimeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuntimeUpdateEvent_RuntimeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_prodvana_events_types_proto_enumTypes[3].Descriptor()
}

func (RuntimeUpdateEvent_RuntimeStatus) Type() protoreflect.EnumType {
	return &file_prodvana_events_types_proto_enumTypes[3]
}

func (x RuntimeUpdateEvent_RuntimeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuntimeUpdateEvent_RuntimeStatus.Descriptor instead.
func (RuntimeUpdateEvent_RuntimeStatus) EnumDescriptor() ([]byte, []int) {
	return file_prodvana_events_types_proto_rawDescGZIP(), []int{9, 1}
}

type SetDesiredStateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 *model.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DesiredStateId     string            `protobuf:"bytes,3,opt,name=desired_state_id,json=desiredStateId,proto3" json:"desired_state_id,omitempty"`
	RootDesiredStateId string            `protobuf:"bytes,4,opt,name=root_desired_state_id,json=rootDesiredStateId,proto3" json:"root_desired_state_id,omitempty"`
	Desired            *model.State      `protobuf:"bytes,2,opt,name=desired,proto3" json:"desired,omitempty"`
	IsRollback         bool              `protobuf:"varint,5,opt,name=is_rollback,json=isRollback,proto3" json:"is_rollback,omitempty"`
}

func (x *SetDesiredStateEvent) Reset() {
	*x = SetDesiredStateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_events_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDesiredStateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDesiredStateEvent) ProtoMessage() {}

func (x *SetDesiredStateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_events_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDesiredStateEvent.ProtoReflect.Descriptor instead.
func (*SetDesiredStateEvent) Descriptor() ([]byte, []int) {
	return file_prodvana_events_types_proto_rawDescGZIP(), []int{0}
}

func (x *SetDesiredStateEvent) GetId() *model.Identifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SetDesiredStateEvent) GetDesiredStateId() string {
	if x != nil {
		return x.DesiredStateId
	}
	return ""
}

func (x *SetDesiredStateEvent) GetRootDesiredStateId() string {
	if x != nil {
		return x.RootDesiredStateId
	}
	return ""
}

func (x *SetDesiredStateEvent) GetDesired() *model.State {
	if x != nil {
		return x.Desired
	}
	return nil
}

func (x *SetDesiredStateEvent) GetIsRollback() bool {
	if x != nil {
		return x.IsRollback
	}
	return false
}

type SetTargetStateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 *model.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DesiredStateId     string            `protobuf:"bytes,8,opt,name=desired_state_id,json=desiredStateId,proto3" json:"desired_state_id,omitempty"`
	RootDesiredStateId string            `protobuf:"bytes,9,opt,name=root_desired_state_id,json=rootDesiredStateId,proto3" json:"root_desired_state_id,omitempty"`
	// state that prodvana runtime will immediately converge towards
	Target *model.State `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	// final desired state that this entity should eventually get to
	Desired *model.State `protobuf:"bytes,3,opt,name=desired,proto3" json:"desired,omitempty"`
	// current state for this entity before setting target state
	Current *model.State `protobuf:"bytes,4,opt,name=current,proto3" json:"current,omitempty"`
	// whether this is part of an automated rollback action
	IsAutoRollback bool `protobuf:"varint,5,opt,name=is_auto_rollback,json=isAutoRollback,proto3" json:"is_auto_rollback,omitempty"`
	// status and explanations at the time of SetTargetState
	Status             model.Status               `protobuf:"varint,6,opt,name=status,proto3,enum=prodvana.desired_state.model.Status" json:"status,omitempty"`
	StatusExplanations []*model.StatusExplanation `protobuf:"bytes,7,rep,name=status_explanations,json=statusExplanations,proto3" json:"status_explanations,omitempty"`
}

func (x *SetTargetStateEvent) Reset() {
	*x = SetTargetStateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_events_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTargetStateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTargetStateEvent) ProtoMessage() {}

func (x *SetTargetStateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_events_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTargetStateEvent.ProtoReflect.Descriptor instead.
func (*SetTargetStateEvent) Descriptor() ([]byte, []int) {
	return file_prodvana_events_types_proto_rawDescGZIP(), []int{1}
}

func (x *SetTargetStateEvent) GetId() *model.Identifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SetTargetStateEvent) GetDesiredStateId() string {
	if x != nil {
		return x.DesiredStateId
	}
	return ""
}

func (x *SetTargetStateEvent) GetRootDesiredStateId() string {
	if x != nil {
		return x.RootDesiredStateId
	}
	return ""
}

func (x *SetTargetStateEvent) GetTarget() *model.State {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *SetTargetStateEvent) GetDesired() *model.State {
	if x != nil {
		return x.Desired
	}
	return nil
}

func (x *SetTargetStateEvent) GetCurrent() *model.State {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *SetTargetStateEvent) GetIsAutoRollback() bool {
	if x != nil {
		return x.IsAutoRollback
	}
	return false
}

func (x *SetTargetStateEvent) GetStatus() model.Status {
	if x != nil {
		return x.Status
	}
	return model.Status(0)
}

func (x *SetTargetStateEvent) GetStatusExplanations() []*model.StatusExplanation {
	if x != nil {
		return x.StatusExplanations
	}
	return nil
}

type ApplyTargetStateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 *model.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DesiredStateId     string            `protobuf:"bytes,6,opt,name=desired_state_id,json=desiredStateId,proto3" json:"desired_state_id,omitempty"`
	RootDesiredStateId string            `protobuf:"bytes,7,opt,name=root_desired_state_id,json=rootDesiredStateId,proto3" json:"root_desired_state_id,omitempty"`
	// state that prodvana runtime will immediately converge towards
	Target *model.State `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	// current state for this entity before setting target state
	Current *model.State `protobuf:"bytes,3,opt,name=current,proto3" json:"current,omitempty"`
	// whether this is part of an automated rollback action
	IsAutoRollback bool                              `protobuf:"varint,4,opt,name=is_auto_rollback,json=isAutoRollback,proto3" json:"is_auto_rollback,omitempty"`
	Result         ApplyTargetStateEvent_ApplyResult `protobuf:"varint,5,opt,name=result,proto3,enum=prodvana.events.ApplyTargetStateEvent_ApplyResult" json:"result,omitempty"`
}

func (x *ApplyTargetStateEvent) Reset() {
	*x = ApplyTargetStateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_events_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyTargetStateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyTargetStateEvent) ProtoMessage() {}

func (x *ApplyTargetStateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_events_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyTargetStateEvent.ProtoReflect.Descriptor instead.
func (*ApplyTargetStateEvent) Descriptor() ([]byte, []int) {
	return file_prodvana_events_types_proto_rawDescGZIP(), []int{2}
}

func (x *ApplyTargetStateEvent) GetId() *model.Identifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ApplyTargetStateEvent) GetDesiredStateId() string {
	if x != nil {
		return x.DesiredStateId
	}
	return ""
}

func (x *ApplyTargetStateEvent) GetRootDesiredStateId() string {
	if x != nil {
		return x.RootDesiredStateId
	}
	return ""
}

func (x *ApplyTargetStateEvent) GetTarget() *model.State {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *ApplyTargetStateEvent) GetCurrent() *model.State {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *ApplyTargetStateEvent) GetIsAutoRollback() bool {
	if x != nil {
		return x.IsAutoRollback
	}
	return false
}

func (x *ApplyTargetStateEvent) GetResult() ApplyTargetStateEvent_ApplyResult {
	if x != nil {
		return x.Result
	}
	return ApplyTargetStateEvent_UNKNOWN
}

type ProgramExitEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace    string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Pod          string `protobuf:"bytes,2,opt,name=pod,proto3" json:"pod,omitempty"`
	Program      string `protobuf:"bytes,3,opt,name=program,proto3" json:"program,omitempty"` // in k8s, this is container name
	RestartCount int32  `protobuf:"varint,4,opt,name=restart_count,json=restartCount,proto3" json:"restart_count,omitempty"`
	Reason       string `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`                                 // reason why process exited
	KilledReason string `protobuf:"bytes,9,opt,name=killed_reason,json=killedReason,proto3" json:"killed_reason,omitempty"` // if killed, this is the reason why it was killed (best effort)
	ExitCode     int32  `protobuf:"varint,6,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Signal       int32  `protobuf:"varint,7,opt,name=signal,proto3" json:"signal,omitempty"` // signal used to terminate this process, if any
	Logs         []byte `protobuf:"bytes,8,opt,name=logs,proto3" json:"logs,omitempty"`      // next tag: 10
}

func (x *ProgramExitEvent) Reset() {
	*x = ProgramExitEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_events_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgramExitEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgramExitEvent) ProtoMessage() {}

func (x *ProgramExitEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_events_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgramExitEvent.ProtoReflect.Descriptor instead.
func (*ProgramExitEvent) Descriptor() ([]byte, []int) {
	return file_prodvana_events_types_proto_rawDescGZIP(), []int{3}
}

func (x *ProgramExitEvent) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ProgramExitEvent) GetPod() string {
	if x != nil {
		return x.Pod
	}
	return ""
}

func (x *ProgramExitEvent) GetProgram() string {
	if x != nil {
		return x.Program
	}
	return ""
}

func (x *ProgramExitEvent) GetRestartCount() int32 {
	if x != nil {
		return x.RestartCount
	}
	return 0
}

func (x *ProgramExitEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ProgramExitEvent) GetKilledReason() string {
	if x != nil {
		return x.KilledReason
	}
	return ""
}

func (x *ProgramExitEvent) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ProgramExitEvent) GetSignal() int32 {
	if x != nil {
		return x.Signal
	}
	return 0
}

func (x *ProgramExitEvent) GetLogs() []byte {
	if x != nil {
		return x.Logs
	}
	return nil
}

type DeliveryProgressEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *model.DeliveryState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *DeliveryProgressEvent) Reset() {
	*x = DeliveryProgressEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_events_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryProgressEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryProgressEvent) ProtoMessage() {}

func (x *DeliveryProgressEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_events_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryProgressEvent.ProtoReflect.Descriptor instead.
func (*DeliveryProgressEvent) Descriptor() ([]byte, []int) {
	return file_prodvana_events_types_proto_rawDescGZIP(), []int{4}
}

func (x *DeliveryProgressEvent) GetState() *model.DeliveryState {
	if x != nil {
		return x.State
	}
	return nil
}

type DeliveryManualPromotionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *model.DeliveryState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Stage int64                `protobuf:"varint,2,opt,name=stage,proto3" json:"stage,omitempty"`
	Full  bool                 `protobuf:"varint,3,opt,name=full,proto3" json:"full,omitempty"`
}

func (x *DeliveryManualPromotionEvent) Reset() {
	*x = DeliveryManualPromotionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_events_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryManualPromotionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryManualPromotionEvent) ProtoMessage() {}

func (x *DeliveryManualPromotionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_events_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryManualPromotionEvent.ProtoReflect.Descriptor instead.
func (*DeliveryManualPromotionEvent) Descriptor() ([]byte, []int) {
	return file_prodvana_events_types_proto_rawDescGZIP(), []int{5}
}

func (x *DeliveryManualPromotionEvent) GetState() *model.DeliveryState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *DeliveryManualPromotionEvent) GetStage() int64 {
	if x != nil {
		return x.Stage
	}
	return 0
}

func (x *DeliveryManualPromotionEvent) GetFull() bool {
	if x != nil {
		return x.Full
	}
	return false
}

type ManualApprovalEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Approved/rejected?
	Status model.ManualApprovalStatus `protobuf:"varint,1,opt,name=status,proto3,enum=prodvana.desired_state.model.ManualApprovalStatus" json:"status,omitempty"`
	Topic  string                     `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"` // Actor etc ...
}

func (x *ManualApprovalEvent) Reset() {
	*x = ManualApprovalEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_events_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualApprovalEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualApprovalEvent) ProtoMessage() {}

func (x *ManualApprovalEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_events_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualApprovalEvent.ProtoReflect.Descriptor instead.
func (*ManualApprovalEvent) Descriptor() ([]byte, []int) {
	return file_prodvana_events_types_proto_rawDescGZIP(), []int{6}
}

func (x *ManualApprovalEvent) GetStatus() model.ManualApprovalStatus {
	if x != nil {
		return x.Status
	}
	return model.ManualApprovalStatus(0)
}

func (x *ManualApprovalEvent) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type CustomTaskExecutionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool   `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	Attempts   int32  `protobuf:"varint,2,opt,name=attempts,proto3" json:"attempts,omitempty"`
	Reason     string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"` // Why did this job exit/fail?
	Logs       []byte `protobuf:"bytes,4,opt,name=logs,proto3" json:"logs,omitempty"`
}

func (x *CustomTaskExecutionEvent) Reset() {
	*x = CustomTaskExecutionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_events_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomTaskExecutionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomTaskExecutionEvent) ProtoMessage() {}

func (x *CustomTaskExecutionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_events_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomTaskExecutionEvent.ProtoReflect.Descriptor instead.
func (*CustomTaskExecutionEvent) Descriptor() ([]byte, []int) {
	return file_prodvana_events_types_proto_rawDescGZIP(), []int{7}
}

func (x *CustomTaskExecutionEvent) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *CustomTaskExecutionEvent) GetAttempts() int32 {
	if x != nil {
		return x.Attempts
	}
	return 0
}

func (x *CustomTaskExecutionEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *CustomTaskExecutionEvent) GetLogs() []byte {
	if x != nil {
		return x.Logs
	}
	return nil
}

type RuntimeObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // name of object as it appears in the runtime layer
	Kind      string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"` // optional, depends on if runtime has support for it
	Url       string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`             // optional, depends on if there is a unique URL to view this object.
}

func (x *RuntimeObject) Reset() {
	*x = RuntimeObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_events_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeObject) ProtoMessage() {}

func (x *RuntimeObject) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_events_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeObject.ProtoReflect.Descriptor instead.
func (*RuntimeObject) Descriptor() ([]byte, []int) {
	return file_prodvana_events_types_proto_rawDescGZIP(), []int{8}
}

func (x *RuntimeObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuntimeObject) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *RuntimeObject) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RuntimeObject) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type RuntimeUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action RuntimeUpdateEvent_RuntimeAction `protobuf:"varint,1,opt,name=action,proto3,enum=prodvana.events.RuntimeUpdateEvent_RuntimeAction" json:"action,omitempty"`
	Object *RuntimeObject                   `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	Status RuntimeUpdateEvent_RuntimeStatus `protobuf:"varint,3,opt,name=status,proto3,enum=prodvana.events.RuntimeUpdateEvent_RuntimeStatus" json:"status,omitempty"`
}

func (x *RuntimeUpdateEvent) Reset() {
	*x = RuntimeUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_events_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeUpdateEvent) ProtoMessage() {}

func (x *RuntimeUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_events_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeUpdateEvent.ProtoReflect.Descriptor instead.
func (*RuntimeUpdateEvent) Descriptor() ([]byte, []int) {
	return file_prodvana_events_types_proto_rawDescGZIP(), []int{9}
}

func (x *RuntimeUpdateEvent) GetAction() RuntimeUpdateEvent_RuntimeAction {
	if x != nil {
		return x.Action
	}
	return RuntimeUpdateEvent_UNKNOWN
}

func (x *RuntimeUpdateEvent) GetObject() *RuntimeObject {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *RuntimeUpdateEvent) GetStatus() RuntimeUpdateEvent_RuntimeStatus {
	if x != nil {
		return x.Status
	}
	return RuntimeUpdateEvent_RUNTIME_STATUS_UNKNOWN
}

type DesiredStateStatusChangeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 *model.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DesiredStateId     string            `protobuf:"bytes,2,opt,name=desired_state_id,json=desiredStateId,proto3" json:"desired_state_id,omitempty"`
	RootDesiredStateId string            `protobuf:"bytes,3,opt,name=root_desired_state_id,json=rootDesiredStateId,proto3" json:"root_desired_state_id,omitempty"`
	OldStatus          model.Status      `protobuf:"varint,4,opt,name=old_status,json=oldStatus,proto3,enum=prodvana.desired_state.model.Status" json:"old_status,omitempty"`
	NewStatus          model.Status      `protobuf:"varint,5,opt,name=new_status,json=newStatus,proto3,enum=prodvana.desired_state.model.Status" json:"new_status,omitempty"`
}

func (x *DesiredStateStatusChangeEvent) Reset() {
	*x = DesiredStateStatusChangeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_events_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DesiredStateStatusChangeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesiredStateStatusChangeEvent) ProtoMessage() {}

func (x *DesiredStateStatusChangeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_events_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesiredStateStatusChangeEvent.ProtoReflect.Descriptor instead.
func (*DesiredStateStatusChangeEvent) Descriptor() ([]byte, []int) {
	return file_prodvana_events_types_proto_rawDescGZIP(), []int{10}
}

func (x *DesiredStateStatusChangeEvent) GetId() *model.Identifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DesiredStateStatusChangeEvent) GetDesiredStateId() string {
	if x != nil {
		return x.DesiredStateId
	}
	return ""
}

func (x *DesiredStateStatusChangeEvent) GetRootDesiredStateId() string {
	if x != nil {
		return x.RootDesiredStateId
	}
	return ""
}

func (x *DesiredStateStatusChangeEvent) GetOldStatus() model.Status {
	if x != nil {
		return x.OldStatus
	}
	return model.Status(0)
}

func (x *DesiredStateStatusChangeEvent) GetNewStatus() model.Status {
	if x != nil {
		return x.NewStatus
	}
	return model.Status(0)
}

type EventDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Details:
	//
	//	*EventDetails_SetDesiredState
	//	*EventDetails_SetTargetState
	//	*EventDetails_ProgramExit
	//	*EventDetails_ApplyTargetState
	//	*EventDetails_ManualApproval
	//	*EventDetails_CustomTaskExecution
	//	*EventDetails_RuntimeUpdate
	//	*EventDetails_DeliveryProgress
	//	*EventDetails_DeliveryPromotion
	//	*EventDetails_DesiredStateStatusChange
	Details isEventDetails_Details `protobuf_oneof:"details"`
}

func (x *EventDetails) Reset() {
	*x = EventDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_events_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDetails) ProtoMessage() {}

func (x *EventDetails) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_events_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDetails.ProtoReflect.Descriptor instead.
func (*EventDetails) Descriptor() ([]byte, []int) {
	return file_prodvana_events_types_proto_rawDescGZIP(), []int{11}
}

func (m *EventDetails) GetDetails() isEventDetails_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (x *EventDetails) GetSetDesiredState() *SetDesiredStateEvent {
	if x, ok := x.GetDetails().(*EventDetails_SetDesiredState); ok {
		return x.SetDesiredState
	}
	return nil
}

func (x *EventDetails) GetSetTargetState() *SetTargetStateEvent {
	if x, ok := x.GetDetails().(*EventDetails_SetTargetState); ok {
		return x.SetTargetState
	}
	return nil
}

func (x *EventDetails) GetProgramExit() *ProgramExitEvent {
	if x, ok := x.GetDetails().(*EventDetails_ProgramExit); ok {
		return x.ProgramExit
	}
	return nil
}

func (x *EventDetails) GetApplyTargetState() *ApplyTargetStateEvent {
	if x, ok := x.GetDetails().(*EventDetails_ApplyTargetState); ok {
		return x.ApplyTargetState
	}
	return nil
}

func (x *EventDetails) GetManualApproval() *ManualApprovalEvent {
	if x, ok := x.GetDetails().(*EventDetails_ManualApproval); ok {
		return x.ManualApproval
	}
	return nil
}

func (x *EventDetails) GetCustomTaskExecution() *CustomTaskExecutionEvent {
	if x, ok := x.GetDetails().(*EventDetails_CustomTaskExecution); ok {
		return x.CustomTaskExecution
	}
	return nil
}

func (x *EventDetails) GetRuntimeUpdate() *RuntimeUpdateEvent {
	if x, ok := x.GetDetails().(*EventDetails_RuntimeUpdate); ok {
		return x.RuntimeUpdate
	}
	return nil
}

func (x *EventDetails) GetDeliveryProgress() *DeliveryProgressEvent {
	if x, ok := x.GetDetails().(*EventDetails_DeliveryProgress); ok {
		return x.DeliveryProgress
	}
	return nil
}

func (x *EventDetails) GetDeliveryPromotion() *DeliveryManualPromotionEvent {
	if x, ok := x.GetDetails().(*EventDetails_DeliveryPromotion); ok {
		return x.DeliveryPromotion
	}
	return nil
}

func (x *EventDetails) GetDesiredStateStatusChange() *DesiredStateStatusChangeEvent {
	if x, ok := x.GetDetails().(*EventDetails_DesiredStateStatusChange); ok {
		return x.DesiredStateStatusChange
	}
	return nil
}

type isEventDetails_Details interface {
	isEventDetails_Details()
}

type EventDetails_SetDesiredState struct {
	SetDesiredState *SetDesiredStateEvent `protobuf:"bytes,1,opt,name=set_desired_state,json=setDesiredState,proto3,oneof"`
}

type EventDetails_SetTargetState struct {
	SetTargetState *SetTargetStateEvent `protobuf:"bytes,2,opt,name=set_target_state,json=setTargetState,proto3,oneof"`
}

type EventDetails_ProgramExit struct {
	ProgramExit *ProgramExitEvent `protobuf:"bytes,3,opt,name=program_exit,json=programExit,proto3,oneof"`
}

type EventDetails_ApplyTargetState struct {
	ApplyTargetState *ApplyTargetStateEvent `protobuf:"bytes,4,opt,name=apply_target_state,json=applyTargetState,proto3,oneof"`
}

type EventDetails_ManualApproval struct {
	ManualApproval *ManualApprovalEvent `protobuf:"bytes,6,opt,name=manual_approval,json=manualApproval,proto3,oneof"`
}

type EventDetails_CustomTaskExecution struct {
	CustomTaskExecution *CustomTaskExecutionEvent `protobuf:"bytes,7,opt,name=custom_task_execution,json=customTaskExecution,proto3,oneof"`
}

type EventDetails_RuntimeUpdate struct {
	RuntimeUpdate *RuntimeUpdateEvent `protobuf:"bytes,8,opt,name=runtime_update,json=runtimeUpdate,proto3,oneof"`
}

type EventDetails_DeliveryProgress struct {
	DeliveryProgress *DeliveryProgressEvent `protobuf:"bytes,9,opt,name=delivery_progress,json=deliveryProgress,proto3,oneof"`
}

type EventDetails_DeliveryPromotion struct {
	DeliveryPromotion *DeliveryManualPromotionEvent `protobuf:"bytes,10,opt,name=delivery_promotion,json=deliveryPromotion,proto3,oneof"`
}

type EventDetails_DesiredStateStatusChange struct {
	DesiredStateStatusChange *DesiredStateStatusChangeEvent `protobuf:"bytes,11,opt,name=desired_state_status_change,json=desiredStateStatusChange,proto3,oneof"`
}

func (*EventDetails_SetDesiredState) isEventDetails_Details() {}

func (*EventDetails_SetTargetState) isEventDetails_Details() {}

func (*EventDetails_ProgramExit) isEventDetails_Details() {}

func (*EventDetails_ApplyTargetState) isEventDetails_Details() {}

func (*EventDetails_ManualApproval) isEventDetails_Details() {}

func (*EventDetails_CustomTaskExecution) isEventDetails_Details() {}

func (*EventDetails_RuntimeUpdate) isEventDetails_Details() {}

func (*EventDetails_DeliveryProgress) isEventDetails_Details() {}

func (*EventDetails_DeliveryPromotion) isEventDetails_Details() {}

func (*EventDetails_DesiredStateStatusChange) isEventDetails_Details() {}

var File_prodvana_events_types_proto protoreflect.FileDescriptor

var file_prodvana_events_types_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x30,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x64, 0x65, 0x73,
	0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8d, 0x02, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64,
	0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x31, 0x0a,
	0x15, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x6f,
	0x6f, 0x74, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x3d, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x64, 0x65, 0x73,
	0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x22, 0xb1, 0x04, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65,
	0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15,
	0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x6f, 0x6f,
	0x74, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x3b, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72,
	0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x3d, 0x0a, 0x07,
	0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73,
	0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x6f, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x60, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x65, 0x78, 0x70,
	0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72,
	0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x12, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0xd7, 0x03, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x69,
	0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x69, 0x72,
	0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x72, 0x6f, 0x6f, 0x74, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x64,
	0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x72, 0x6f, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x41,
	0x75, 0x74, 0x6f, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x4a, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x35, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0x87,
	0x02, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x45, 0x78, 0x69, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x70, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x6b, 0x69,
	0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x5a, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x41, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x64, 0x65, 0x73, 0x69,
	0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x75, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x66, 0x75,
	0x6c, 0x6c, 0x22, 0x77, 0x0a, 0x13, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x76, 0x61, 0x6e, 0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x82, 0x01, 0x0a, 0x18,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x6f, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73,
	0x22, 0x67, 0x0a, 0x0d, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xfc, 0x02, 0x0a, 0x12, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x49, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x49, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x44,
	0x0a, 0x0d, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x52, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x4c, 0x54,
	0x48, 0x59, 0x10, 0x02, 0x22, 0x52, 0x0a, 0x0d, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x55, 0x4e, 0x54, 0x49, 0x4d, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x46,
	0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x03, 0x22, 0xc0, 0x02, 0x0a, 0x1d, 0x44, 0x65, 0x73,
	0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e,
	0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x31,
	0x0a, 0x15, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72,
	0x6f, 0x6f, 0x74, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x43, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x6f, 0x6c, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x43, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x09, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8e, 0x07, 0x0a, 0x0c,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x53, 0x0a, 0x11,
	0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x73,
	0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x0f, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x50, 0x0a, 0x10, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x65,
	0x78, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x45, 0x78, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x45, 0x78, 0x69, 0x74, 0x12, 0x56, 0x0a, 0x12, 0x61,
	0x70, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x5f, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d,
	0x61, 0x6e, 0x75, 0x61, 0x6c, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x12, 0x5f, 0x0a, 0x15, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x55, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x5e, 0x0a, 0x12, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e,
	0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x11, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6f, 0x0a, 0x1b, 0x64, 0x65,
	0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x18, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x2a, 0x90, 0x02, 0x0a,
	0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x54, 0x5f, 0x44,
	0x45, 0x53, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x45, 0x54, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x41, 0x4d, 0x5f,
	0x45, 0x58, 0x49, 0x54, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x5f,
	0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x04, 0x12, 0x13,
	0x0a, 0x0f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x41,
	0x4c, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x54, 0x41,
	0x53, 0x4b, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x07, 0x12, 0x12,
	0x0a, 0x0e, 0x52, 0x55, 0x4e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x50,
	0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x09, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x45, 0x4c,
	0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f,
	0x4d, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0a, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x45, 0x53, 0x49,
	0x52, 0x45, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x0b, 0x22, 0x04, 0x08, 0x05, 0x10, 0x05, 0x42,
	0x4b, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2d,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prodvana_events_types_proto_rawDescOnce sync.Once
	file_prodvana_events_types_proto_rawDescData = file_prodvana_events_types_proto_rawDesc
)

func file_prodvana_events_types_proto_rawDescGZIP() []byte {
	file_prodvana_events_types_proto_rawDescOnce.Do(func() {
		file_prodvana_events_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_prodvana_events_types_proto_rawDescData)
	})
	return file_prodvana_events_types_proto_rawDescData
}

var file_prodvana_events_types_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_prodvana_events_types_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_prodvana_events_types_proto_goTypes = []interface{}{
	(EventType)(0),                         // 0: prodvana.events.EventType
	(ApplyTargetStateEvent_ApplyResult)(0), // 1: prodvana.events.ApplyTargetStateEvent.ApplyResult
	(RuntimeUpdateEvent_RuntimeAction)(0),  // 2: prodvana.events.RuntimeUpdateEvent.RuntimeAction
	(RuntimeUpdateEvent_RuntimeStatus)(0),  // 3: prodvana.events.RuntimeUpdateEvent.RuntimeStatus
	(*SetDesiredStateEvent)(nil),           // 4: prodvana.events.SetDesiredStateEvent
	(*SetTargetStateEvent)(nil),            // 5: prodvana.events.SetTargetStateEvent
	(*ApplyTargetStateEvent)(nil),          // 6: prodvana.events.ApplyTargetStateEvent
	(*ProgramExitEvent)(nil),               // 7: prodvana.events.ProgramExitEvent
	(*DeliveryProgressEvent)(nil),          // 8: prodvana.events.DeliveryProgressEvent
	(*DeliveryManualPromotionEvent)(nil),   // 9: prodvana.events.DeliveryManualPromotionEvent
	(*ManualApprovalEvent)(nil),            // 10: prodvana.events.ManualApprovalEvent
	(*CustomTaskExecutionEvent)(nil),       // 11: prodvana.events.CustomTaskExecutionEvent
	(*RuntimeObject)(nil),                  // 12: prodvana.events.RuntimeObject
	(*RuntimeUpdateEvent)(nil),             // 13: prodvana.events.RuntimeUpdateEvent
	(*DesiredStateStatusChangeEvent)(nil),  // 14: prodvana.events.DesiredStateStatusChangeEvent
	(*EventDetails)(nil),                   // 15: prodvana.events.EventDetails
	(*model.Identifier)(nil),               // 16: prodvana.desired_state.model.Identifier
	(*model.State)(nil),                    // 17: prodvana.desired_state.model.State
	(model.Status)(0),                      // 18: prodvana.desired_state.model.Status
	(*model.StatusExplanation)(nil),        // 19: prodvana.desired_state.model.StatusExplanation
	(*model.DeliveryState)(nil),            // 20: prodvana.desired_state.model.DeliveryState
	(model.ManualApprovalStatus)(0),        // 21: prodvana.desired_state.model.ManualApprovalStatus
}
var file_prodvana_events_types_proto_depIdxs = []int32{
	16, // 0: prodvana.events.SetDesiredStateEvent.id:type_name -> prodvana.desired_state.model.Identifier
	17, // 1: prodvana.events.SetDesiredStateEvent.desired:type_name -> prodvana.desired_state.model.State
	16, // 2: prodvana.events.SetTargetStateEvent.id:type_name -> prodvana.desired_state.model.Identifier
	17, // 3: prodvana.events.SetTargetStateEvent.target:type_name -> prodvana.desired_state.model.State
	17, // 4: prodvana.events.SetTargetStateEvent.desired:type_name -> prodvana.desired_state.model.State
	17, // 5: prodvana.events.SetTargetStateEvent.current:type_name -> prodvana.desired_state.model.State
	18, // 6: prodvana.events.SetTargetStateEvent.status:type_name -> prodvana.desired_state.model.Status
	19, // 7: prodvana.events.SetTargetStateEvent.status_explanations:type_name -> prodvana.desired_state.model.StatusExplanation
	16, // 8: prodvana.events.ApplyTargetStateEvent.id:type_name -> prodvana.desired_state.model.Identifier
	17, // 9: prodvana.events.ApplyTargetStateEvent.target:type_name -> prodvana.desired_state.model.State
	17, // 10: prodvana.events.ApplyTargetStateEvent.current:type_name -> prodvana.desired_state.model.State
	1,  // 11: prodvana.events.ApplyTargetStateEvent.result:type_name -> prodvana.events.ApplyTargetStateEvent.ApplyResult
	20, // 12: prodvana.events.DeliveryProgressEvent.state:type_name -> prodvana.desired_state.model.DeliveryState
	20, // 13: prodvana.events.DeliveryManualPromotionEvent.state:type_name -> prodvana.desired_state.model.DeliveryState
	21, // 14: prodvana.events.ManualApprovalEvent.status:type_name -> prodvana.desired_state.model.ManualApprovalStatus
	2,  // 15: prodvana.events.RuntimeUpdateEvent.action:type_name -> prodvana.events.RuntimeUpdateEvent.RuntimeAction
	12, // 16: prodvana.events.RuntimeUpdateEvent.object:type_name -> prodvana.events.RuntimeObject
	3,  // 17: prodvana.events.RuntimeUpdateEvent.status:type_name -> prodvana.events.RuntimeUpdateEvent.RuntimeStatus
	16, // 18: prodvana.events.DesiredStateStatusChangeEvent.id:type_name -> prodvana.desired_state.model.Identifier
	18, // 19: prodvana.events.DesiredStateStatusChangeEvent.old_status:type_name -> prodvana.desired_state.model.Status
	18, // 20: prodvana.events.DesiredStateStatusChangeEvent.new_status:type_name -> prodvana.desired_state.model.Status
	4,  // 21: prodvana.events.EventDetails.set_desired_state:type_name -> prodvana.events.SetDesiredStateEvent
	5,  // 22: prodvana.events.EventDetails.set_target_state:type_name -> prodvana.events.SetTargetStateEvent
	7,  // 23: prodvana.events.EventDetails.program_exit:type_name -> prodvana.events.ProgramExitEvent
	6,  // 24: prodvana.events.EventDetails.apply_target_state:type_name -> prodvana.events.ApplyTargetStateEvent
	10, // 25: prodvana.events.EventDetails.manual_approval:type_name -> prodvana.events.ManualApprovalEvent
	11, // 26: prodvana.events.EventDetails.custom_task_execution:type_name -> prodvana.events.CustomTaskExecutionEvent
	13, // 27: prodvana.events.EventDetails.runtime_update:type_name -> prodvana.events.RuntimeUpdateEvent
	8,  // 28: prodvana.events.EventDetails.delivery_progress:type_name -> prodvana.events.DeliveryProgressEvent
	9,  // 29: prodvana.events.EventDetails.delivery_promotion:type_name -> prodvana.events.DeliveryManualPromotionEvent
	14, // 30: prodvana.events.EventDetails.desired_state_status_change:type_name -> prodvana.events.DesiredStateStatusChangeEvent
	31, // [31:31] is the sub-list for method output_type
	31, // [31:31] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_prodvana_events_types_proto_init() }
func file_prodvana_events_types_proto_init() {
	if File_prodvana_events_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_prodvana_events_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDesiredStateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_events_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTargetStateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_events_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyTargetStateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_events_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgramExitEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_events_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryProgressEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_events_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryManualPromotionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_events_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualApprovalEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_events_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomTaskExecutionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_events_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_events_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_events_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DesiredStateStatusChangeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_events_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_prodvana_events_types_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*EventDetails_SetDesiredState)(nil),
		(*EventDetails_SetTargetState)(nil),
		(*EventDetails_ProgramExit)(nil),
		(*EventDetails_ApplyTargetState)(nil),
		(*EventDetails_ManualApproval)(nil),
		(*EventDetails_CustomTaskExecution)(nil),
		(*EventDetails_RuntimeUpdate)(nil),
		(*EventDetails_DeliveryProgress)(nil),
		(*EventDetails_DeliveryPromotion)(nil),
		(*EventDetails_DesiredStateStatusChange)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prodvana_events_types_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_prodvana_events_types_proto_goTypes,
		DependencyIndexes: file_prodvana_events_types_proto_depIdxs,
		EnumInfos:         file_prodvana_events_types_proto_enumTypes,
		MessageInfos:      file_prodvana_events_types_proto_msgTypes,
	}.Build()
	File_prodvana_events_types_proto = out.File
	file_prodvana_events_types_proto_rawDesc = nil
	file_prodvana_events_types_proto_goTypes = nil
	file_prodvana_events_types_proto_depIdxs = nil
}
