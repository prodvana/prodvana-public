// Code generated by protoc-gen-go-vtproto. DO NOT EDIT.
// protoc-gen-go-vtproto version: v0.6.0
// source: prodvana/events/events.proto

package events

import (
	timestamppb1 "github.com/planetscale/vtprotobuf/types/known/timestamppb"
	proto "google.golang.org/protobuf/proto"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

func (m *Event) CloneVT() *Event {
	if m == nil {
		return (*Event)(nil)
	}
	r := new(Event)
	r.Id = m.Id
	r.Type = m.Type
	r.Title = m.Title
	r.Details = m.Details.CloneVT()
	r.Timestamp = (*timestamppb.Timestamp)((*timestamppb1.Timestamp)(m.Timestamp).CloneVT())
	r.RelatedObjects = m.RelatedObjects.CloneVT()
	r.Source = m.Source
	r.SourceMetadata = m.SourceMetadata.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *Event) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *RelatedObjects) CloneVT() *RelatedObjects {
	if m == nil {
		return (*RelatedObjects)(nil)
	}
	r := new(RelatedObjects)
	r.ApplicationId = m.ApplicationId
	r.ServiceId = m.ServiceId
	r.ReleaseChannelId = m.ReleaseChannelId
	r.DesiredStateId = m.DesiredStateId
	r.RootDesiredStateId = m.RootDesiredStateId
	r.ReleaseId = m.ReleaseId
	r.RuntimeId = m.RuntimeId
	if rhs := m.ExternalLogs; rhs != nil {
		tmpContainer := make(map[string]string, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v
		}
		r.ExternalLogs = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *RelatedObjects) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (this *Event) StableEqualVT(that *Event) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Id != that.Id {
		return false
	}
	if this.Type != that.Type {
		return false
	}
	if this.Title != that.Title {
		return false
	}
	if !this.Details.StableEqualVT(that.Details) {
		return false
	}
	if !(*timestamppb1.Timestamp)(this.Timestamp).StableEqualVT((*timestamppb1.Timestamp)(that.Timestamp)) {
		return false
	}
	if !this.RelatedObjects.StableEqualVT(that.RelatedObjects) {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if !this.SourceMetadata.StableEqualVT(that.SourceMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *Event) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*Event)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *Event) EqualVT(that *Event) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Id != that.Id {
		return false
	}
	if this.Type != that.Type {
		return false
	}
	if this.Title != that.Title {
		return false
	}
	if !this.Details.EqualVT(that.Details) {
		return false
	}
	if !(*timestamppb1.Timestamp)(this.Timestamp).EqualVT((*timestamppb1.Timestamp)(that.Timestamp)) {
		return false
	}
	if !this.RelatedObjects.EqualVT(that.RelatedObjects) {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if !this.SourceMetadata.EqualVT(that.SourceMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *Event) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*Event)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *RelatedObjects) StableEqualVT(that *RelatedObjects) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.ApplicationId != that.ApplicationId {
		return false
	}
	if this.ServiceId != that.ServiceId {
		return false
	}
	if this.ReleaseChannelId != that.ReleaseChannelId {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	if this.RootDesiredStateId != that.RootDesiredStateId {
		return false
	}
	if this.RuntimeId != that.RuntimeId {
		return false
	}
	if len(this.ExternalLogs) != len(that.ExternalLogs) {
		return false
	}
	for i, vx := range this.ExternalLogs {
		vy, ok := that.ExternalLogs[i]
		if !ok {
			return false
		}
		if vx != vy {
			return false
		}
	}
	if this.ReleaseId != that.ReleaseId {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *RelatedObjects) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*RelatedObjects)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *RelatedObjects) EqualVT(that *RelatedObjects) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.ApplicationId != that.ApplicationId {
		return false
	}
	if this.ServiceId != that.ServiceId {
		return false
	}
	if this.ReleaseChannelId != that.ReleaseChannelId {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	if this.RootDesiredStateId != that.RootDesiredStateId {
		return false
	}
	if this.RuntimeId != that.RuntimeId {
		return false
	}
	if len(this.ExternalLogs) != len(that.ExternalLogs) {
		return false
	}
	for i, vx := range this.ExternalLogs {
		vy, ok := that.ExternalLogs[i]
		if !ok {
			return false
		}
		if vx != vy {
			return false
		}
	}
	if this.ReleaseId != that.ReleaseId {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *RelatedObjects) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*RelatedObjects)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
