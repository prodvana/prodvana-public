// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.21.10
// source: prodvana/events/events_manager.proto

package events

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceLookup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Application string `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
	Service     string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *ServiceLookup) Reset() {
	*x = ServiceLookup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_events_events_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceLookup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceLookup) ProtoMessage() {}

func (x *ServiceLookup) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_events_events_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceLookup.ProtoReflect.Descriptor instead.
func (*ServiceLookup) Descriptor() ([]byte, []int) {
	return file_prodvana_events_events_manager_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceLookup) GetApplication() string {
	if x != nil {
		return x.Application
	}
	return ""
}

func (x *ServiceLookup) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type ReleaseChannelLookup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Application    string `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
	ReleaseChannel string `protobuf:"bytes,2,opt,name=release_channel,json=releaseChannel,proto3" json:"release_channel,omitempty"`
}

func (x *ReleaseChannelLookup) Reset() {
	*x = ReleaseChannelLookup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_events_events_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseChannelLookup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseChannelLookup) ProtoMessage() {}

func (x *ReleaseChannelLookup) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_events_events_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseChannelLookup.ProtoReflect.Descriptor instead.
func (*ReleaseChannelLookup) Descriptor() ([]byte, []int) {
	return file_prodvana_events_events_manager_proto_rawDescGZIP(), []int{1}
}

func (x *ReleaseChannelLookup) GetApplication() string {
	if x != nil {
		return x.Application
	}
	return ""
}

func (x *ReleaseChannelLookup) GetReleaseChannel() string {
	if x != nil {
		return x.ReleaseChannel
	}
	return ""
}

type Lookup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to LookupOneof:
	//
	//	*Lookup_RootDesiredStateId
	//	*Lookup_DesiredStateId
	//	*Lookup_Service
	//	*Lookup_ReleaseChannel
	//	*Lookup_ReleaseId
	LookupOneof isLookup_LookupOneof `protobuf_oneof:"lookup_oneof"`
}

func (x *Lookup) Reset() {
	*x = Lookup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_events_events_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lookup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lookup) ProtoMessage() {}

func (x *Lookup) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_events_events_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lookup.ProtoReflect.Descriptor instead.
func (*Lookup) Descriptor() ([]byte, []int) {
	return file_prodvana_events_events_manager_proto_rawDescGZIP(), []int{2}
}

func (m *Lookup) GetLookupOneof() isLookup_LookupOneof {
	if m != nil {
		return m.LookupOneof
	}
	return nil
}

func (x *Lookup) GetRootDesiredStateId() string {
	if x, ok := x.GetLookupOneof().(*Lookup_RootDesiredStateId); ok {
		return x.RootDesiredStateId
	}
	return ""
}

func (x *Lookup) GetDesiredStateId() string {
	if x, ok := x.GetLookupOneof().(*Lookup_DesiredStateId); ok {
		return x.DesiredStateId
	}
	return ""
}

func (x *Lookup) GetService() *ServiceLookup {
	if x, ok := x.GetLookupOneof().(*Lookup_Service); ok {
		return x.Service
	}
	return nil
}

func (x *Lookup) GetReleaseChannel() *ReleaseChannelLookup {
	if x, ok := x.GetLookupOneof().(*Lookup_ReleaseChannel); ok {
		return x.ReleaseChannel
	}
	return nil
}

func (x *Lookup) GetReleaseId() string {
	if x, ok := x.GetLookupOneof().(*Lookup_ReleaseId); ok {
		return x.ReleaseId
	}
	return ""
}

type isLookup_LookupOneof interface {
	isLookup_LookupOneof()
}

type Lookup_RootDesiredStateId struct {
	RootDesiredStateId string `protobuf:"bytes,1,opt,name=root_desired_state_id,json=rootDesiredStateId,proto3,oneof"`
}

type Lookup_DesiredStateId struct {
	DesiredStateId string `protobuf:"bytes,3,opt,name=desired_state_id,json=desiredStateId,proto3,oneof"`
}

type Lookup_Service struct {
	Service *ServiceLookup `protobuf:"bytes,4,opt,name=service,proto3,oneof"`
}

type Lookup_ReleaseChannel struct {
	ReleaseChannel *ReleaseChannelLookup `protobuf:"bytes,5,opt,name=release_channel,json=releaseChannel,proto3,oneof"`
}

type Lookup_ReleaseId struct {
	ReleaseId string `protobuf:"bytes,6,opt,name=release_id,json=releaseId,proto3,oneof"`
}

func (*Lookup_RootDesiredStateId) isLookup_LookupOneof() {}

func (*Lookup_DesiredStateId) isLookup_LookupOneof() {}

func (*Lookup_Service) isLookup_LookupOneof() {}

func (*Lookup_ReleaseChannel) isLookup_LookupOneof() {}

func (*Lookup_ReleaseId) isLookup_LookupOneof() {}

type GetEventsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lookups []*Lookup `protobuf:"bytes,1,rep,name=lookups,proto3" json:"lookups,omitempty"`
	// empty means to include all types
	Types               []EventType            `protobuf:"varint,2,rep,packed,name=types,proto3,enum=prodvana.events.EventType" json:"types,omitempty"`
	PageToken           string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize            int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	OrderByAscTimestamp bool                   `protobuf:"varint,6,opt,name=order_by_asc_timestamp,json=orderByAscTimestamp,proto3" json:"order_by_asc_timestamp,omitempty"`
	UseOr               bool                   `protobuf:"varint,7,opt,name=useOr,proto3" json:"useOr,omitempty"`
	BeforeTimestamp     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=before_timestamp,json=beforeTimestamp,proto3" json:"before_timestamp,omitempty"`
	AfterTimestamp      *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=after_timestamp,json=afterTimestamp,proto3" json:"after_timestamp,omitempty"`
}

func (x *GetEventsReq) Reset() {
	*x = GetEventsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_events_events_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsReq) ProtoMessage() {}

func (x *GetEventsReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_events_events_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsReq.ProtoReflect.Descriptor instead.
func (*GetEventsReq) Descriptor() ([]byte, []int) {
	return file_prodvana_events_events_manager_proto_rawDescGZIP(), []int{3}
}

func (x *GetEventsReq) GetLookups() []*Lookup {
	if x != nil {
		return x.Lookups
	}
	return nil
}

func (x *GetEventsReq) GetTypes() []EventType {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *GetEventsReq) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *GetEventsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetEventsReq) GetOrderByAscTimestamp() bool {
	if x != nil {
		return x.OrderByAscTimestamp
	}
	return false
}

func (x *GetEventsReq) GetUseOr() bool {
	if x != nil {
		return x.UseOr
	}
	return false
}

func (x *GetEventsReq) GetBeforeTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.BeforeTimestamp
	}
	return nil
}

func (x *GetEventsReq) GetAfterTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.AfterTimestamp
	}
	return nil
}

type GetEventsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events        []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	NextPageToken string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *GetEventsResp) Reset() {
	*x = GetEventsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_events_events_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsResp) ProtoMessage() {}

func (x *GetEventsResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_events_events_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsResp.ProtoReflect.Descriptor instead.
func (*GetEventsResp) Descriptor() ([]byte, []int) {
	return file_prodvana_events_events_manager_proto_rawDescGZIP(), []int{4}
}

func (x *GetEventsResp) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *GetEventsResp) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_prodvana_events_events_manager_proto protoreflect.FileDescriptor

var file_prodvana_events_events_manager_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5d, 0x0a, 0x0d, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x29, 0x0a, 0x0b, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x73, 0x0a, 0x14, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x0f,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0xbe,
	0x02, 0x0a, 0x06, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x33, 0x0a, 0x15, 0x72, 0x6f, 0x6f,
	0x74, 0x5f, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x12, 0x72, 0x6f, 0x6f, 0x74,
	0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x10, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x65, 0x73, 0x69,
	0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x48, 0x00, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x42, 0x13, 0x0a, 0x0c, 0x6c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x4a, 0x04,
	0x08, 0x02, 0x10, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x22,
	0xb6, 0x03, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x42, 0x0a, 0x07, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x42, 0x0f, 0xfa, 0x42, 0x0c, 0x92,
	0x01, 0x09, 0x08, 0x01, 0x22, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x61,
	0x73, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x13, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x41, 0x73, 0x63, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x4f, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x75, 0x73, 0x65, 0x4f, 0x72, 0x12, 0x45, 0x0a,
	0x10, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x43, 0x0a, 0x0f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x52,
	0x17, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x67, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x32, 0x72, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x61, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x15,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x22, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x4b, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x67, 0x6f, 0x2f,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prodvana_events_events_manager_proto_rawDescOnce sync.Once
	file_prodvana_events_events_manager_proto_rawDescData = file_prodvana_events_events_manager_proto_rawDesc
)

func file_prodvana_events_events_manager_proto_rawDescGZIP() []byte {
	file_prodvana_events_events_manager_proto_rawDescOnce.Do(func() {
		file_prodvana_events_events_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_prodvana_events_events_manager_proto_rawDescData)
	})
	return file_prodvana_events_events_manager_proto_rawDescData
}

var file_prodvana_events_events_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_prodvana_events_events_manager_proto_goTypes = []interface{}{
	(*ServiceLookup)(nil),         // 0: prodvana.events.ServiceLookup
	(*ReleaseChannelLookup)(nil),  // 1: prodvana.events.ReleaseChannelLookup
	(*Lookup)(nil),                // 2: prodvana.events.Lookup
	(*GetEventsReq)(nil),          // 3: prodvana.events.GetEventsReq
	(*GetEventsResp)(nil),         // 4: prodvana.events.GetEventsResp
	(EventType)(0),                // 5: prodvana.events.EventType
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
	(*Event)(nil),                 // 7: prodvana.events.Event
}
var file_prodvana_events_events_manager_proto_depIdxs = []int32{
	0, // 0: prodvana.events.Lookup.service:type_name -> prodvana.events.ServiceLookup
	1, // 1: prodvana.events.Lookup.release_channel:type_name -> prodvana.events.ReleaseChannelLookup
	2, // 2: prodvana.events.GetEventsReq.lookups:type_name -> prodvana.events.Lookup
	5, // 3: prodvana.events.GetEventsReq.types:type_name -> prodvana.events.EventType
	6, // 4: prodvana.events.GetEventsReq.before_timestamp:type_name -> google.protobuf.Timestamp
	6, // 5: prodvana.events.GetEventsReq.after_timestamp:type_name -> google.protobuf.Timestamp
	7, // 6: prodvana.events.GetEventsResp.events:type_name -> prodvana.events.Event
	3, // 7: prodvana.events.EventsManager.GetEvents:input_type -> prodvana.events.GetEventsReq
	4, // 8: prodvana.events.EventsManager.GetEvents:output_type -> prodvana.events.GetEventsResp
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_prodvana_events_events_manager_proto_init() }
func file_prodvana_events_events_manager_proto_init() {
	if File_prodvana_events_events_manager_proto != nil {
		return
	}
	file_prodvana_events_events_proto_init()
	file_prodvana_events_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_prodvana_events_events_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceLookup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_events_events_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseChannelLookup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_events_events_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lookup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_events_events_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_events_events_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_prodvana_events_events_manager_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Lookup_RootDesiredStateId)(nil),
		(*Lookup_DesiredStateId)(nil),
		(*Lookup_Service)(nil),
		(*Lookup_ReleaseChannel)(nil),
		(*Lookup_ReleaseId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prodvana_events_events_manager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_prodvana_events_events_manager_proto_goTypes,
		DependencyIndexes: file_prodvana_events_events_manager_proto_depIdxs,
		MessageInfos:      file_prodvana_events_events_manager_proto_msgTypes,
	}.Build()
	File_prodvana_events_events_manager_proto = out.File
	file_prodvana_events_events_manager_proto_rawDesc = nil
	file_prodvana_events_events_manager_proto_goTypes = nil
	file_prodvana_events_events_manager_proto_depIdxs = nil
}
