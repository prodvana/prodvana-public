// Code generated by protoc-gen-go-vtproto. DO NOT EDIT.
// protoc-gen-go-vtproto version: v0.6.0
// source: prodvana/runtimes/runtimes_config.proto

package runtimes

import (
	proto "google.golang.org/protobuf/proto"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

func (m *K8SRuntimeInitializationConfig) CloneVT() *K8SRuntimeInitializationConfig {
	if m == nil {
		return (*K8SRuntimeInitializationConfig)(nil)
	}
	r := new(K8SRuntimeInitializationConfig)
	r.AgentImage = m.AgentImage
	r.AuthToken = m.AuthToken
	r.UseResourceDefault = m.UseResourceDefault
	r.InteractionServerAddress = m.InteractionServerAddress
	r.AgentExternallyManaged = m.AgentExternallyManaged
	if rhs := m.EnvVars; rhs != nil {
		tmpContainer := make(map[string]string, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v
		}
		r.EnvVars = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *K8SRuntimeInitializationConfig) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *RuntimeInitializationConfig) CloneVT() *RuntimeInitializationConfig {
	if m == nil {
		return (*RuntimeInitializationConfig)(nil)
	}
	r := new(RuntimeInitializationConfig)
	if m.RuntimeSpecific != nil {
		r.RuntimeSpecific = m.RuntimeSpecific.(interface {
			CloneVT() isRuntimeInitializationConfig_RuntimeSpecific
		}).CloneVT()
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *RuntimeInitializationConfig) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *RuntimeInitializationConfig_K8S) CloneVT() isRuntimeInitializationConfig_RuntimeSpecific {
	if m == nil {
		return (*RuntimeInitializationConfig_K8S)(nil)
	}
	r := new(RuntimeInitializationConfig_K8S)
	r.K8S = m.K8S.CloneVT()
	return r
}

func (m *ContainerOrchestrationRuntime_K8S) CloneVT() *ContainerOrchestrationRuntime_K8S {
	if m == nil {
		return (*ContainerOrchestrationRuntime_K8S)(nil)
	}
	r := new(ContainerOrchestrationRuntime_K8S)
	r.Namespace = m.Namespace
	r.PvnManaged = m.PvnManaged
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ContainerOrchestrationRuntime_K8S) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ContainerOrchestrationRuntime_ECS) CloneVT() *ContainerOrchestrationRuntime_ECS {
	if m == nil {
		return (*ContainerOrchestrationRuntime_ECS)(nil)
	}
	r := new(ContainerOrchestrationRuntime_ECS)
	r.Prefix = m.Prefix
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ContainerOrchestrationRuntime_ECS) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ContainerOrchestrationRuntime) CloneVT() *ContainerOrchestrationRuntime {
	if m == nil {
		return (*ContainerOrchestrationRuntime)(nil)
	}
	r := new(ContainerOrchestrationRuntime)
	if m.Backend != nil {
		r.Backend = m.Backend.(interface {
			CloneVT() isContainerOrchestrationRuntime_Backend
		}).CloneVT()
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ContainerOrchestrationRuntime) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ContainerOrchestrationRuntime_K8S_) CloneVT() isContainerOrchestrationRuntime_Backend {
	if m == nil {
		return (*ContainerOrchestrationRuntime_K8S_)(nil)
	}
	r := new(ContainerOrchestrationRuntime_K8S_)
	r.K8S = m.K8S.CloneVT()
	return r
}

func (m *ContainerOrchestrationRuntime_Ecs) CloneVT() isContainerOrchestrationRuntime_Backend {
	if m == nil {
		return (*ContainerOrchestrationRuntime_Ecs)(nil)
	}
	r := new(ContainerOrchestrationRuntime_Ecs)
	r.Ecs = m.Ecs.CloneVT()
	return r
}

func (m *RuntimeExecutionConfig) CloneVT() *RuntimeExecutionConfig {
	if m == nil {
		return (*RuntimeExecutionConfig)(nil)
	}
	r := new(RuntimeExecutionConfig)
	r.Runtime = m.Runtime
	if m.TypeOneof != nil {
		r.TypeOneof = m.TypeOneof.(interface {
			CloneVT() isRuntimeExecutionConfig_TypeOneof
		}).CloneVT()
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *RuntimeExecutionConfig) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *RuntimeExecutionConfig_ContainerOrchestration) CloneVT() isRuntimeExecutionConfig_TypeOneof {
	if m == nil {
		return (*RuntimeExecutionConfig_ContainerOrchestration)(nil)
	}
	r := new(RuntimeExecutionConfig_ContainerOrchestration)
	r.ContainerOrchestration = m.ContainerOrchestration.CloneVT()
	return r
}

func (this *K8SRuntimeInitializationConfig) EqualVT(that *K8SRuntimeInitializationConfig) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.AgentImage != that.AgentImage {
		return false
	}
	if this.AuthToken != that.AuthToken {
		return false
	}
	if this.UseResourceDefault != that.UseResourceDefault {
		return false
	}
	if this.InteractionServerAddress != that.InteractionServerAddress {
		return false
	}
	if len(this.EnvVars) != len(that.EnvVars) {
		return false
	}
	for i, vx := range this.EnvVars {
		vy, ok := that.EnvVars[i]
		if !ok {
			return false
		}
		if vx != vy {
			return false
		}
	}
	if this.AgentExternallyManaged != that.AgentExternallyManaged {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *K8SRuntimeInitializationConfig) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*K8SRuntimeInitializationConfig)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *RuntimeInitializationConfig) EqualVT(that *RuntimeInitializationConfig) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.RuntimeSpecific == nil && that.RuntimeSpecific != nil {
		return false
	} else if this.RuntimeSpecific != nil {
		if that.RuntimeSpecific == nil {
			return false
		}
		if !this.RuntimeSpecific.(interface {
			EqualVT(isRuntimeInitializationConfig_RuntimeSpecific) bool
		}).EqualVT(that.RuntimeSpecific) {
			return false
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *RuntimeInitializationConfig) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*RuntimeInitializationConfig)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *RuntimeInitializationConfig_K8S) EqualVT(thatIface isRuntimeInitializationConfig_RuntimeSpecific) bool {
	that, ok := thatIface.(*RuntimeInitializationConfig_K8S)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.K8S, that.K8S; p != q {
		if p == nil {
			p = &K8SRuntimeInitializationConfig{}
		}
		if q == nil {
			q = &K8SRuntimeInitializationConfig{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *ContainerOrchestrationRuntime_K8S) EqualVT(that *ContainerOrchestrationRuntime_K8S) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Namespace != that.Namespace {
		return false
	}
	if this.PvnManaged != that.PvnManaged {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ContainerOrchestrationRuntime_K8S) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ContainerOrchestrationRuntime_K8S)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ContainerOrchestrationRuntime_ECS) EqualVT(that *ContainerOrchestrationRuntime_ECS) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Prefix != that.Prefix {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ContainerOrchestrationRuntime_ECS) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ContainerOrchestrationRuntime_ECS)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ContainerOrchestrationRuntime) EqualVT(that *ContainerOrchestrationRuntime) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Backend == nil && that.Backend != nil {
		return false
	} else if this.Backend != nil {
		if that.Backend == nil {
			return false
		}
		if !this.Backend.(interface {
			EqualVT(isContainerOrchestrationRuntime_Backend) bool
		}).EqualVT(that.Backend) {
			return false
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ContainerOrchestrationRuntime) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ContainerOrchestrationRuntime)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ContainerOrchestrationRuntime_K8S_) EqualVT(thatIface isContainerOrchestrationRuntime_Backend) bool {
	that, ok := thatIface.(*ContainerOrchestrationRuntime_K8S_)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.K8S, that.K8S; p != q {
		if p == nil {
			p = &ContainerOrchestrationRuntime_K8S{}
		}
		if q == nil {
			q = &ContainerOrchestrationRuntime_K8S{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *ContainerOrchestrationRuntime_Ecs) EqualVT(thatIface isContainerOrchestrationRuntime_Backend) bool {
	that, ok := thatIface.(*ContainerOrchestrationRuntime_Ecs)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.Ecs, that.Ecs; p != q {
		if p == nil {
			p = &ContainerOrchestrationRuntime_ECS{}
		}
		if q == nil {
			q = &ContainerOrchestrationRuntime_ECS{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *RuntimeExecutionConfig) EqualVT(that *RuntimeExecutionConfig) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.TypeOneof == nil && that.TypeOneof != nil {
		return false
	} else if this.TypeOneof != nil {
		if that.TypeOneof == nil {
			return false
		}
		if !this.TypeOneof.(interface {
			EqualVT(isRuntimeExecutionConfig_TypeOneof) bool
		}).EqualVT(that.TypeOneof) {
			return false
		}
	}
	if this.Runtime != that.Runtime {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *RuntimeExecutionConfig) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*RuntimeExecutionConfig)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *RuntimeExecutionConfig_ContainerOrchestration) EqualVT(thatIface isRuntimeExecutionConfig_TypeOneof) bool {
	that, ok := thatIface.(*RuntimeExecutionConfig_ContainerOrchestration)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.ContainerOrchestration, that.ContainerOrchestration; p != q {
		if p == nil {
			p = &ContainerOrchestrationRuntime{}
		}
		if q == nil {
			q = &ContainerOrchestrationRuntime{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}
