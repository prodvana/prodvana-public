// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.21.10
// source: prodvana/runtimes/extensions/fetch.proto

package extensions

import (
	common_config "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/common_config"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FetchMode int32

const (
	FetchMode_UNKNOWN_FETCH_MODE FetchMode = 0
	// fetch will either exit 0 or 2 to indicate drift
	FetchMode_EXIT_CODE FetchMode = 1
	// fetch will return structured output via stdout
	FetchMode_STRUCTURED_OUTPUT FetchMode = 2
)

// Enum value maps for FetchMode.
var (
	FetchMode_name = map[int32]string{
		0: "UNKNOWN_FETCH_MODE",
		1: "EXIT_CODE",
		2: "STRUCTURED_OUTPUT",
	}
	FetchMode_value = map[string]int32{
		"UNKNOWN_FETCH_MODE": 0,
		"EXIT_CODE":          1,
		"STRUCTURED_OUTPUT":  2,
	}
)

func (x FetchMode) Enum() *FetchMode {
	p := new(FetchMode)
	*p = x
	return p
}

func (x FetchMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FetchMode) Descriptor() protoreflect.EnumDescriptor {
	return file_prodvana_runtimes_extensions_fetch_proto_enumTypes[0].Descriptor()
}

func (FetchMode) Type() protoreflect.EnumType {
	return &file_prodvana_runtimes_extensions_fetch_proto_enumTypes[0]
}

func (x FetchMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FetchMode.Descriptor instead.
func (FetchMode) EnumDescriptor() ([]byte, []int) {
	return file_prodvana_runtimes_extensions_fetch_proto_rawDescGZIP(), []int{0}
}

type ExternalObject_Status int32

const (
	ExternalObject_PENDING   ExternalObject_Status = 0
	ExternalObject_SUCCEEDED ExternalObject_Status = 1
	ExternalObject_FAILED    ExternalObject_Status = 2
)

// Enum value maps for ExternalObject_Status.
var (
	ExternalObject_Status_name = map[int32]string{
		0: "PENDING",
		1: "SUCCEEDED",
		2: "FAILED",
	}
	ExternalObject_Status_value = map[string]int32{
		"PENDING":   0,
		"SUCCEEDED": 1,
		"FAILED":    2,
	}
)

func (x ExternalObject_Status) Enum() *ExternalObject_Status {
	p := new(ExternalObject_Status)
	*p = x
	return p
}

func (x ExternalObject_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExternalObject_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_prodvana_runtimes_extensions_fetch_proto_enumTypes[1].Descriptor()
}

func (ExternalObject_Status) Type() protoreflect.EnumType {
	return &file_prodvana_runtimes_extensions_fetch_proto_enumTypes[1]
}

func (x ExternalObject_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExternalObject_Status.Descriptor instead.
func (ExternalObject_Status) EnumDescriptor() ([]byte, []int) {
	return file_prodvana_runtimes_extensions_fetch_proto_rawDescGZIP(), []int{1, 0}
}

type ExternalObjectVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version           string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Replicas          int32  `protobuf:"varint,2,opt,name=replicas,proto3" json:"replicas,omitempty"`                                            // Created/running replicas, can be in any state
	AvailableReplicas int32  `protobuf:"varint,5,opt,name=available_replicas,json=availableReplicas,proto3" json:"available_replicas,omitempty"` // Replicas which have passed healthchecks for required duration.
	TargetReplicas    int32  `protobuf:"varint,6,opt,name=target_replicas,json=targetReplicas,proto3" json:"target_replicas,omitempty"`          // How many replicas are supposed to be spun up, if known
	Active            bool   `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Drifted           bool   `protobuf:"varint,4,opt,name=drifted,proto3" json:"drifted,omitempty"` // next tag: 7
}

func (x *ExternalObjectVersion) Reset() {
	*x = ExternalObjectVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_runtimes_extensions_fetch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalObjectVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalObjectVersion) ProtoMessage() {}

func (x *ExternalObjectVersion) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_runtimes_extensions_fetch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalObjectVersion.ProtoReflect.Descriptor instead.
func (*ExternalObjectVersion) Descriptor() ([]byte, []int) {
	return file_prodvana_runtimes_extensions_fetch_proto_rawDescGZIP(), []int{0}
}

func (x *ExternalObjectVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ExternalObjectVersion) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *ExternalObjectVersion) GetAvailableReplicas() int32 {
	if x != nil {
		return x.AvailableReplicas
	}
	return 0
}

func (x *ExternalObjectVersion) GetTargetReplicas() int32 {
	if x != nil {
		return x.TargetReplicas
	}
	return 0
}

func (x *ExternalObjectVersion) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *ExternalObjectVersion) GetDrifted() bool {
	if x != nil {
		return x.Drifted
	}
	return false
}

type ExternalObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ObjectType    string                        `protobuf:"bytes,2,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"`
	Versions      []*ExternalObjectVersion      `protobuf:"bytes,3,rep,name=versions,proto3" json:"versions,omitempty"`
	Status        ExternalObject_Status         `protobuf:"varint,4,opt,name=status,proto3,enum=prodvana.runtimes.extensions.ExternalObject_Status" json:"status,omitempty"`
	ExternalLinks []*common_config.ExternalLink `protobuf:"bytes,5,rep,name=external_links,json=externalLinks,proto3" json:"external_links,omitempty"`
	Message       string                        `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"` // freeform message explaining the status, for example, error message
}

func (x *ExternalObject) Reset() {
	*x = ExternalObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_runtimes_extensions_fetch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalObject) ProtoMessage() {}

func (x *ExternalObject) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_runtimes_extensions_fetch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalObject.ProtoReflect.Descriptor instead.
func (*ExternalObject) Descriptor() ([]byte, []int) {
	return file_prodvana_runtimes_extensions_fetch_proto_rawDescGZIP(), []int{1}
}

func (x *ExternalObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExternalObject) GetObjectType() string {
	if x != nil {
		return x.ObjectType
	}
	return ""
}

func (x *ExternalObject) GetVersions() []*ExternalObjectVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *ExternalObject) GetStatus() ExternalObject_Status {
	if x != nil {
		return x.Status
	}
	return ExternalObject_PENDING
}

func (x *ExternalObject) GetExternalLinks() []*common_config.ExternalLink {
	if x != nil {
		return x.ExternalLinks
	}
	return nil
}

func (x *ExternalObject) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// output format for the fetch command, in json format
// optional. Fetch commands can choose to implement the output, or exit 0 or 2.
type FetchOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects []*ExternalObject `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
}

func (x *FetchOutput) Reset() {
	*x = FetchOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_runtimes_extensions_fetch_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchOutput) ProtoMessage() {}

func (x *FetchOutput) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_runtimes_extensions_fetch_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchOutput.ProtoReflect.Descriptor instead.
func (*FetchOutput) Descriptor() ([]byte, []int) {
	return file_prodvana_runtimes_extensions_fetch_proto_rawDescGZIP(), []int{2}
}

func (x *FetchOutput) GetObjects() []*ExternalObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

var File_prodvana_runtimes_extensions_fetch_proto protoreflect.FileDescriptor

var file_prodvana_runtimes_extensions_fetch_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x66,
	0x65, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x70, 0x72, 0x6f, 0x64,
	0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x2a, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x01, 0x0a, 0x15, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x72, 0x69, 0x66, 0x74, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x72, 0x69, 0x66, 0x74, 0x65, 0x64, 0x22, 0xfc,
	0x02, 0x0a, 0x0e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76,
	0x61, 0x6e, 0x61, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x30, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0x55, 0x0a,
	0x0b, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x46, 0x0a, 0x07,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2a, 0x49, 0x0a, 0x09, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x46, 0x45, 0x54,
	0x43, 0x48, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x58, 0x49,
	0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x52, 0x55,
	0x43, 0x54, 0x55, 0x52, 0x45, 0x44, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x10, 0x02, 0x42,
	0x58, 0x5a, 0x56, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2d,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2f, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_prodvana_runtimes_extensions_fetch_proto_rawDescOnce sync.Once
	file_prodvana_runtimes_extensions_fetch_proto_rawDescData = file_prodvana_runtimes_extensions_fetch_proto_rawDesc
)

func file_prodvana_runtimes_extensions_fetch_proto_rawDescGZIP() []byte {
	file_prodvana_runtimes_extensions_fetch_proto_rawDescOnce.Do(func() {
		file_prodvana_runtimes_extensions_fetch_proto_rawDescData = protoimpl.X.CompressGZIP(file_prodvana_runtimes_extensions_fetch_proto_rawDescData)
	})
	return file_prodvana_runtimes_extensions_fetch_proto_rawDescData
}

var file_prodvana_runtimes_extensions_fetch_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_prodvana_runtimes_extensions_fetch_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_prodvana_runtimes_extensions_fetch_proto_goTypes = []interface{}{
	(FetchMode)(0),                     // 0: prodvana.runtimes.extensions.FetchMode
	(ExternalObject_Status)(0),         // 1: prodvana.runtimes.extensions.ExternalObject.Status
	(*ExternalObjectVersion)(nil),      // 2: prodvana.runtimes.extensions.ExternalObjectVersion
	(*ExternalObject)(nil),             // 3: prodvana.runtimes.extensions.ExternalObject
	(*FetchOutput)(nil),                // 4: prodvana.runtimes.extensions.FetchOutput
	(*common_config.ExternalLink)(nil), // 5: prodvana.common_config.ExternalLink
}
var file_prodvana_runtimes_extensions_fetch_proto_depIdxs = []int32{
	2, // 0: prodvana.runtimes.extensions.ExternalObject.versions:type_name -> prodvana.runtimes.extensions.ExternalObjectVersion
	1, // 1: prodvana.runtimes.extensions.ExternalObject.status:type_name -> prodvana.runtimes.extensions.ExternalObject.Status
	5, // 2: prodvana.runtimes.extensions.ExternalObject.external_links:type_name -> prodvana.common_config.ExternalLink
	3, // 3: prodvana.runtimes.extensions.FetchOutput.objects:type_name -> prodvana.runtimes.extensions.ExternalObject
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_prodvana_runtimes_extensions_fetch_proto_init() }
func file_prodvana_runtimes_extensions_fetch_proto_init() {
	if File_prodvana_runtimes_extensions_fetch_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_prodvana_runtimes_extensions_fetch_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalObjectVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_runtimes_extensions_fetch_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_runtimes_extensions_fetch_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prodvana_runtimes_extensions_fetch_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_prodvana_runtimes_extensions_fetch_proto_goTypes,
		DependencyIndexes: file_prodvana_runtimes_extensions_fetch_proto_depIdxs,
		EnumInfos:         file_prodvana_runtimes_extensions_fetch_proto_enumTypes,
		MessageInfos:      file_prodvana_runtimes_extensions_fetch_proto_msgTypes,
	}.Build()
	File_prodvana_runtimes_extensions_fetch_proto = out.File
	file_prodvana_runtimes_extensions_fetch_proto_rawDesc = nil
	file_prodvana_runtimes_extensions_fetch_proto_goTypes = nil
	file_prodvana_runtimes_extensions_fetch_proto_depIdxs = nil
}
