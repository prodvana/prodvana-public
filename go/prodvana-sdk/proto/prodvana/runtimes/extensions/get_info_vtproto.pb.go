// Code generated by protoc-gen-go-vtproto. DO NOT EDIT.
// protoc-gen-go-vtproto version: v0.6.0
// source: prodvana/runtimes/extensions/get_info.proto

package extensions

import (
	proto "google.golang.org/protobuf/proto"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

func (m *GetInfoOutput) CloneVT() *GetInfoOutput {
	if m == nil {
		return (*GetInfoOutput)(nil)
	}
	r := new(GetInfoOutput)
	if rhs := m.Outputs; rhs != nil {
		tmpContainer := make([]*OutputContent, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.Outputs = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetInfoOutput) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *OutputContent) CloneVT() *OutputContent {
	if m == nil {
		return (*OutputContent)(nil)
	}
	r := new(OutputContent)
	r.Name = m.Name
	r.Text = m.Text
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *OutputContent) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (this *GetInfoOutput) StableEqualVT(that *GetInfoOutput) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.Outputs) != len(that.Outputs) {
		return false
	}
	for i, vx := range this.Outputs {
		vy := that.Outputs[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &OutputContent{}
			}
			if q == nil {
				q = &OutputContent{}
			}
			if !p.StableEqualVT(q) {
				return false
			}
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetInfoOutput) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetInfoOutput)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetInfoOutput) EqualVT(that *GetInfoOutput) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.Outputs) != len(that.Outputs) {
		return false
	}
	for i, vx := range this.Outputs {
		vy := that.Outputs[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &OutputContent{}
			}
			if q == nil {
				q = &OutputContent{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetInfoOutput) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetInfoOutput)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *OutputContent) StableEqualVT(that *OutputContent) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Name != that.Name {
		return false
	}
	if this.Text != that.Text {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *OutputContent) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*OutputContent)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *OutputContent) EqualVT(that *OutputContent) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Name != that.Name {
		return false
	}
	if this.Text != that.Text {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *OutputContent) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*OutputContent)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
