// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.21.10
// source: prodvana/workflow/workflow_manager.proto

package workflow

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	common_config "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/common_config"
	repo "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/repo"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegistryType int32

const (
	RegistryType_UNKNOWN         RegistryType = 0
	RegistryType_DOCKER_REGISTRY RegistryType = 1
	RegistryType_ECR             RegistryType = 2
)

// Enum value maps for RegistryType.
var (
	RegistryType_name = map[int32]string{
		0: "UNKNOWN",
		1: "DOCKER_REGISTRY",
		2: "ECR",
	}
	RegistryType_value = map[string]int32{
		"UNKNOWN":         0,
		"DOCKER_REGISTRY": 1,
		"ECR":             2,
	}
)

func (x RegistryType) Enum() *RegistryType {
	p := new(RegistryType)
	*p = x
	return p
}

func (x RegistryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegistryType) Descriptor() protoreflect.EnumDescriptor {
	return file_prodvana_workflow_workflow_manager_proto_enumTypes[0].Descriptor()
}

func (RegistryType) Type() protoreflect.EnumType {
	return &file_prodvana_workflow_workflow_manager_proto_enumTypes[0]
}

func (x RegistryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegistryType.Descriptor instead.
func (RegistryType) EnumDescriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{0}
}

type RegistryStatus int32

const (
	RegistryStatus_UNDEFINED RegistryStatus = 0
	RegistryStatus_CONNECTED RegistryStatus = 1
	RegistryStatus_FAILED    RegistryStatus = 2 // Augment/replace with UNAUTHENTICATED, UNAVAILABLE, ... in the future
)

// Enum value maps for RegistryStatus.
var (
	RegistryStatus_name = map[int32]string{
		0: "UNDEFINED",
		1: "CONNECTED",
		2: "FAILED",
	}
	RegistryStatus_value = map[string]int32{
		"UNDEFINED": 0,
		"CONNECTED": 1,
		"FAILED":    2,
	}
)

func (x RegistryStatus) Enum() *RegistryStatus {
	p := new(RegistryStatus)
	*p = x
	return p
}

func (x RegistryStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegistryStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_prodvana_workflow_workflow_manager_proto_enumTypes[1].Descriptor()
}

func (RegistryStatus) Type() protoreflect.EnumType {
	return &file_prodvana_workflow_workflow_manager_proto_enumTypes[1]
}

func (x RegistryStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegistryStatus.Descriptor instead.
func (RegistryStatus) EnumDescriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{1}
}

type IndexStatus int32

const (
	IndexStatus_IS_UNKNOWN IndexStatus = 0
	IndexStatus_PENDING    IndexStatus = 1 // indexing requested but has not indexed before
	IndexStatus_INDEXING   IndexStatus = 2 // indexing operation in progress
	IndexStatus_INDEXED    IndexStatus = 3 //  steady-state, has been indexed before but no ongoing operation
)

// Enum value maps for IndexStatus.
var (
	IndexStatus_name = map[int32]string{
		0: "IS_UNKNOWN",
		1: "PENDING",
		2: "INDEXING",
		3: "INDEXED",
	}
	IndexStatus_value = map[string]int32{
		"IS_UNKNOWN": 0,
		"PENDING":    1,
		"INDEXING":   2,
		"INDEXED":    3,
	}
)

func (x IndexStatus) Enum() *IndexStatus {
	p := new(IndexStatus)
	*p = x
	return p
}

func (x IndexStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_prodvana_workflow_workflow_manager_proto_enumTypes[2].Descriptor()
}

func (IndexStatus) Type() protoreflect.EnumType {
	return &file_prodvana_workflow_workflow_manager_proto_enumTypes[2]
}

func (x IndexStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndexStatus.Descriptor instead.
func (IndexStatus) EnumDescriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{2}
}

type TrackedImageRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repository  string                 `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	LastIndex   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_index,json=lastIndex,proto3" json:"last_index,omitempty"`
	IndexStatus IndexStatus            `protobuf:"varint,3,opt,name=index_status,json=indexStatus,proto3,enum=prodvana.workflow.IndexStatus" json:"index_status,omitempty"`
}

func (x *TrackedImageRepository) Reset() {
	*x = TrackedImageRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackedImageRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackedImageRepository) ProtoMessage() {}

func (x *TrackedImageRepository) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackedImageRepository.ProtoReflect.Descriptor instead.
func (*TrackedImageRepository) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{0}
}

func (x *TrackedImageRepository) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *TrackedImageRepository) GetLastIndex() *timestamppb.Timestamp {
	if x != nil {
		return x.LastIndex
	}
	return nil
}

func (x *TrackedImageRepository) GetIndexStatus() IndexStatus {
	if x != nil {
		return x.IndexStatus
	}
	return IndexStatus_IS_UNKNOWN
}

type RegistryImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Url     string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Tag     string                 `protobuf:"bytes,5,opt,name=tag,proto3" json:"tag,omitempty"`
	Commit  *repo.Commit           `protobuf:"bytes,6,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *RegistryImage) Reset() {
	*x = RegistryImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryImage) ProtoMessage() {}

func (x *RegistryImage) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryImage.ProtoReflect.Descriptor instead.
func (*RegistryImage) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{1}
}

func (x *RegistryImage) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *RegistryImage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RegistryImage) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *RegistryImage) GetCommit() *repo.Commit {
	if x != nil {
		return x.Commit
	}
	return nil
}

type CreateContainerRegistryIntegrationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string       `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"` // readable name for this registry
	Url      string       `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Username string       `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Secret   string       `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`
	Type     RegistryType `protobuf:"varint,4,opt,name=type,proto3,enum=prodvana.workflow.RegistryType" json:"type,omitempty"`
	// Types that are assignable to RegistryOptions:
	//
	//	*CreateContainerRegistryIntegrationReq_EcrOptions
	//	*CreateContainerRegistryIntegrationReq_PublicRegistryOptions_
	RegistryOptions isCreateContainerRegistryIntegrationReq_RegistryOptions `protobuf_oneof:"registry_options"`
}

func (x *CreateContainerRegistryIntegrationReq) Reset() {
	*x = CreateContainerRegistryIntegrationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContainerRegistryIntegrationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerRegistryIntegrationReq) ProtoMessage() {}

func (x *CreateContainerRegistryIntegrationReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerRegistryIntegrationReq.ProtoReflect.Descriptor instead.
func (*CreateContainerRegistryIntegrationReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{2}
}

func (x *CreateContainerRegistryIntegrationReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateContainerRegistryIntegrationReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CreateContainerRegistryIntegrationReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateContainerRegistryIntegrationReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *CreateContainerRegistryIntegrationReq) GetType() RegistryType {
	if x != nil {
		return x.Type
	}
	return RegistryType_UNKNOWN
}

func (m *CreateContainerRegistryIntegrationReq) GetRegistryOptions() isCreateContainerRegistryIntegrationReq_RegistryOptions {
	if m != nil {
		return m.RegistryOptions
	}
	return nil
}

func (x *CreateContainerRegistryIntegrationReq) GetEcrOptions() *CreateContainerRegistryIntegrationReq_ECROptions {
	if x, ok := x.GetRegistryOptions().(*CreateContainerRegistryIntegrationReq_EcrOptions); ok {
		return x.EcrOptions
	}
	return nil
}

func (x *CreateContainerRegistryIntegrationReq) GetPublicRegistryOptions() *CreateContainerRegistryIntegrationReq_PublicRegistryOptions {
	if x, ok := x.GetRegistryOptions().(*CreateContainerRegistryIntegrationReq_PublicRegistryOptions_); ok {
		return x.PublicRegistryOptions
	}
	return nil
}

type isCreateContainerRegistryIntegrationReq_RegistryOptions interface {
	isCreateContainerRegistryIntegrationReq_RegistryOptions()
}

type CreateContainerRegistryIntegrationReq_EcrOptions struct {
	EcrOptions *CreateContainerRegistryIntegrationReq_ECROptions `protobuf:"bytes,5,opt,name=ecr_options,json=ecrOptions,proto3,oneof"`
}

type CreateContainerRegistryIntegrationReq_PublicRegistryOptions_ struct {
	PublicRegistryOptions *CreateContainerRegistryIntegrationReq_PublicRegistryOptions `protobuf:"bytes,7,opt,name=public_registry_options,json=publicRegistryOptions,proto3,oneof"`
}

func (*CreateContainerRegistryIntegrationReq_EcrOptions) isCreateContainerRegistryIntegrationReq_RegistryOptions() {
}

func (*CreateContainerRegistryIntegrationReq_PublicRegistryOptions_) isCreateContainerRegistryIntegrationReq_RegistryOptions() {
}

type CreateContainerRegistryIntegrationRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
}

func (x *CreateContainerRegistryIntegrationRes) Reset() {
	*x = CreateContainerRegistryIntegrationRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContainerRegistryIntegrationRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerRegistryIntegrationRes) ProtoMessage() {}

func (x *CreateContainerRegistryIntegrationRes) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerRegistryIntegrationRes.ProtoReflect.Descriptor instead.
func (*CreateContainerRegistryIntegrationRes) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{3}
}

func (x *CreateContainerRegistryIntegrationRes) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

type ListContainerRegistryIntegrationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// if true, verifies connection to registry
	FetchStatus bool `protobuf:"varint,1,opt,name=fetch_status,json=fetchStatus,proto3" json:"fetch_status,omitempty"`
}

func (x *ListContainerRegistryIntegrationsReq) Reset() {
	*x = ListContainerRegistryIntegrationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContainerRegistryIntegrationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainerRegistryIntegrationsReq) ProtoMessage() {}

func (x *ListContainerRegistryIntegrationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainerRegistryIntegrationsReq.ProtoReflect.Descriptor instead.
func (*ListContainerRegistryIntegrationsReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{4}
}

func (x *ListContainerRegistryIntegrationsReq) GetFetchStatus() bool {
	if x != nil {
		return x.FetchStatus
	}
	return false
}

type ContainerRegistryIntegration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string         `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Name          string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url           string         `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Type          string         `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"` // Implicit from registry_info below
	Status        RegistryStatus `protobuf:"varint,5,opt,name=status,proto3,enum=prodvana.workflow.RegistryStatus" json:"status,omitempty"`
	// Types that are assignable to RegistryInfo:
	//
	//	*ContainerRegistryIntegration_EcrInfo
	RegistryInfo isContainerRegistryIntegration_RegistryInfo `protobuf_oneof:"registry_info"`
	Repositories []*TrackedImageRepository                   `protobuf:"bytes,7,rep,name=repositories,proto3" json:"repositories,omitempty"`
}

func (x *ContainerRegistryIntegration) Reset() {
	*x = ContainerRegistryIntegration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerRegistryIntegration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerRegistryIntegration) ProtoMessage() {}

func (x *ContainerRegistryIntegration) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerRegistryIntegration.ProtoReflect.Descriptor instead.
func (*ContainerRegistryIntegration) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{5}
}

func (x *ContainerRegistryIntegration) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *ContainerRegistryIntegration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerRegistryIntegration) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ContainerRegistryIntegration) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ContainerRegistryIntegration) GetStatus() RegistryStatus {
	if x != nil {
		return x.Status
	}
	return RegistryStatus_UNDEFINED
}

func (m *ContainerRegistryIntegration) GetRegistryInfo() isContainerRegistryIntegration_RegistryInfo {
	if m != nil {
		return m.RegistryInfo
	}
	return nil
}

func (x *ContainerRegistryIntegration) GetEcrInfo() *ContainerRegistryIntegration_ECRInfo {
	if x, ok := x.GetRegistryInfo().(*ContainerRegistryIntegration_EcrInfo); ok {
		return x.EcrInfo
	}
	return nil
}

func (x *ContainerRegistryIntegration) GetRepositories() []*TrackedImageRepository {
	if x != nil {
		return x.Repositories
	}
	return nil
}

type isContainerRegistryIntegration_RegistryInfo interface {
	isContainerRegistryIntegration_RegistryInfo()
}

type ContainerRegistryIntegration_EcrInfo struct {
	EcrInfo *ContainerRegistryIntegration_ECRInfo `protobuf:"bytes,6,opt,name=ecr_info,json=ecrInfo,proto3,oneof"`
}

func (*ContainerRegistryIntegration_EcrInfo) isContainerRegistryIntegration_RegistryInfo() {}

type ListContainerRegistryIntegrationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerRegistries []*ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo `protobuf:"bytes,1,rep,name=container_registries,json=containerRegistries,proto3" json:"container_registries,omitempty"`
}

func (x *ListContainerRegistryIntegrationsResp) Reset() {
	*x = ListContainerRegistryIntegrationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContainerRegistryIntegrationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainerRegistryIntegrationsResp) ProtoMessage() {}

func (x *ListContainerRegistryIntegrationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainerRegistryIntegrationsResp.ProtoReflect.Descriptor instead.
func (*ListContainerRegistryIntegrationsResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{6}
}

func (x *ListContainerRegistryIntegrationsResp) GetContainerRegistries() []*ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo {
	if x != nil {
		return x.ContainerRegistries
	}
	return nil
}

type GetContainerRegistryIntegrationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistryName string `protobuf:"bytes,1,opt,name=registry_name,json=registryName,proto3" json:"registry_name,omitempty"`
}

func (x *GetContainerRegistryIntegrationReq) Reset() {
	*x = GetContainerRegistryIntegrationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContainerRegistryIntegrationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerRegistryIntegrationReq) ProtoMessage() {}

func (x *GetContainerRegistryIntegrationReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerRegistryIntegrationReq.ProtoReflect.Descriptor instead.
func (*GetContainerRegistryIntegrationReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{7}
}

func (x *GetContainerRegistryIntegrationReq) GetRegistryName() string {
	if x != nil {
		return x.RegistryName
	}
	return ""
}

type GetContainerRegistryIntegrationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registry *ContainerRegistryIntegration `protobuf:"bytes,1,opt,name=registry,proto3" json:"registry,omitempty"`
}

func (x *GetContainerRegistryIntegrationResp) Reset() {
	*x = GetContainerRegistryIntegrationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContainerRegistryIntegrationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerRegistryIntegrationResp) ProtoMessage() {}

func (x *GetContainerRegistryIntegrationResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerRegistryIntegrationResp.ProtoReflect.Descriptor instead.
func (*GetContainerRegistryIntegrationResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{8}
}

func (x *GetContainerRegistryIntegrationResp) GetRegistry() *ContainerRegistryIntegration {
	if x != nil {
		return x.Registry
	}
	return nil
}

type GetContainerRegistryImagesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId     string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	ImageRepository   string `protobuf:"bytes,2,opt,name=image_repository,json=imageRepository,proto3" json:"image_repository,omitempty"`
	SkipRegistryCache bool   `protobuf:"varint,3,opt,name=skip_registry_cache,json=skipRegistryCache,proto3" json:"skip_registry_cache,omitempty"`
	PageToken         string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize          int32  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetContainerRegistryImagesReq) Reset() {
	*x = GetContainerRegistryImagesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContainerRegistryImagesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerRegistryImagesReq) ProtoMessage() {}

func (x *GetContainerRegistryImagesReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerRegistryImagesReq.ProtoReflect.Descriptor instead.
func (*GetContainerRegistryImagesReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{9}
}

func (x *GetContainerRegistryImagesReq) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *GetContainerRegistryImagesReq) GetImageRepository() string {
	if x != nil {
		return x.ImageRepository
	}
	return ""
}

func (x *GetContainerRegistryImagesReq) GetSkipRegistryCache() bool {
	if x != nil {
		return x.SkipRegistryCache
	}
	return false
}

func (x *GetContainerRegistryImagesReq) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *GetContainerRegistryImagesReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetContainerRegistryImagesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// will be sorted by creation time, descending
	Images        []*RegistryImage `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	NextPageToken string           `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *GetContainerRegistryImagesRes) Reset() {
	*x = GetContainerRegistryImagesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContainerRegistryImagesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerRegistryImagesRes) ProtoMessage() {}

func (x *GetContainerRegistryImagesRes) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerRegistryImagesRes.ProtoReflect.Descriptor instead.
func (*GetContainerRegistryImagesRes) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{10}
}

func (x *GetContainerRegistryImagesRes) GetImages() []*RegistryImage {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *GetContainerRegistryImagesRes) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ListTrackedImageRepositoriesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
}

func (x *ListTrackedImageRepositoriesReq) Reset() {
	*x = ListTrackedImageRepositoriesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTrackedImageRepositoriesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrackedImageRepositoriesReq) ProtoMessage() {}

func (x *ListTrackedImageRepositoriesReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrackedImageRepositoriesReq.ProtoReflect.Descriptor instead.
func (*ListTrackedImageRepositoriesReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{11}
}

func (x *ListTrackedImageRepositoriesReq) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

type ListTrackedImageRepositoriesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repositories []*TrackedImageRepository `protobuf:"bytes,1,rep,name=repositories,proto3" json:"repositories,omitempty"`
}

func (x *ListTrackedImageRepositoriesResp) Reset() {
	*x = ListTrackedImageRepositoriesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTrackedImageRepositoriesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrackedImageRepositoriesResp) ProtoMessage() {}

func (x *ListTrackedImageRepositoriesResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrackedImageRepositoriesResp.ProtoReflect.Descriptor instead.
func (*ListTrackedImageRepositoriesResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{12}
}

func (x *ListTrackedImageRepositoriesResp) GetRepositories() []*TrackedImageRepository {
	if x != nil {
		return x.Repositories
	}
	return nil
}

type GetTrackedImageRepositoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Repository    string `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
}

func (x *GetTrackedImageRepositoryReq) Reset() {
	*x = GetTrackedImageRepositoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrackedImageRepositoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrackedImageRepositoryReq) ProtoMessage() {}

func (x *GetTrackedImageRepositoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrackedImageRepositoryReq.ProtoReflect.Descriptor instead.
func (*GetTrackedImageRepositoryReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{13}
}

func (x *GetTrackedImageRepositoryReq) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *GetTrackedImageRepositoryReq) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

type GetTrackedImageRepositoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repository *TrackedImageRepository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
}

func (x *GetTrackedImageRepositoryResp) Reset() {
	*x = GetTrackedImageRepositoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrackedImageRepositoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrackedImageRepositoryResp) ProtoMessage() {}

func (x *GetTrackedImageRepositoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrackedImageRepositoryResp.ProtoReflect.Descriptor instead.
func (*GetTrackedImageRepositoryResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{14}
}

func (x *GetTrackedImageRepositoryResp) GetRepository() *TrackedImageRepository {
	if x != nil {
		return x.Repository
	}
	return nil
}

type TrackImageRepositoriesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string   `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Repositories  []string `protobuf:"bytes,2,rep,name=repositories,proto3" json:"repositories,omitempty"`
}

func (x *TrackImageRepositoriesReq) Reset() {
	*x = TrackImageRepositoriesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackImageRepositoriesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackImageRepositoriesReq) ProtoMessage() {}

func (x *TrackImageRepositoriesReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackImageRepositoriesReq.ProtoReflect.Descriptor instead.
func (*TrackImageRepositoriesReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{15}
}

func (x *TrackImageRepositoriesReq) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *TrackImageRepositoriesReq) GetRepositories() []string {
	if x != nil {
		return x.Repositories
	}
	return nil
}

type TrackImageRepositoriesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TrackImageRepositoriesResp) Reset() {
	*x = TrackImageRepositoriesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackImageRepositoriesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackImageRepositoriesResp) ProtoMessage() {}

func (x *TrackImageRepositoriesResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackImageRepositoriesResp.ProtoReflect.Descriptor instead.
func (*TrackImageRepositoriesResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{16}
}

type StopTrackingImageRepositoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Repository    string `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
}

func (x *StopTrackingImageRepositoryReq) Reset() {
	*x = StopTrackingImageRepositoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTrackingImageRepositoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTrackingImageRepositoryReq) ProtoMessage() {}

func (x *StopTrackingImageRepositoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTrackingImageRepositoryReq.ProtoReflect.Descriptor instead.
func (*StopTrackingImageRepositoryReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{17}
}

func (x *StopTrackingImageRepositoryReq) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *StopTrackingImageRepositoryReq) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

type StopTrackingImageRepositoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopTrackingImageRepositoryResp) Reset() {
	*x = StopTrackingImageRepositoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTrackingImageRepositoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTrackingImageRepositoryResp) ProtoMessage() {}

func (x *StopTrackingImageRepositoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTrackingImageRepositoryResp.ProtoReflect.Descriptor instead.
func (*StopTrackingImageRepositoryResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{18}
}

type GetProgramDefaultsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Repository    string `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
	// Types that are assignable to ImageIdOneof:
	//
	//	*GetProgramDefaultsReq_Tag
	//	*GetProgramDefaultsReq_Image
	ImageIdOneof      isGetProgramDefaultsReq_ImageIdOneof `protobuf_oneof:"image_id_oneof"`
	SkipRegistryCache bool                                 `protobuf:"varint,5,opt,name=skip_registry_cache,json=skipRegistryCache,proto3" json:"skip_registry_cache,omitempty"`
}

func (x *GetProgramDefaultsReq) Reset() {
	*x = GetProgramDefaultsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProgramDefaultsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProgramDefaultsReq) ProtoMessage() {}

func (x *GetProgramDefaultsReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProgramDefaultsReq.ProtoReflect.Descriptor instead.
func (*GetProgramDefaultsReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{19}
}

func (x *GetProgramDefaultsReq) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *GetProgramDefaultsReq) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (m *GetProgramDefaultsReq) GetImageIdOneof() isGetProgramDefaultsReq_ImageIdOneof {
	if m != nil {
		return m.ImageIdOneof
	}
	return nil
}

func (x *GetProgramDefaultsReq) GetTag() string {
	if x, ok := x.GetImageIdOneof().(*GetProgramDefaultsReq_Tag); ok {
		return x.Tag
	}
	return ""
}

func (x *GetProgramDefaultsReq) GetImage() string {
	if x, ok := x.GetImageIdOneof().(*GetProgramDefaultsReq_Image); ok {
		return x.Image
	}
	return ""
}

func (x *GetProgramDefaultsReq) GetSkipRegistryCache() bool {
	if x != nil {
		return x.SkipRegistryCache
	}
	return false
}

type isGetProgramDefaultsReq_ImageIdOneof interface {
	isGetProgramDefaultsReq_ImageIdOneof()
}

type GetProgramDefaultsReq_Tag struct {
	Tag string `protobuf:"bytes,3,opt,name=tag,proto3,oneof"`
}

type GetProgramDefaultsReq_Image struct {
	Image string `protobuf:"bytes,4,opt,name=image,proto3,oneof"`
}

func (*GetProgramDefaultsReq_Tag) isGetProgramDefaultsReq_ImageIdOneof() {}

func (*GetProgramDefaultsReq_Image) isGetProgramDefaultsReq_ImageIdOneof() {}

// when updating this, make sure to also invalidate docker image cache warmer
type ProgramDefaults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd        []string                           `protobuf:"bytes,1,rep,name=cmd,proto3" json:"cmd,omitempty"`
	Entrypoint []string                           `protobuf:"bytes,2,rep,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Env        map[string]*common_config.EnvValue `protobuf:"bytes,3,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ports      []*common_config.PortConfig        `protobuf:"bytes,4,rep,name=ports,proto3" json:"ports,omitempty"`
}

func (x *ProgramDefaults) Reset() {
	*x = ProgramDefaults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgramDefaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgramDefaults) ProtoMessage() {}

func (x *ProgramDefaults) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgramDefaults.ProtoReflect.Descriptor instead.
func (*ProgramDefaults) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{20}
}

func (x *ProgramDefaults) GetCmd() []string {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *ProgramDefaults) GetEntrypoint() []string {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

func (x *ProgramDefaults) GetEnv() map[string]*common_config.EnvValue {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *ProgramDefaults) GetPorts() []*common_config.PortConfig {
	if x != nil {
		return x.Ports
	}
	return nil
}

type GetProgramDefaultsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProgramDefaults *ProgramDefaults `protobuf:"bytes,1,opt,name=program_defaults,json=programDefaults,proto3" json:"program_defaults,omitempty"`
}

func (x *GetProgramDefaultsResp) Reset() {
	*x = GetProgramDefaultsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProgramDefaultsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProgramDefaultsResp) ProtoMessage() {}

func (x *GetProgramDefaultsResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProgramDefaultsResp.ProtoReflect.Descriptor instead.
func (*GetProgramDefaultsResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{21}
}

func (x *GetProgramDefaultsResp) GetProgramDefaults() *ProgramDefaults {
	if x != nil {
		return x.ProgramDefaults
	}
	return nil
}

type GetServiceImageInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service     string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Versions    []string `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty"` // omit to get just the latest version
	Application string   `protobuf:"bytes,3,opt,name=application,proto3" json:"application,omitempty"`
}

func (x *GetServiceImageInfoReq) Reset() {
	*x = GetServiceImageInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceImageInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceImageInfoReq) ProtoMessage() {}

func (x *GetServiceImageInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceImageInfoReq.ProtoReflect.Descriptor instead.
func (*GetServiceImageInfoReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{22}
}

func (x *GetServiceImageInfoReq) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *GetServiceImageInfoReq) GetVersions() []string {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *GetServiceImageInfoReq) GetApplication() string {
	if x != nil {
		return x.Application
	}
	return ""
}

type GetServiceImageInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId    string                                 `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	ServiceName  string                                 `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	VersionInfos []*GetServiceImageInfoResp_VersionInfo `protobuf:"bytes,3,rep,name=version_infos,json=versionInfos,proto3" json:"version_infos,omitempty"`
}

func (x *GetServiceImageInfoResp) Reset() {
	*x = GetServiceImageInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceImageInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceImageInfoResp) ProtoMessage() {}

func (x *GetServiceImageInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceImageInfoResp.ProtoReflect.Descriptor instead.
func (*GetServiceImageInfoResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{23}
}

func (x *GetServiceImageInfoResp) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *GetServiceImageInfoResp) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *GetServiceImageInfoResp) GetVersionInfos() []*GetServiceImageInfoResp_VersionInfo {
	if x != nil {
		return x.VersionInfos
	}
	return nil
}

type InstallSlackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Code        string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	RedirectUri string `protobuf:"bytes,3,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
}

func (x *InstallSlackReq) Reset() {
	*x = InstallSlackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallSlackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSlackReq) ProtoMessage() {}

func (x *InstallSlackReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallSlackReq.ProtoReflect.Descriptor instead.
func (*InstallSlackReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{24}
}

func (x *InstallSlackReq) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *InstallSlackReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *InstallSlackReq) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

type InstallSlackResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *InstallSlackResp) Reset() {
	*x = InstallSlackResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallSlackResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSlackResp) ProtoMessage() {}

func (x *InstallSlackResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallSlackResp.ProtoReflect.Descriptor instead.
func (*InstallSlackResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{25}
}

func (x *InstallSlackResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InstallSlackResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetInstallSlackUrlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInstallSlackUrlReq) Reset() {
	*x = GetInstallSlackUrlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstallSlackUrlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstallSlackUrlReq) ProtoMessage() {}

func (x *GetInstallSlackUrlReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstallSlackUrlReq.ProtoReflect.Descriptor instead.
func (*GetInstallSlackUrlReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{26}
}

type GetInstallSlackUrlResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetInstallSlackUrlResp) Reset() {
	*x = GetInstallSlackUrlResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstallSlackUrlResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstallSlackUrlResp) ProtoMessage() {}

func (x *GetInstallSlackUrlResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstallSlackUrlResp.ProtoReflect.Descriptor instead.
func (*GetInstallSlackUrlResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{27}
}

func (x *GetInstallSlackUrlResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type UninstallSlackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UninstallSlackReq) Reset() {
	*x = UninstallSlackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UninstallSlackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallSlackReq) ProtoMessage() {}

func (x *UninstallSlackReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallSlackReq.ProtoReflect.Descriptor instead.
func (*UninstallSlackReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{28}
}

type UninstallSlackResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UninstallSlackResp) Reset() {
	*x = UninstallSlackResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UninstallSlackResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallSlackResp) ProtoMessage() {}

func (x *UninstallSlackResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallSlackResp.ProtoReflect.Descriptor instead.
func (*UninstallSlackResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{29}
}

func (x *UninstallSlackResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type SlackChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SlackChannel) Reset() {
	*x = SlackChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlackChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlackChannel) ProtoMessage() {}

func (x *SlackChannel) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlackChannel.ProtoReflect.Descriptor instead.
func (*SlackChannel) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{30}
}

func (x *SlackChannel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SlackChannel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type InstallPagerDutyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Code        string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	RedirectUri string `protobuf:"bytes,3,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
}

func (x *InstallPagerDutyReq) Reset() {
	*x = InstallPagerDutyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallPagerDutyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallPagerDutyReq) ProtoMessage() {}

func (x *InstallPagerDutyReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallPagerDutyReq.ProtoReflect.Descriptor instead.
func (*InstallPagerDutyReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{31}
}

func (x *InstallPagerDutyReq) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *InstallPagerDutyReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *InstallPagerDutyReq) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

type InstallPagerDutyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *InstallPagerDutyResp) Reset() {
	*x = InstallPagerDutyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallPagerDutyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallPagerDutyResp) ProtoMessage() {}

func (x *InstallPagerDutyResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallPagerDutyResp.ProtoReflect.Descriptor instead.
func (*InstallPagerDutyResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{32}
}

func (x *InstallPagerDutyResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InstallPagerDutyResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetInstallPagerDutyUrlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInstallPagerDutyUrlReq) Reset() {
	*x = GetInstallPagerDutyUrlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstallPagerDutyUrlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstallPagerDutyUrlReq) ProtoMessage() {}

func (x *GetInstallPagerDutyUrlReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstallPagerDutyUrlReq.ProtoReflect.Descriptor instead.
func (*GetInstallPagerDutyUrlReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{33}
}

type GetInstallPagerDutyUrlResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetInstallPagerDutyUrlResp) Reset() {
	*x = GetInstallPagerDutyUrlResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstallPagerDutyUrlResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstallPagerDutyUrlResp) ProtoMessage() {}

func (x *GetInstallPagerDutyUrlResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstallPagerDutyUrlResp.ProtoReflect.Descriptor instead.
func (*GetInstallPagerDutyUrlResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{34}
}

func (x *GetInstallPagerDutyUrlResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type UninstallPagerDutyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UninstallPagerDutyReq) Reset() {
	*x = UninstallPagerDutyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UninstallPagerDutyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallPagerDutyReq) ProtoMessage() {}

func (x *UninstallPagerDutyReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallPagerDutyReq.ProtoReflect.Descriptor instead.
func (*UninstallPagerDutyReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{35}
}

type UninstallPagerDutyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UninstallPagerDutyResp) Reset() {
	*x = UninstallPagerDutyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UninstallPagerDutyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallPagerDutyResp) ProtoMessage() {}

func (x *UninstallPagerDutyResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallPagerDutyResp.ProtoReflect.Descriptor instead.
func (*UninstallPagerDutyResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{36}
}

func (x *UninstallPagerDutyResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type PagerDutyService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PagerDutyService) Reset() {
	*x = PagerDutyService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagerDutyService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagerDutyService) ProtoMessage() {}

func (x *PagerDutyService) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagerDutyService.ProtoReflect.Descriptor instead.
func (*PagerDutyService) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{37}
}

func (x *PagerDutyService) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PagerDutyService) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type InstallGrafanaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	ApiToken string `protobuf:"bytes,2,opt,name=api_token,json=apiToken,proto3" json:"api_token,omitempty"`
}

func (x *InstallGrafanaReq) Reset() {
	*x = InstallGrafanaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallGrafanaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallGrafanaReq) ProtoMessage() {}

func (x *InstallGrafanaReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallGrafanaReq.ProtoReflect.Descriptor instead.
func (*InstallGrafanaReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{38}
}

func (x *InstallGrafanaReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *InstallGrafanaReq) GetApiToken() string {
	if x != nil {
		return x.ApiToken
	}
	return ""
}

type InstallGrafanaResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
}

func (x *InstallGrafanaResp) Reset() {
	*x = InstallGrafanaResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallGrafanaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallGrafanaResp) ProtoMessage() {}

func (x *InstallGrafanaResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallGrafanaResp.ProtoReflect.Descriptor instead.
func (*InstallGrafanaResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{39}
}

func (x *InstallGrafanaResp) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

type UninstallGrafanaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UninstallGrafanaReq) Reset() {
	*x = UninstallGrafanaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UninstallGrafanaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallGrafanaReq) ProtoMessage() {}

func (x *UninstallGrafanaReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallGrafanaReq.ProtoReflect.Descriptor instead.
func (*UninstallGrafanaReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{40}
}

type UninstallGrafanaResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
}

func (x *UninstallGrafanaResp) Reset() {
	*x = UninstallGrafanaResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UninstallGrafanaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallGrafanaResp) ProtoMessage() {}

func (x *UninstallGrafanaResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallGrafanaResp.ProtoReflect.Descriptor instead.
func (*UninstallGrafanaResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{41}
}

func (x *UninstallGrafanaResp) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

// TODO(rohit): Should this get refactored into a generic GET endpoint for all types of integrations?
type GetGrafanaInstallationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetGrafanaInstallationReq) Reset() {
	*x = GetGrafanaInstallationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGrafanaInstallationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGrafanaInstallationReq) ProtoMessage() {}

func (x *GetGrafanaInstallationReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGrafanaInstallationReq.ProtoReflect.Descriptor instead.
func (*GetGrafanaInstallationReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{42}
}

type GetGrafanaInstallationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Url           string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetGrafanaInstallationResp) Reset() {
	*x = GetGrafanaInstallationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGrafanaInstallationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGrafanaInstallationResp) ProtoMessage() {}

func (x *GetGrafanaInstallationResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGrafanaInstallationResp.ProtoReflect.Descriptor instead.
func (*GetGrafanaInstallationResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{43}
}

func (x *GetGrafanaInstallationResp) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *GetGrafanaInstallationResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ListHoneycombEnvironmentsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListHoneycombEnvironmentsReq) Reset() {
	*x = ListHoneycombEnvironmentsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHoneycombEnvironmentsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHoneycombEnvironmentsReq) ProtoMessage() {}

func (x *ListHoneycombEnvironmentsReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHoneycombEnvironmentsReq.ProtoReflect.Descriptor instead.
func (*ListHoneycombEnvironmentsReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{44}
}

type ListHoneycombEnvironmentsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environments []*ListHoneycombEnvironmentsResp_HoneycombEnvironment `protobuf:"bytes,1,rep,name=environments,proto3" json:"environments,omitempty"`
}

func (x *ListHoneycombEnvironmentsResp) Reset() {
	*x = ListHoneycombEnvironmentsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHoneycombEnvironmentsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHoneycombEnvironmentsResp) ProtoMessage() {}

func (x *ListHoneycombEnvironmentsResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHoneycombEnvironmentsResp.ProtoReflect.Descriptor instead.
func (*ListHoneycombEnvironmentsResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{45}
}

func (x *ListHoneycombEnvironmentsResp) GetEnvironments() []*ListHoneycombEnvironmentsResp_HoneycombEnvironment {
	if x != nil {
		return x.Environments
	}
	return nil
}

type AddHoneycombEnvironmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ApiKey string `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *AddHoneycombEnvironmentReq) Reset() {
	*x = AddHoneycombEnvironmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHoneycombEnvironmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHoneycombEnvironmentReq) ProtoMessage() {}

func (x *AddHoneycombEnvironmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHoneycombEnvironmentReq.ProtoReflect.Descriptor instead.
func (*AddHoneycombEnvironmentReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{46}
}

func (x *AddHoneycombEnvironmentReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddHoneycombEnvironmentReq) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type AddHoneycombEnvironmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
}

func (x *AddHoneycombEnvironmentResp) Reset() {
	*x = AddHoneycombEnvironmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHoneycombEnvironmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHoneycombEnvironmentResp) ProtoMessage() {}

func (x *AddHoneycombEnvironmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHoneycombEnvironmentResp.ProtoReflect.Descriptor instead.
func (*AddHoneycombEnvironmentResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{47}
}

func (x *AddHoneycombEnvironmentResp) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

type UpdateHoneycombEnvironmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ApiKey string `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *UpdateHoneycombEnvironmentReq) Reset() {
	*x = UpdateHoneycombEnvironmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHoneycombEnvironmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHoneycombEnvironmentReq) ProtoMessage() {}

func (x *UpdateHoneycombEnvironmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHoneycombEnvironmentReq.ProtoReflect.Descriptor instead.
func (*UpdateHoneycombEnvironmentReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{48}
}

func (x *UpdateHoneycombEnvironmentReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateHoneycombEnvironmentReq) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type UpdateHoneycombEnvironmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateHoneycombEnvironmentResp) Reset() {
	*x = UpdateHoneycombEnvironmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHoneycombEnvironmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHoneycombEnvironmentResp) ProtoMessage() {}

func (x *UpdateHoneycombEnvironmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHoneycombEnvironmentResp.ProtoReflect.Descriptor instead.
func (*UpdateHoneycombEnvironmentResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{49}
}

type DeleteHoneycombEnvironmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteHoneycombEnvironmentReq) Reset() {
	*x = DeleteHoneycombEnvironmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHoneycombEnvironmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHoneycombEnvironmentReq) ProtoMessage() {}

func (x *DeleteHoneycombEnvironmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHoneycombEnvironmentReq.ProtoReflect.Descriptor instead.
func (*DeleteHoneycombEnvironmentReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{50}
}

func (x *DeleteHoneycombEnvironmentReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteHoneycombEnvironmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteHoneycombEnvironmentResp) Reset() {
	*x = DeleteHoneycombEnvironmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHoneycombEnvironmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHoneycombEnvironmentResp) ProtoMessage() {}

func (x *DeleteHoneycombEnvironmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHoneycombEnvironmentResp.ProtoReflect.Descriptor instead.
func (*DeleteHoneycombEnvironmentResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{51}
}

type UninstallHoneycombReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UninstallHoneycombReq) Reset() {
	*x = UninstallHoneycombReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UninstallHoneycombReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallHoneycombReq) ProtoMessage() {}

func (x *UninstallHoneycombReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallHoneycombReq.ProtoReflect.Descriptor instead.
func (*UninstallHoneycombReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{52}
}

type UninstallHoneycombResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationIds []string `protobuf:"bytes,1,rep,name=integration_ids,json=integrationIds,proto3" json:"integration_ids,omitempty"`
}

func (x *UninstallHoneycombResp) Reset() {
	*x = UninstallHoneycombResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UninstallHoneycombResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallHoneycombResp) ProtoMessage() {}

func (x *UninstallHoneycombResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallHoneycombResp.ProtoReflect.Descriptor instead.
func (*UninstallHoneycombResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{53}
}

func (x *UninstallHoneycombResp) GetIntegrationIds() []string {
	if x != nil {
		return x.IntegrationIds
	}
	return nil
}

type CreateGitHubAppReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId              int64  `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	PrivateKey         string `protobuf:"bytes,2,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	ClientSecret       string `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	WebhookSecret      string `protobuf:"bytes,4,opt,name=webhook_secret,json=webhookSecret,proto3" json:"webhook_secret,omitempty"`
	GithubOrganization string `protobuf:"bytes,5,opt,name=github_organization,json=githubOrganization,proto3" json:"github_organization,omitempty"`
}

func (x *CreateGitHubAppReq) Reset() {
	*x = CreateGitHubAppReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGitHubAppReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGitHubAppReq) ProtoMessage() {}

func (x *CreateGitHubAppReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGitHubAppReq.ProtoReflect.Descriptor instead.
func (*CreateGitHubAppReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{54}
}

func (x *CreateGitHubAppReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *CreateGitHubAppReq) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *CreateGitHubAppReq) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *CreateGitHubAppReq) GetWebhookSecret() string {
	if x != nil {
		return x.WebhookSecret
	}
	return ""
}

func (x *CreateGitHubAppReq) GetGithubOrganization() string {
	if x != nil {
		return x.GithubOrganization
	}
	return ""
}

type CreateGitHubAppResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
}

func (x *CreateGitHubAppResp) Reset() {
	*x = CreateGitHubAppResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGitHubAppResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGitHubAppResp) ProtoMessage() {}

func (x *CreateGitHubAppResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGitHubAppResp.ProtoReflect.Descriptor instead.
func (*CreateGitHubAppResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{55}
}

func (x *CreateGitHubAppResp) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

type InstallGitHubReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstallationId int64 `protobuf:"varint,1,opt,name=installation_id,json=installationId,proto3" json:"installation_id,omitempty"`
}

func (x *InstallGitHubReq) Reset() {
	*x = InstallGitHubReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallGitHubReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallGitHubReq) ProtoMessage() {}

func (x *InstallGitHubReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallGitHubReq.ProtoReflect.Descriptor instead.
func (*InstallGitHubReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{56}
}

func (x *InstallGitHubReq) GetInstallationId() int64 {
	if x != nil {
		return x.InstallationId
	}
	return 0
}

type InstallGitHubResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InstallGitHubResp) Reset() {
	*x = InstallGitHubResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallGitHubResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallGitHubResp) ProtoMessage() {}

func (x *InstallGitHubResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallGitHubResp.ProtoReflect.Descriptor instead.
func (*InstallGitHubResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{57}
}

type Integration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Integration) Reset() {
	*x = Integration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Integration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Integration) ProtoMessage() {}

func (x *Integration) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Integration.ProtoReflect.Descriptor instead.
func (*Integration) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{58}
}

func (x *Integration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Integration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Integration) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ListIntegrationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListIntegrationsReq) Reset() {
	*x = ListIntegrationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIntegrationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIntegrationsReq) ProtoMessage() {}

func (x *ListIntegrationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIntegrationsReq.ProtoReflect.Descriptor instead.
func (*ListIntegrationsReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{59}
}

type ListIntegrationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integrations []*Integration `protobuf:"bytes,1,rep,name=integrations,proto3" json:"integrations,omitempty"`
}

func (x *ListIntegrationsResp) Reset() {
	*x = ListIntegrationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIntegrationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIntegrationsResp) ProtoMessage() {}

func (x *ListIntegrationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIntegrationsResp.ProtoReflect.Descriptor instead.
func (*ListIntegrationsResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{60}
}

func (x *ListIntegrationsResp) GetIntegrations() []*Integration {
	if x != nil {
		return x.Integrations
	}
	return nil
}

type DeleteIntegrationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
}

func (x *DeleteIntegrationReq) Reset() {
	*x = DeleteIntegrationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIntegrationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIntegrationReq) ProtoMessage() {}

func (x *DeleteIntegrationReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIntegrationReq.ProtoReflect.Descriptor instead.
func (*DeleteIntegrationReq) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{61}
}

func (x *DeleteIntegrationReq) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

type DeleteIntegrationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteIntegrationResp) Reset() {
	*x = DeleteIntegrationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIntegrationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIntegrationResp) ProtoMessage() {}

func (x *DeleteIntegrationResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIntegrationResp.ProtoReflect.Descriptor instead.
func (*DeleteIntegrationResp) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{62}
}

type CreateContainerRegistryIntegrationReq_ECROptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKey string `protobuf:"bytes,1,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	SecretKey string `protobuf:"bytes,2,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	Region    string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	RoleArn   string `protobuf:"bytes,4,opt,name=role_arn,json=roleArn,proto3" json:"role_arn,omitempty"`
}

func (x *CreateContainerRegistryIntegrationReq_ECROptions) Reset() {
	*x = CreateContainerRegistryIntegrationReq_ECROptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContainerRegistryIntegrationReq_ECROptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerRegistryIntegrationReq_ECROptions) ProtoMessage() {}

func (x *CreateContainerRegistryIntegrationReq_ECROptions) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerRegistryIntegrationReq_ECROptions.ProtoReflect.Descriptor instead.
func (*CreateContainerRegistryIntegrationReq_ECROptions) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CreateContainerRegistryIntegrationReq_ECROptions) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *CreateContainerRegistryIntegrationReq_ECROptions) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *CreateContainerRegistryIntegrationReq_ECROptions) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CreateContainerRegistryIntegrationReq_ECROptions) GetRoleArn() string {
	if x != nil {
		return x.RoleArn
	}
	return ""
}

type CreateContainerRegistryIntegrationReq_PublicRegistryOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateContainerRegistryIntegrationReq_PublicRegistryOptions) Reset() {
	*x = CreateContainerRegistryIntegrationReq_PublicRegistryOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContainerRegistryIntegrationReq_PublicRegistryOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerRegistryIntegrationReq_PublicRegistryOptions) ProtoMessage() {}

func (x *CreateContainerRegistryIntegrationReq_PublicRegistryOptions) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerRegistryIntegrationReq_PublicRegistryOptions.ProtoReflect.Descriptor instead.
func (*CreateContainerRegistryIntegrationReq_PublicRegistryOptions) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{2, 1}
}

type ContainerRegistryIntegration_ECRInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *ContainerRegistryIntegration_ECRInfo) Reset() {
	*x = ContainerRegistryIntegration_ECRInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerRegistryIntegration_ECRInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerRegistryIntegration_ECRInfo) ProtoMessage() {}

func (x *ContainerRegistryIntegration_ECRInfo) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerRegistryIntegration_ECRInfo.ProtoReflect.Descriptor instead.
func (*ContainerRegistryIntegration_ECRInfo) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ContainerRegistryIntegration_ECRInfo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type ListContainerRegistryIntegrationsResp_ECRInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *ListContainerRegistryIntegrationsResp_ECRInfo) Reset() {
	*x = ListContainerRegistryIntegrationsResp_ECRInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContainerRegistryIntegrationsResp_ECRInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainerRegistryIntegrationsResp_ECRInfo) ProtoMessage() {}

func (x *ListContainerRegistryIntegrationsResp_ECRInfo) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainerRegistryIntegrationsResp_ECRInfo.ProtoReflect.Descriptor instead.
func (*ListContainerRegistryIntegrationsResp_ECRInfo) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ListContainerRegistryIntegrationsResp_ECRInfo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string         `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Name          string         `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Url           string         `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Type          string         `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"` // Implicit from registry_info below
	Status        RegistryStatus `protobuf:"varint,6,opt,name=status,proto3,enum=prodvana.workflow.RegistryStatus" json:"status,omitempty"`
	// Types that are assignable to RegistryInfo:
	//
	//	*ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo_EcrInfo
	RegistryInfo isListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo_RegistryInfo `protobuf_oneof:"registry_info"`
}

func (x *ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo) Reset() {
	*x = ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo) ProtoMessage() {}

func (x *ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo.ProtoReflect.Descriptor instead.
func (*ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{6, 1}
}

func (x *ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo) GetStatus() RegistryStatus {
	if x != nil {
		return x.Status
	}
	return RegistryStatus_UNDEFINED
}

func (m *ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo) GetRegistryInfo() isListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo_RegistryInfo {
	if m != nil {
		return m.RegistryInfo
	}
	return nil
}

func (x *ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo) GetEcrInfo() *ListContainerRegistryIntegrationsResp_ECRInfo {
	if x, ok := x.GetRegistryInfo().(*ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo_EcrInfo); ok {
		return x.EcrInfo
	}
	return nil
}

type isListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo_RegistryInfo interface {
	isListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo_RegistryInfo()
}

type ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo_EcrInfo struct {
	EcrInfo *ListContainerRegistryIntegrationsResp_ECRInfo `protobuf:"bytes,7,opt,name=ecr_info,json=ecrInfo,proto3,oneof"`
}

func (*ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo_EcrInfo) isListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo_RegistryInfo() {
}

type GetServiceImageInfoResp_VersionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version           string                                       `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	ProgramInfos      []*GetServiceImageInfoResp_ProgramInfo       `protobuf:"bytes,2,rep,name=program_infos,json=programInfos,proto3" json:"program_infos,omitempty"`
	PerReleaseChannel []*GetServiceImageInfoResp_PerReleaseChannel `protobuf:"bytes,3,rep,name=per_release_channel,json=perReleaseChannel,proto3" json:"per_release_channel,omitempty"`
}

func (x *GetServiceImageInfoResp_VersionInfo) Reset() {
	*x = GetServiceImageInfoResp_VersionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceImageInfoResp_VersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceImageInfoResp_VersionInfo) ProtoMessage() {}

func (x *GetServiceImageInfoResp_VersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceImageInfoResp_VersionInfo.ProtoReflect.Descriptor instead.
func (*GetServiceImageInfoResp_VersionInfo) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{23, 0}
}

func (x *GetServiceImageInfoResp_VersionInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetServiceImageInfoResp_VersionInfo) GetProgramInfos() []*GetServiceImageInfoResp_ProgramInfo {
	if x != nil {
		return x.ProgramInfos
	}
	return nil
}

func (x *GetServiceImageInfoResp_VersionInfo) GetPerReleaseChannel() []*GetServiceImageInfoResp_PerReleaseChannel {
	if x != nil {
		return x.PerReleaseChannel
	}
	return nil
}

type GetServiceImageInfoResp_ProgramInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl string   `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Tags     []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *GetServiceImageInfoResp_ProgramInfo) Reset() {
	*x = GetServiceImageInfoResp_ProgramInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceImageInfoResp_ProgramInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceImageInfoResp_ProgramInfo) ProtoMessage() {}

func (x *GetServiceImageInfoResp_ProgramInfo) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceImageInfoResp_ProgramInfo.ProtoReflect.Descriptor instead.
func (*GetServiceImageInfoResp_ProgramInfo) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{23, 1}
}

func (x *GetServiceImageInfoResp_ProgramInfo) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *GetServiceImageInfoResp_ProgramInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type GetServiceImageInfoResp_PerReleaseChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseChannel string                                 `protobuf:"bytes,1,opt,name=release_channel,json=releaseChannel,proto3" json:"release_channel,omitempty"`
	ProgramInfos   []*GetServiceImageInfoResp_ProgramInfo `protobuf:"bytes,2,rep,name=program_infos,json=programInfos,proto3" json:"program_infos,omitempty"`
}

func (x *GetServiceImageInfoResp_PerReleaseChannel) Reset() {
	*x = GetServiceImageInfoResp_PerReleaseChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceImageInfoResp_PerReleaseChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceImageInfoResp_PerReleaseChannel) ProtoMessage() {}

func (x *GetServiceImageInfoResp_PerReleaseChannel) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceImageInfoResp_PerReleaseChannel.ProtoReflect.Descriptor instead.
func (*GetServiceImageInfoResp_PerReleaseChannel) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{23, 2}
}

func (x *GetServiceImageInfoResp_PerReleaseChannel) GetReleaseChannel() string {
	if x != nil {
		return x.ReleaseChannel
	}
	return ""
}

func (x *GetServiceImageInfoResp_PerReleaseChannel) GetProgramInfos() []*GetServiceImageInfoResp_ProgramInfo {
	if x != nil {
		return x.ProgramInfos
	}
	return nil
}

type ListHoneycombEnvironmentsResp_HoneycombEnvironment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListHoneycombEnvironmentsResp_HoneycombEnvironment) Reset() {
	*x = ListHoneycombEnvironmentsResp_HoneycombEnvironment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHoneycombEnvironmentsResp_HoneycombEnvironment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHoneycombEnvironmentsResp_HoneycombEnvironment) ProtoMessage() {}

func (x *ListHoneycombEnvironmentsResp_HoneycombEnvironment) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_workflow_workflow_manager_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHoneycombEnvironmentsResp_HoneycombEnvironment.ProtoReflect.Descriptor instead.
func (*ListHoneycombEnvironmentsResp_HoneycombEnvironment) Descriptor() ([]byte, []int) {
	return file_prodvana_workflow_workflow_manager_proto_rawDescGZIP(), []int{45, 0}
}

func (x *ListHoneycombEnvironmentsResp_HoneycombEnvironment) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *ListHoneycombEnvironmentsResp_HoneycombEnvironment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_prodvana_workflow_workflow_manager_proto protoreflect.FileDescriptor

var file_prodvana_workflow_workflow_manager_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x70, 0x72, 0x6f, 0x64,
	0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x65, 0x6e, 0x76, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x2f, 0x72, 0x65, 0x70,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x01, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x41, 0x0a,
	0x0c, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xb2, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x2d, 0x0a, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4a, 0x04, 0x08, 0x01, 0x10,
	0x02, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x82, 0x05, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x3f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0xfa,
	0x42, 0x28, 0x72, 0x26, 0x10, 0x01, 0x18, 0x3f, 0x32, 0x20, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x5d,
	0x28, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x5d, 0x29, 0x7b, 0x30, 0x2c, 0x31, 0x7d, 0x24, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x66, 0x0a, 0x0b, 0x65,
	0x63, 0x72, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x2e, 0x45, 0x43, 0x52, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x63, 0x72, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x88, 0x01, 0x0a, 0x17, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x15, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x7d,
	0x0a, 0x0a, 0x45, 0x43, 0x52, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x72, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x72, 0x6e, 0x1a, 0x17, 0x0a,
	0x15, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4e, 0x0a, 0x25, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x24, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x65, 0x74, 0x63, 0x68, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x93, 0x03, 0x0a, 0x1c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x54, 0x0a, 0x08, 0x65, 0x63, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x43, 0x52, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x07, 0x65, 0x63, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4d, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x21, 0x0a, 0x07, 0x45, 0x43, 0x52, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x42, 0x0f, 0x0a, 0x0d, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xaf, 0x04, 0x0a, 0x25,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x8c, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x13, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x1a, 0x21, 0x0a, 0x07, 0x45, 0x43, 0x52, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x1a, 0xd3, 0x02, 0x0a, 0x20, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5d, 0x0a, 0x08, 0x65, 0x63, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x2e, 0x45, 0x43, 0x52, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x07,
	0x65, 0x63, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0f, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x4a, 0x04,
	0x08, 0x04, 0x10, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x0d,
	0x6d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x49, 0x0a,
	0x22, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x72, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4b, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x22, 0xdd, 0x01, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x25,
	0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x2e, 0x0a, 0x13, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73,
	0x6b, 0x69, 0x70, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x81, 0x01, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x38,
	0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x48, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x71, 0x0a, 0x20, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d,
	0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x65, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a,
	0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x22, 0x6a, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x22, 0x66, 0x0a, 0x19, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a,
	0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x67, 0x0a, 0x1e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x22,
	0x21, 0x0a, 0x1f, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x22, 0xcc, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73, 0x6b,
	0x69, 0x70, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65, 0x42,
	0x10, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x6e, 0x65, 0x6f,
	0x66, 0x22, 0x96, 0x02, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x2e, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x38, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x1a, 0x58, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x67, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x73, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x73, 0x22, 0x70, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x97, 0x05, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x5b, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x1a, 0xf2, 0x01, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5b, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x6c, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x5f, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x50, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x11, 0x70, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x1a, 0x4c, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x52, 0x06, 0x64, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x1a, 0x99, 0x01, 0x0a, 0x11, 0x50, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x5b, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22,
	0x5e, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x22,
	0x46, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71,
	0x22, 0x2a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6c,
	0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x13, 0x0a, 0x11,
	0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x22, 0x2e, 0x0a, 0x12, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6c,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x32, 0x0a, 0x0c, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x50, 0x61, 0x67, 0x65, 0x72, 0x44, 0x75, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x22, 0x4a, 0x0a, 0x14, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x72, 0x44, 0x75, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x72, 0x44, 0x75, 0x74, 0x79, 0x55, 0x72, 0x6c, 0x52,
	0x65, 0x71, 0x22, 0x2e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x50, 0x61, 0x67, 0x65, 0x72, 0x44, 0x75, 0x74, 0x79, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50,
	0x61, 0x67, 0x65, 0x72, 0x44, 0x75, 0x74, 0x79, 0x52, 0x65, 0x71, 0x22, 0x32, 0x0a, 0x16, 0x55,
	0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x72, 0x44, 0x75, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x36, 0x0a, 0x10, 0x50, 0x61, 0x67, 0x65, 0x72, 0x44, 0x75, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x08, 0x61, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3b, 0x0a,
	0x12, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x6e,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x52, 0x65,
	0x71, 0x22, 0x3d, 0x0a, 0x14, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x47, 0x72,
	0x61, 0x66, 0x61, 0x6e, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x22, 0x55, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x22, 0x1e, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6e, 0x65,
	0x79, 0x63, 0x6f, 0x6d, 0x62, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x22, 0xdd, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6e,
	0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x48,
	0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x1a, 0x51, 0x0a, 0x14, 0x48, 0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5b, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6e, 0x65, 0x79,
	0x63, 0x6f, 0x6d, 0x62, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x22, 0x44, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d,
	0x62, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0x20, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x33, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x48, 0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x20, 0x0a, 0x1e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x17,
	0x0a, 0x15, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x48, 0x6f, 0x6e, 0x65, 0x79,
	0x63, 0x6f, 0x6d, 0x62, 0x52, 0x65, 0x71, 0x22, 0x41, 0x0a, 0x16, 0x55, 0x6e, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x48, 0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0xc9, 0x01, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x71, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3c, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a,
	0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x47,
	0x69, 0x74, 0x48, 0x75, 0x62, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x13, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x47, 0x69, 0x74, 0x48,
	0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x22, 0x45, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x15, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x22, 0x5a, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0c,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x3d, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x2a, 0x39, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x4f, 0x43, 0x4b, 0x45, 0x52, 0x5f,
	0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x43,
	0x52, 0x10, 0x02, 0x2a, 0x3a, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x2a,
	0x45, 0x0a, 0x0b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e,
	0x0a, 0x0a, 0x49, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x49,
	0x4e, 0x44, 0x45, 0x58, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x44,
	0x45, 0x58, 0x45, 0x44, 0x10, 0x03, 0x32, 0xc7, 0x24, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x7d, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e,
	0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x93, 0x01, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x27, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76,
	0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x2a, 0x23, 0x2f, 0x76, 0x31, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x3d, 0x2a, 0x7d, 0x12,
	0xcf, 0x01, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e,
	0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x22, 0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x2d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0xc3, 0x01, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x25, 0x12, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x2d, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0xcf, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x37, 0x12, 0x35, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x2d, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x7b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x2a, 0x7d, 0x12, 0xb1, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3d,
	0x12, 0x3b, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3d,
	0x2a, 0x7d, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x3d, 0x2a, 0x7d, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0xb4, 0x01,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x30, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x30,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x3d, 0x2a, 0x7d, 0x2f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x12, 0xba, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x31,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x29, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x3d, 0x2a, 0x7d, 0x2f, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x12, 0xbf, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x3f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39, 0x12, 0x37, 0x2f, 0x76, 0x31, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x3d, 0x2a, 0x7d, 0x2f,
	0x72, 0x65, 0x70, 0x6f, 0x2f, 0x7b, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x3d, 0x2a, 0x7d, 0x12, 0xb1, 0x01, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2c,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x3a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x34, 0x3a, 0x01, 0x2a, 0x22, 0x2f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x3d, 0x2a, 0x7d, 0x2f, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x12, 0xbf, 0x01, 0x0a, 0x1b, 0x53, 0x74, 0x6f, 0x70,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53,
	0x74, 0x6f, 0x70, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x39,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x2a, 0x31, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x3d, 0x2a, 0x7d, 0x2f, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x2f, 0x75, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x12, 0xa7, 0x01, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x12, 0x34, 0x2f,
	0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x7b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x3d,
	0x2a, 0x7d, 0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2d, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x7f, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6c,
	0x61, 0x63, 0x6b, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53,
	0x6c, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x26, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x2f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x12, 0x87, 0x01, 0x0a, 0x0e, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x55, 0x6e, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6c, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x2a, 0x20, 0x2f, 0x76,
	0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73,
	0x6c, 0x61, 0x63, 0x6b, 0x2f, 0x75, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x95,
	0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6c, 0x61,
	0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x29, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6c,
	0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x24, 0x12, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x2d, 0x75, 0x72, 0x6c, 0x12, 0x8f, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x72, 0x44, 0x75, 0x74, 0x79, 0x12, 0x26, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x72, 0x44, 0x75, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50,
	0x61, 0x67, 0x65, 0x72, 0x44, 0x75, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x72, 0x64, 0x75, 0x74, 0x79,
	0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0xa5, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x72, 0x44, 0x75, 0x74, 0x79,
	0x55, 0x72, 0x6c, 0x12, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x72, 0x44, 0x75, 0x74, 0x79, 0x55, 0x72, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x50, 0x61, 0x67, 0x65, 0x72, 0x44, 0x75, 0x74, 0x79, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x72,
	0x64, 0x75, 0x74, 0x79, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x2d, 0x75, 0x72, 0x6c,
	0x12, 0x97, 0x01, 0x0a, 0x12, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x61,
	0x67, 0x65, 0x72, 0x44, 0x75, 0x74, 0x79, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x55, 0x6e, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x72, 0x44, 0x75, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50,
	0x61, 0x67, 0x65, 0x72, 0x44, 0x75, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x26, 0x2a, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x72, 0x64, 0x75, 0x74, 0x79,
	0x2f, 0x75, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x97, 0x01, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61,
	0x66, 0x61, 0x6e, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x66, 0x61,
	0x6e, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76, 0x31, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x72, 0x61,
	0x66, 0x61, 0x6e, 0x61, 0x12, 0x8a, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22,
	0x20, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x12, 0x8f, 0x01, 0x0a, 0x10, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x47,
	0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e,
	0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x55, 0x6e, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x27,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x61, 0x66,
	0x61, 0x6e, 0x61, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x2a,
	0x22, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x2f, 0x75, 0x6e, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x12, 0xae, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6e, 0x65,
	0x79, 0x63, 0x6f, 0x6d, 0x62, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6e, 0x65, 0x79, 0x63,
	0x6f, 0x6d, 0x62, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6e, 0x65, 0x79,
	0x63, 0x6f, 0x6d, 0x62, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x76,
	0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x68,
	0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0xab, 0x01, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6e, 0x65,
	0x79, 0x63, 0x6f, 0x6d, 0x62, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d,
	0x62, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x76, 0x31, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x68, 0x6f, 0x6e,
	0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0xbd, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6e,
	0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x65,
	0x79, 0x63, 0x6f, 0x6d, 0x62, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x3a, 0x01,
	0x2a, 0x1a, 0x2f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x68, 0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x2f, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d,
	0x2a, 0x7d, 0x12, 0xba, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6e,
	0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x65,
	0x79, 0x63, 0x6f, 0x6d, 0x62, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f,
	0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x2a, 0x2f,
	0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x68, 0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x2a, 0x7d, 0x12,
	0x8d, 0x01, 0x0a, 0x12, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x48, 0x6f, 0x6e,
	0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e,
	0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x55, 0x6e, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x48, 0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x52, 0x65, 0x71,
	0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x48, 0x6f,
	0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x52, 0x65, 0x73, 0x70, 0x22, 0x22, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x2a, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x68, 0x6f, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6d, 0x62, 0x12,
	0x88, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62,
	0x41, 0x70, 0x70, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x69,
	0x74, 0x48, 0x75, 0x62, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x0d, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x12, 0x23, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x52, 0x65,
	0x71, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x47, 0x69, 0x74,
	0x48, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12,
	0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x42, 0x4d, 0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76,
	0x61, 0x6e, 0x61, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prodvana_workflow_workflow_manager_proto_rawDescOnce sync.Once
	file_prodvana_workflow_workflow_manager_proto_rawDescData = file_prodvana_workflow_workflow_manager_proto_rawDesc
)

func file_prodvana_workflow_workflow_manager_proto_rawDescGZIP() []byte {
	file_prodvana_workflow_workflow_manager_proto_rawDescOnce.Do(func() {
		file_prodvana_workflow_workflow_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_prodvana_workflow_workflow_manager_proto_rawDescData)
	})
	return file_prodvana_workflow_workflow_manager_proto_rawDescData
}

var file_prodvana_workflow_workflow_manager_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_prodvana_workflow_workflow_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 73)
var file_prodvana_workflow_workflow_manager_proto_goTypes = []interface{}{
	(RegistryType)(0),                                                              // 0: prodvana.workflow.RegistryType
	(RegistryStatus)(0),                                                            // 1: prodvana.workflow.RegistryStatus
	(IndexStatus)(0),                                                               // 2: prodvana.workflow.IndexStatus
	(*TrackedImageRepository)(nil),                                                 // 3: prodvana.workflow.TrackedImageRepository
	(*RegistryImage)(nil),                                                          // 4: prodvana.workflow.RegistryImage
	(*CreateContainerRegistryIntegrationReq)(nil),                                  // 5: prodvana.workflow.CreateContainerRegistryIntegrationReq
	(*CreateContainerRegistryIntegrationRes)(nil),                                  // 6: prodvana.workflow.CreateContainerRegistryIntegrationRes
	(*ListContainerRegistryIntegrationsReq)(nil),                                   // 7: prodvana.workflow.ListContainerRegistryIntegrationsReq
	(*ContainerRegistryIntegration)(nil),                                           // 8: prodvana.workflow.ContainerRegistryIntegration
	(*ListContainerRegistryIntegrationsResp)(nil),                                  // 9: prodvana.workflow.ListContainerRegistryIntegrationsResp
	(*GetContainerRegistryIntegrationReq)(nil),                                     // 10: prodvana.workflow.GetContainerRegistryIntegrationReq
	(*GetContainerRegistryIntegrationResp)(nil),                                    // 11: prodvana.workflow.GetContainerRegistryIntegrationResp
	(*GetContainerRegistryImagesReq)(nil),                                          // 12: prodvana.workflow.GetContainerRegistryImagesReq
	(*GetContainerRegistryImagesRes)(nil),                                          // 13: prodvana.workflow.GetContainerRegistryImagesRes
	(*ListTrackedImageRepositoriesReq)(nil),                                        // 14: prodvana.workflow.ListTrackedImageRepositoriesReq
	(*ListTrackedImageRepositoriesResp)(nil),                                       // 15: prodvana.workflow.ListTrackedImageRepositoriesResp
	(*GetTrackedImageRepositoryReq)(nil),                                           // 16: prodvana.workflow.GetTrackedImageRepositoryReq
	(*GetTrackedImageRepositoryResp)(nil),                                          // 17: prodvana.workflow.GetTrackedImageRepositoryResp
	(*TrackImageRepositoriesReq)(nil),                                              // 18: prodvana.workflow.TrackImageRepositoriesReq
	(*TrackImageRepositoriesResp)(nil),                                             // 19: prodvana.workflow.TrackImageRepositoriesResp
	(*StopTrackingImageRepositoryReq)(nil),                                         // 20: prodvana.workflow.StopTrackingImageRepositoryReq
	(*StopTrackingImageRepositoryResp)(nil),                                        // 21: prodvana.workflow.StopTrackingImageRepositoryResp
	(*GetProgramDefaultsReq)(nil),                                                  // 22: prodvana.workflow.GetProgramDefaultsReq
	(*ProgramDefaults)(nil),                                                        // 23: prodvana.workflow.ProgramDefaults
	(*GetProgramDefaultsResp)(nil),                                                 // 24: prodvana.workflow.GetProgramDefaultsResp
	(*GetServiceImageInfoReq)(nil),                                                 // 25: prodvana.workflow.GetServiceImageInfoReq
	(*GetServiceImageInfoResp)(nil),                                                // 26: prodvana.workflow.GetServiceImageInfoResp
	(*InstallSlackReq)(nil),                                                        // 27: prodvana.workflow.InstallSlackReq
	(*InstallSlackResp)(nil),                                                       // 28: prodvana.workflow.InstallSlackResp
	(*GetInstallSlackUrlReq)(nil),                                                  // 29: prodvana.workflow.GetInstallSlackUrlReq
	(*GetInstallSlackUrlResp)(nil),                                                 // 30: prodvana.workflow.GetInstallSlackUrlResp
	(*UninstallSlackReq)(nil),                                                      // 31: prodvana.workflow.UninstallSlackReq
	(*UninstallSlackResp)(nil),                                                     // 32: prodvana.workflow.UninstallSlackResp
	(*SlackChannel)(nil),                                                           // 33: prodvana.workflow.SlackChannel
	(*InstallPagerDutyReq)(nil),                                                    // 34: prodvana.workflow.InstallPagerDutyReq
	(*InstallPagerDutyResp)(nil),                                                   // 35: prodvana.workflow.InstallPagerDutyResp
	(*GetInstallPagerDutyUrlReq)(nil),                                              // 36: prodvana.workflow.GetInstallPagerDutyUrlReq
	(*GetInstallPagerDutyUrlResp)(nil),                                             // 37: prodvana.workflow.GetInstallPagerDutyUrlResp
	(*UninstallPagerDutyReq)(nil),                                                  // 38: prodvana.workflow.UninstallPagerDutyReq
	(*UninstallPagerDutyResp)(nil),                                                 // 39: prodvana.workflow.UninstallPagerDutyResp
	(*PagerDutyService)(nil),                                                       // 40: prodvana.workflow.PagerDutyService
	(*InstallGrafanaReq)(nil),                                                      // 41: prodvana.workflow.InstallGrafanaReq
	(*InstallGrafanaResp)(nil),                                                     // 42: prodvana.workflow.InstallGrafanaResp
	(*UninstallGrafanaReq)(nil),                                                    // 43: prodvana.workflow.UninstallGrafanaReq
	(*UninstallGrafanaResp)(nil),                                                   // 44: prodvana.workflow.UninstallGrafanaResp
	(*GetGrafanaInstallationReq)(nil),                                              // 45: prodvana.workflow.GetGrafanaInstallationReq
	(*GetGrafanaInstallationResp)(nil),                                             // 46: prodvana.workflow.GetGrafanaInstallationResp
	(*ListHoneycombEnvironmentsReq)(nil),                                           // 47: prodvana.workflow.ListHoneycombEnvironmentsReq
	(*ListHoneycombEnvironmentsResp)(nil),                                          // 48: prodvana.workflow.ListHoneycombEnvironmentsResp
	(*AddHoneycombEnvironmentReq)(nil),                                             // 49: prodvana.workflow.AddHoneycombEnvironmentReq
	(*AddHoneycombEnvironmentResp)(nil),                                            // 50: prodvana.workflow.AddHoneycombEnvironmentResp
	(*UpdateHoneycombEnvironmentReq)(nil),                                          // 51: prodvana.workflow.UpdateHoneycombEnvironmentReq
	(*UpdateHoneycombEnvironmentResp)(nil),                                         // 52: prodvana.workflow.UpdateHoneycombEnvironmentResp
	(*DeleteHoneycombEnvironmentReq)(nil),                                          // 53: prodvana.workflow.DeleteHoneycombEnvironmentReq
	(*DeleteHoneycombEnvironmentResp)(nil),                                         // 54: prodvana.workflow.DeleteHoneycombEnvironmentResp
	(*UninstallHoneycombReq)(nil),                                                  // 55: prodvana.workflow.UninstallHoneycombReq
	(*UninstallHoneycombResp)(nil),                                                 // 56: prodvana.workflow.UninstallHoneycombResp
	(*CreateGitHubAppReq)(nil),                                                     // 57: prodvana.workflow.CreateGitHubAppReq
	(*CreateGitHubAppResp)(nil),                                                    // 58: prodvana.workflow.CreateGitHubAppResp
	(*InstallGitHubReq)(nil),                                                       // 59: prodvana.workflow.InstallGitHubReq
	(*InstallGitHubResp)(nil),                                                      // 60: prodvana.workflow.InstallGitHubResp
	(*Integration)(nil),                                                            // 61: prodvana.workflow.Integration
	(*ListIntegrationsReq)(nil),                                                    // 62: prodvana.workflow.ListIntegrationsReq
	(*ListIntegrationsResp)(nil),                                                   // 63: prodvana.workflow.ListIntegrationsResp
	(*DeleteIntegrationReq)(nil),                                                   // 64: prodvana.workflow.DeleteIntegrationReq
	(*DeleteIntegrationResp)(nil),                                                  // 65: prodvana.workflow.DeleteIntegrationResp
	(*CreateContainerRegistryIntegrationReq_ECROptions)(nil),                       // 66: prodvana.workflow.CreateContainerRegistryIntegrationReq.ECROptions
	(*CreateContainerRegistryIntegrationReq_PublicRegistryOptions)(nil),            // 67: prodvana.workflow.CreateContainerRegistryIntegrationReq.PublicRegistryOptions
	(*ContainerRegistryIntegration_ECRInfo)(nil),                                   // 68: prodvana.workflow.ContainerRegistryIntegration.ECRInfo
	(*ListContainerRegistryIntegrationsResp_ECRInfo)(nil),                          // 69: prodvana.workflow.ListContainerRegistryIntegrationsResp.ECRInfo
	(*ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo)(nil), // 70: prodvana.workflow.ListContainerRegistryIntegrationsResp.ContainerRegistryIntegrationInfo
	nil, // 71: prodvana.workflow.ProgramDefaults.EnvEntry
	(*GetServiceImageInfoResp_VersionInfo)(nil),                // 72: prodvana.workflow.GetServiceImageInfoResp.VersionInfo
	(*GetServiceImageInfoResp_ProgramInfo)(nil),                // 73: prodvana.workflow.GetServiceImageInfoResp.ProgramInfo
	(*GetServiceImageInfoResp_PerReleaseChannel)(nil),          // 74: prodvana.workflow.GetServiceImageInfoResp.PerReleaseChannel
	(*ListHoneycombEnvironmentsResp_HoneycombEnvironment)(nil), // 75: prodvana.workflow.ListHoneycombEnvironmentsResp.HoneycombEnvironment
	(*timestamppb.Timestamp)(nil),                              // 76: google.protobuf.Timestamp
	(*repo.Commit)(nil),                                        // 77: prodvana.repo.Commit
	(*common_config.PortConfig)(nil),                           // 78: prodvana.common_config.PortConfig
	(*common_config.EnvValue)(nil),                             // 79: prodvana.common_config.EnvValue
}
var file_prodvana_workflow_workflow_manager_proto_depIdxs = []int32{
	76, // 0: prodvana.workflow.TrackedImageRepository.last_index:type_name -> google.protobuf.Timestamp
	2,  // 1: prodvana.workflow.TrackedImageRepository.index_status:type_name -> prodvana.workflow.IndexStatus
	76, // 2: prodvana.workflow.RegistryImage.created:type_name -> google.protobuf.Timestamp
	77, // 3: prodvana.workflow.RegistryImage.commit:type_name -> prodvana.repo.Commit
	0,  // 4: prodvana.workflow.CreateContainerRegistryIntegrationReq.type:type_name -> prodvana.workflow.RegistryType
	66, // 5: prodvana.workflow.CreateContainerRegistryIntegrationReq.ecr_options:type_name -> prodvana.workflow.CreateContainerRegistryIntegrationReq.ECROptions
	67, // 6: prodvana.workflow.CreateContainerRegistryIntegrationReq.public_registry_options:type_name -> prodvana.workflow.CreateContainerRegistryIntegrationReq.PublicRegistryOptions
	1,  // 7: prodvana.workflow.ContainerRegistryIntegration.status:type_name -> prodvana.workflow.RegistryStatus
	68, // 8: prodvana.workflow.ContainerRegistryIntegration.ecr_info:type_name -> prodvana.workflow.ContainerRegistryIntegration.ECRInfo
	3,  // 9: prodvana.workflow.ContainerRegistryIntegration.repositories:type_name -> prodvana.workflow.TrackedImageRepository
	70, // 10: prodvana.workflow.ListContainerRegistryIntegrationsResp.container_registries:type_name -> prodvana.workflow.ListContainerRegistryIntegrationsResp.ContainerRegistryIntegrationInfo
	8,  // 11: prodvana.workflow.GetContainerRegistryIntegrationResp.registry:type_name -> prodvana.workflow.ContainerRegistryIntegration
	4,  // 12: prodvana.workflow.GetContainerRegistryImagesRes.images:type_name -> prodvana.workflow.RegistryImage
	3,  // 13: prodvana.workflow.ListTrackedImageRepositoriesResp.repositories:type_name -> prodvana.workflow.TrackedImageRepository
	3,  // 14: prodvana.workflow.GetTrackedImageRepositoryResp.repository:type_name -> prodvana.workflow.TrackedImageRepository
	71, // 15: prodvana.workflow.ProgramDefaults.env:type_name -> prodvana.workflow.ProgramDefaults.EnvEntry
	78, // 16: prodvana.workflow.ProgramDefaults.ports:type_name -> prodvana.common_config.PortConfig
	23, // 17: prodvana.workflow.GetProgramDefaultsResp.program_defaults:type_name -> prodvana.workflow.ProgramDefaults
	72, // 18: prodvana.workflow.GetServiceImageInfoResp.version_infos:type_name -> prodvana.workflow.GetServiceImageInfoResp.VersionInfo
	75, // 19: prodvana.workflow.ListHoneycombEnvironmentsResp.environments:type_name -> prodvana.workflow.ListHoneycombEnvironmentsResp.HoneycombEnvironment
	61, // 20: prodvana.workflow.ListIntegrationsResp.integrations:type_name -> prodvana.workflow.Integration
	1,  // 21: prodvana.workflow.ListContainerRegistryIntegrationsResp.ContainerRegistryIntegrationInfo.status:type_name -> prodvana.workflow.RegistryStatus
	69, // 22: prodvana.workflow.ListContainerRegistryIntegrationsResp.ContainerRegistryIntegrationInfo.ecr_info:type_name -> prodvana.workflow.ListContainerRegistryIntegrationsResp.ECRInfo
	79, // 23: prodvana.workflow.ProgramDefaults.EnvEntry.value:type_name -> prodvana.common_config.EnvValue
	73, // 24: prodvana.workflow.GetServiceImageInfoResp.VersionInfo.program_infos:type_name -> prodvana.workflow.GetServiceImageInfoResp.ProgramInfo
	74, // 25: prodvana.workflow.GetServiceImageInfoResp.VersionInfo.per_release_channel:type_name -> prodvana.workflow.GetServiceImageInfoResp.PerReleaseChannel
	73, // 26: prodvana.workflow.GetServiceImageInfoResp.PerReleaseChannel.program_infos:type_name -> prodvana.workflow.GetServiceImageInfoResp.ProgramInfo
	62, // 27: prodvana.workflow.WorkflowManager.ListIntegrations:input_type -> prodvana.workflow.ListIntegrationsReq
	64, // 28: prodvana.workflow.WorkflowManager.DeleteIntegration:input_type -> prodvana.workflow.DeleteIntegrationReq
	5,  // 29: prodvana.workflow.WorkflowManager.CreateContainerRegistryIntegration:input_type -> prodvana.workflow.CreateContainerRegistryIntegrationReq
	7,  // 30: prodvana.workflow.WorkflowManager.ListContainerRegistryIntegrations:input_type -> prodvana.workflow.ListContainerRegistryIntegrationsReq
	10, // 31: prodvana.workflow.WorkflowManager.GetContainerRegistryIntegration:input_type -> prodvana.workflow.GetContainerRegistryIntegrationReq
	25, // 32: prodvana.workflow.WorkflowManager.GetServiceImageInfo:input_type -> prodvana.workflow.GetServiceImageInfoReq
	12, // 33: prodvana.workflow.WorkflowManager.GetContainerRegistryImages:input_type -> prodvana.workflow.GetContainerRegistryImagesReq
	14, // 34: prodvana.workflow.WorkflowManager.ListTrackedImageRepositories:input_type -> prodvana.workflow.ListTrackedImageRepositoriesReq
	16, // 35: prodvana.workflow.WorkflowManager.GetTrackedImageRepository:input_type -> prodvana.workflow.GetTrackedImageRepositoryReq
	18, // 36: prodvana.workflow.WorkflowManager.TrackImageRepositories:input_type -> prodvana.workflow.TrackImageRepositoriesReq
	20, // 37: prodvana.workflow.WorkflowManager.StopTrackingImageRepository:input_type -> prodvana.workflow.StopTrackingImageRepositoryReq
	22, // 38: prodvana.workflow.WorkflowManager.GetProgramDefaults:input_type -> prodvana.workflow.GetProgramDefaultsReq
	27, // 39: prodvana.workflow.WorkflowManager.InstallSlack:input_type -> prodvana.workflow.InstallSlackReq
	31, // 40: prodvana.workflow.WorkflowManager.UninstallSlack:input_type -> prodvana.workflow.UninstallSlackReq
	29, // 41: prodvana.workflow.WorkflowManager.GetInstallSlackUrl:input_type -> prodvana.workflow.GetInstallSlackUrlReq
	34, // 42: prodvana.workflow.WorkflowManager.InstallPagerDuty:input_type -> prodvana.workflow.InstallPagerDutyReq
	36, // 43: prodvana.workflow.WorkflowManager.GetInstallPagerDutyUrl:input_type -> prodvana.workflow.GetInstallPagerDutyUrlReq
	38, // 44: prodvana.workflow.WorkflowManager.UninstallPagerDuty:input_type -> prodvana.workflow.UninstallPagerDutyReq
	45, // 45: prodvana.workflow.WorkflowManager.GetGrafanaInstallation:input_type -> prodvana.workflow.GetGrafanaInstallationReq
	41, // 46: prodvana.workflow.WorkflowManager.InstallGrafana:input_type -> prodvana.workflow.InstallGrafanaReq
	43, // 47: prodvana.workflow.WorkflowManager.UninstallGrafana:input_type -> prodvana.workflow.UninstallGrafanaReq
	47, // 48: prodvana.workflow.WorkflowManager.ListHoneycombEnvironments:input_type -> prodvana.workflow.ListHoneycombEnvironmentsReq
	49, // 49: prodvana.workflow.WorkflowManager.AddHoneycombEnvironment:input_type -> prodvana.workflow.AddHoneycombEnvironmentReq
	51, // 50: prodvana.workflow.WorkflowManager.UpdateHoneycombEnvironment:input_type -> prodvana.workflow.UpdateHoneycombEnvironmentReq
	53, // 51: prodvana.workflow.WorkflowManager.DeleteHoneycombEnvironment:input_type -> prodvana.workflow.DeleteHoneycombEnvironmentReq
	55, // 52: prodvana.workflow.WorkflowManager.UninstallHoneycomb:input_type -> prodvana.workflow.UninstallHoneycombReq
	57, // 53: prodvana.workflow.WorkflowManager.CreateGitHubApp:input_type -> prodvana.workflow.CreateGitHubAppReq
	59, // 54: prodvana.workflow.WorkflowManager.InstallGitHub:input_type -> prodvana.workflow.InstallGitHubReq
	63, // 55: prodvana.workflow.WorkflowManager.ListIntegrations:output_type -> prodvana.workflow.ListIntegrationsResp
	65, // 56: prodvana.workflow.WorkflowManager.DeleteIntegration:output_type -> prodvana.workflow.DeleteIntegrationResp
	6,  // 57: prodvana.workflow.WorkflowManager.CreateContainerRegistryIntegration:output_type -> prodvana.workflow.CreateContainerRegistryIntegrationRes
	9,  // 58: prodvana.workflow.WorkflowManager.ListContainerRegistryIntegrations:output_type -> prodvana.workflow.ListContainerRegistryIntegrationsResp
	11, // 59: prodvana.workflow.WorkflowManager.GetContainerRegistryIntegration:output_type -> prodvana.workflow.GetContainerRegistryIntegrationResp
	26, // 60: prodvana.workflow.WorkflowManager.GetServiceImageInfo:output_type -> prodvana.workflow.GetServiceImageInfoResp
	13, // 61: prodvana.workflow.WorkflowManager.GetContainerRegistryImages:output_type -> prodvana.workflow.GetContainerRegistryImagesRes
	15, // 62: prodvana.workflow.WorkflowManager.ListTrackedImageRepositories:output_type -> prodvana.workflow.ListTrackedImageRepositoriesResp
	17, // 63: prodvana.workflow.WorkflowManager.GetTrackedImageRepository:output_type -> prodvana.workflow.GetTrackedImageRepositoryResp
	19, // 64: prodvana.workflow.WorkflowManager.TrackImageRepositories:output_type -> prodvana.workflow.TrackImageRepositoriesResp
	21, // 65: prodvana.workflow.WorkflowManager.StopTrackingImageRepository:output_type -> prodvana.workflow.StopTrackingImageRepositoryResp
	24, // 66: prodvana.workflow.WorkflowManager.GetProgramDefaults:output_type -> prodvana.workflow.GetProgramDefaultsResp
	28, // 67: prodvana.workflow.WorkflowManager.InstallSlack:output_type -> prodvana.workflow.InstallSlackResp
	32, // 68: prodvana.workflow.WorkflowManager.UninstallSlack:output_type -> prodvana.workflow.UninstallSlackResp
	30, // 69: prodvana.workflow.WorkflowManager.GetInstallSlackUrl:output_type -> prodvana.workflow.GetInstallSlackUrlResp
	35, // 70: prodvana.workflow.WorkflowManager.InstallPagerDuty:output_type -> prodvana.workflow.InstallPagerDutyResp
	37, // 71: prodvana.workflow.WorkflowManager.GetInstallPagerDutyUrl:output_type -> prodvana.workflow.GetInstallPagerDutyUrlResp
	39, // 72: prodvana.workflow.WorkflowManager.UninstallPagerDuty:output_type -> prodvana.workflow.UninstallPagerDutyResp
	46, // 73: prodvana.workflow.WorkflowManager.GetGrafanaInstallation:output_type -> prodvana.workflow.GetGrafanaInstallationResp
	42, // 74: prodvana.workflow.WorkflowManager.InstallGrafana:output_type -> prodvana.workflow.InstallGrafanaResp
	44, // 75: prodvana.workflow.WorkflowManager.UninstallGrafana:output_type -> prodvana.workflow.UninstallGrafanaResp
	48, // 76: prodvana.workflow.WorkflowManager.ListHoneycombEnvironments:output_type -> prodvana.workflow.ListHoneycombEnvironmentsResp
	50, // 77: prodvana.workflow.WorkflowManager.AddHoneycombEnvironment:output_type -> prodvana.workflow.AddHoneycombEnvironmentResp
	52, // 78: prodvana.workflow.WorkflowManager.UpdateHoneycombEnvironment:output_type -> prodvana.workflow.UpdateHoneycombEnvironmentResp
	54, // 79: prodvana.workflow.WorkflowManager.DeleteHoneycombEnvironment:output_type -> prodvana.workflow.DeleteHoneycombEnvironmentResp
	56, // 80: prodvana.workflow.WorkflowManager.UninstallHoneycomb:output_type -> prodvana.workflow.UninstallHoneycombResp
	58, // 81: prodvana.workflow.WorkflowManager.CreateGitHubApp:output_type -> prodvana.workflow.CreateGitHubAppResp
	60, // 82: prodvana.workflow.WorkflowManager.InstallGitHub:output_type -> prodvana.workflow.InstallGitHubResp
	55, // [55:83] is the sub-list for method output_type
	27, // [27:55] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_prodvana_workflow_workflow_manager_proto_init() }
func file_prodvana_workflow_workflow_manager_proto_init() {
	if File_prodvana_workflow_workflow_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_prodvana_workflow_workflow_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackedImageRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContainerRegistryIntegrationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContainerRegistryIntegrationRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContainerRegistryIntegrationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerRegistryIntegration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContainerRegistryIntegrationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContainerRegistryIntegrationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContainerRegistryIntegrationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContainerRegistryImagesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContainerRegistryImagesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTrackedImageRepositoriesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTrackedImageRepositoriesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrackedImageRepositoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrackedImageRepositoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackImageRepositoriesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackImageRepositoriesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTrackingImageRepositoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTrackingImageRepositoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProgramDefaultsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgramDefaults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProgramDefaultsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceImageInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceImageInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallSlackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallSlackResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstallSlackUrlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstallSlackUrlResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UninstallSlackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UninstallSlackResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlackChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallPagerDutyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallPagerDutyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstallPagerDutyUrlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstallPagerDutyUrlResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UninstallPagerDutyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UninstallPagerDutyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagerDutyService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallGrafanaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallGrafanaResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UninstallGrafanaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UninstallGrafanaResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGrafanaInstallationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGrafanaInstallationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHoneycombEnvironmentsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHoneycombEnvironmentsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHoneycombEnvironmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHoneycombEnvironmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHoneycombEnvironmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHoneycombEnvironmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHoneycombEnvironmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHoneycombEnvironmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UninstallHoneycombReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UninstallHoneycombResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGitHubAppReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGitHubAppResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallGitHubReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallGitHubResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Integration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIntegrationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIntegrationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIntegrationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIntegrationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContainerRegistryIntegrationReq_ECROptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContainerRegistryIntegrationReq_PublicRegistryOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerRegistryIntegration_ECRInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContainerRegistryIntegrationsResp_ECRInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceImageInfoResp_VersionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceImageInfoResp_ProgramInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceImageInfoResp_PerReleaseChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_workflow_workflow_manager_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHoneycombEnvironmentsResp_HoneycombEnvironment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_prodvana_workflow_workflow_manager_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*CreateContainerRegistryIntegrationReq_EcrOptions)(nil),
		(*CreateContainerRegistryIntegrationReq_PublicRegistryOptions_)(nil),
	}
	file_prodvana_workflow_workflow_manager_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ContainerRegistryIntegration_EcrInfo)(nil),
	}
	file_prodvana_workflow_workflow_manager_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*GetProgramDefaultsReq_Tag)(nil),
		(*GetProgramDefaultsReq_Image)(nil),
	}
	file_prodvana_workflow_workflow_manager_proto_msgTypes[67].OneofWrappers = []interface{}{
		(*ListContainerRegistryIntegrationsResp_ContainerRegistryIntegrationInfo_EcrInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prodvana_workflow_workflow_manager_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   73,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_prodvana_workflow_workflow_manager_proto_goTypes,
		DependencyIndexes: file_prodvana_workflow_workflow_manager_proto_depIdxs,
		EnumInfos:         file_prodvana_workflow_workflow_manager_proto_enumTypes,
		MessageInfos:      file_prodvana_workflow_workflow_manager_proto_msgTypes,
	}.Build()
	File_prodvana_workflow_workflow_manager_proto = out.File
	file_prodvana_workflow_workflow_manager_proto_rawDesc = nil
	file_prodvana_workflow_workflow_manager_proto_goTypes = nil
	file_prodvana_workflow_workflow_manager_proto_depIdxs = nil
}
