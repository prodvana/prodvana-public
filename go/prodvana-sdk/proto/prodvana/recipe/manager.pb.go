// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.21.10
// source: prodvana/recipe/manager.proto

package recipe

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	common_config "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/common_config"
	object "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/object"
	version "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/version"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigureRecipeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source         version.Source          `protobuf:"varint,1,opt,name=source,proto3,enum=prodvana.version.Source" json:"source,omitempty"`
	SourceMetadata *version.SourceMetadata `protobuf:"bytes,2,opt,name=source_metadata,json=sourceMetadata,proto3" json:"source_metadata,omitempty"`
	RecipeConfig   *RecipeConfig           `protobuf:"bytes,3,opt,name=recipe_config,json=recipeConfig,proto3" json:"recipe_config,omitempty"`
}

func (x *ConfigureRecipeReq) Reset() {
	*x = ConfigureRecipeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_recipe_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureRecipeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureRecipeReq) ProtoMessage() {}

func (x *ConfigureRecipeReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_recipe_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureRecipeReq.ProtoReflect.Descriptor instead.
func (*ConfigureRecipeReq) Descriptor() ([]byte, []int) {
	return file_prodvana_recipe_manager_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigureRecipeReq) GetSource() version.Source {
	if x != nil {
		return x.Source
	}
	return version.Source(0)
}

func (x *ConfigureRecipeReq) GetSourceMetadata() *version.SourceMetadata {
	if x != nil {
		return x.SourceMetadata
	}
	return nil
}

func (x *ConfigureRecipeReq) GetRecipeConfig() *RecipeConfig {
	if x != nil {
		return x.RecipeConfig
	}
	return nil
}

type ConfigureRecipeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipeId string `protobuf:"bytes,1,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
	Version  string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ConfigureRecipeResp) Reset() {
	*x = ConfigureRecipeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_recipe_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureRecipeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureRecipeResp) ProtoMessage() {}

func (x *ConfigureRecipeResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_recipe_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureRecipeResp.ProtoReflect.Descriptor instead.
func (*ConfigureRecipeResp) Descriptor() ([]byte, []int) {
	return file_prodvana_recipe_manager_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigureRecipeResp) GetRecipeId() string {
	if x != nil {
		return x.RecipeId
	}
	return ""
}

func (x *ConfigureRecipeResp) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ValidateConfigureRecipeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompiledConfig *RecipeConfig `protobuf:"bytes,1,opt,name=compiled_config,json=compiledConfig,proto3" json:"compiled_config,omitempty"`
}

func (x *ValidateConfigureRecipeResp) Reset() {
	*x = ValidateConfigureRecipeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_recipe_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateConfigureRecipeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateConfigureRecipeResp) ProtoMessage() {}

func (x *ValidateConfigureRecipeResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_recipe_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateConfigureRecipeResp.ProtoReflect.Descriptor instead.
func (*ValidateConfigureRecipeResp) Descriptor() ([]byte, []int) {
	return file_prodvana_recipe_manager_proto_rawDescGZIP(), []int{2}
}

func (x *ValidateConfigureRecipeResp) GetCompiledConfig() *RecipeConfig {
	if x != nil {
		return x.CompiledConfig
	}
	return nil
}

type ListRecipesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageToken string `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Types that are assignable to Filter:
	//
	//	*ListRecipesReq_ServiceFilter
	Filter isListRecipesReq_Filter `protobuf_oneof:"filter"`
}

func (x *ListRecipesReq) Reset() {
	*x = ListRecipesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_recipe_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRecipesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecipesReq) ProtoMessage() {}

func (x *ListRecipesReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_recipe_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecipesReq.ProtoReflect.Descriptor instead.
func (*ListRecipesReq) Descriptor() ([]byte, []int) {
	return file_prodvana_recipe_manager_proto_rawDescGZIP(), []int{3}
}

func (x *ListRecipesReq) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListRecipesReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (m *ListRecipesReq) GetFilter() isListRecipesReq_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *ListRecipesReq) GetServiceFilter() *ListRecipesReq_ByService {
	if x, ok := x.GetFilter().(*ListRecipesReq_ServiceFilter); ok {
		return x.ServiceFilter
	}
	return nil
}

type isListRecipesReq_Filter interface {
	isListRecipesReq_Filter()
}

type ListRecipesReq_ServiceFilter struct {
	ServiceFilter *ListRecipesReq_ByService `protobuf:"bytes,3,opt,name=service_filter,json=serviceFilter,proto3,oneof"`
}

func (*ListRecipesReq_ServiceFilter) isListRecipesReq_Filter() {}

type ListRecipesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipes       []*Recipe `protobuf:"bytes,1,rep,name=recipes,proto3" json:"recipes,omitempty"`
	NextPageToken string    `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListRecipesResp) Reset() {
	*x = ListRecipesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_recipe_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRecipesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecipesResp) ProtoMessage() {}

func (x *ListRecipesResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_recipe_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecipesResp.ProtoReflect.Descriptor instead.
func (*ListRecipesResp) Descriptor() ([]byte, []int) {
	return file_prodvana_recipe_manager_proto_rawDescGZIP(), []int{4}
}

func (x *ListRecipesResp) GetRecipes() []*Recipe {
	if x != nil {
		return x.Recipes
	}
	return nil
}

func (x *ListRecipesResp) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetRecipeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipe string `protobuf:"bytes,1,opt,name=recipe,proto3" json:"recipe,omitempty"`
}

func (x *GetRecipeReq) Reset() {
	*x = GetRecipeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_recipe_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecipeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecipeReq) ProtoMessage() {}

func (x *GetRecipeReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_recipe_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecipeReq.ProtoReflect.Descriptor instead.
func (*GetRecipeReq) Descriptor() ([]byte, []int) {
	return file_prodvana_recipe_manager_proto_rawDescGZIP(), []int{5}
}

func (x *GetRecipeReq) GetRecipe() string {
	if x != nil {
		return x.Recipe
	}
	return ""
}

type GetRecipeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipe *Recipe `protobuf:"bytes,1,opt,name=recipe,proto3" json:"recipe,omitempty"`
}

func (x *GetRecipeResp) Reset() {
	*x = GetRecipeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_recipe_manager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecipeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecipeResp) ProtoMessage() {}

func (x *GetRecipeResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_recipe_manager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecipeResp.ProtoReflect.Descriptor instead.
func (*GetRecipeResp) Descriptor() ([]byte, []int) {
	return file_prodvana_recipe_manager_proto_rawDescGZIP(), []int{6}
}

func (x *GetRecipeResp) GetRecipe() *Recipe {
	if x != nil {
		return x.Recipe
	}
	return nil
}

type GetRecipeConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipe  string `protobuf:"bytes,1,opt,name=recipe,proto3" json:"recipe,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"` // omit to get latest version
}

func (x *GetRecipeConfigReq) Reset() {
	*x = GetRecipeConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_recipe_manager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecipeConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecipeConfigReq) ProtoMessage() {}

func (x *GetRecipeConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_recipe_manager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecipeConfigReq.ProtoReflect.Descriptor instead.
func (*GetRecipeConfigReq) Descriptor() ([]byte, []int) {
	return file_prodvana_recipe_manager_proto_rawDescGZIP(), []int{7}
}

func (x *GetRecipeConfigReq) GetRecipe() string {
	if x != nil {
		return x.Recipe
	}
	return ""
}

func (x *GetRecipeConfigReq) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetRecipeConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputConfig    *RecipeConfig `protobuf:"bytes,1,opt,name=input_config,json=inputConfig,proto3" json:"input_config,omitempty"`
	CompiledConfig *RecipeConfig `protobuf:"bytes,2,opt,name=compiled_config,json=compiledConfig,proto3" json:"compiled_config,omitempty"`
	Version        string        `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"` // next tag: 4
}

func (x *GetRecipeConfigResp) Reset() {
	*x = GetRecipeConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_recipe_manager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecipeConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecipeConfigResp) ProtoMessage() {}

func (x *GetRecipeConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_recipe_manager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecipeConfigResp.ProtoReflect.Descriptor instead.
func (*GetRecipeConfigResp) Descriptor() ([]byte, []int) {
	return file_prodvana_recipe_manager_proto_rawDescGZIP(), []int{8}
}

func (x *GetRecipeConfigResp) GetInputConfig() *RecipeConfig {
	if x != nil {
		return x.InputConfig
	}
	return nil
}

func (x *GetRecipeConfigResp) GetCompiledConfig() *RecipeConfig {
	if x != nil {
		return x.CompiledConfig
	}
	return nil
}

func (x *GetRecipeConfigResp) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ApplyRecipeParametersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source         version.Source                  `protobuf:"varint,1,opt,name=source,proto3,enum=prodvana.version.Source" json:"source,omitempty"`
	SourceMetadata *version.SourceMetadata         `protobuf:"bytes,2,opt,name=source_metadata,json=sourceMetadata,proto3" json:"source_metadata,omitempty"`
	Recipe         string                          `protobuf:"bytes,3,opt,name=recipe,proto3" json:"recipe,omitempty"`
	Parameters     []*common_config.ParameterValue `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *ApplyRecipeParametersReq) Reset() {
	*x = ApplyRecipeParametersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_recipe_manager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyRecipeParametersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyRecipeParametersReq) ProtoMessage() {}

func (x *ApplyRecipeParametersReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_recipe_manager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyRecipeParametersReq.ProtoReflect.Descriptor instead.
func (*ApplyRecipeParametersReq) Descriptor() ([]byte, []int) {
	return file_prodvana_recipe_manager_proto_rawDescGZIP(), []int{9}
}

func (x *ApplyRecipeParametersReq) GetSource() version.Source {
	if x != nil {
		return x.Source
	}
	return version.Source(0)
}

func (x *ApplyRecipeParametersReq) GetSourceMetadata() *version.SourceMetadata {
	if x != nil {
		return x.SourceMetadata
	}
	return nil
}

func (x *ApplyRecipeParametersReq) GetRecipe() string {
	if x != nil {
		return x.Recipe
	}
	return ""
}

func (x *ApplyRecipeParametersReq) GetParameters() []*common_config.ParameterValue {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type ApplyRecipeParametersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Versions []*ApplyRecipeParametersResp_ServiceVersion `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *ApplyRecipeParametersResp) Reset() {
	*x = ApplyRecipeParametersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_recipe_manager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyRecipeParametersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyRecipeParametersResp) ProtoMessage() {}

func (x *ApplyRecipeParametersResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_recipe_manager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyRecipeParametersResp.ProtoReflect.Descriptor instead.
func (*ApplyRecipeParametersResp) Descriptor() ([]byte, []int) {
	return file_prodvana_recipe_manager_proto_rawDescGZIP(), []int{10}
}

func (x *ApplyRecipeParametersResp) GetVersions() []*ApplyRecipeParametersResp_ServiceVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

type Recipe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta   *object.ObjectMeta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Config *RecipeConfig      `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *Recipe) Reset() {
	*x = Recipe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_recipe_manager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipe) ProtoMessage() {}

func (x *Recipe) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_recipe_manager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipe.ProtoReflect.Descriptor instead.
func (*Recipe) Descriptor() ([]byte, []int) {
	return file_prodvana_recipe_manager_proto_rawDescGZIP(), []int{11}
}

func (x *Recipe) GetMeta() *object.ObjectMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Recipe) GetConfig() *RecipeConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type ListRecipesReq_ByService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Application string `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
	Service     string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *ListRecipesReq_ByService) Reset() {
	*x = ListRecipesReq_ByService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_recipe_manager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRecipesReq_ByService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecipesReq_ByService) ProtoMessage() {}

func (x *ListRecipesReq_ByService) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_recipe_manager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecipesReq_ByService.ProtoReflect.Descriptor instead.
func (*ListRecipesReq_ByService) Descriptor() ([]byte, []int) {
	return file_prodvana_recipe_manager_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ListRecipesReq_ByService) GetApplication() string {
	if x != nil {
		return x.Application
	}
	return ""
}

func (x *ListRecipesReq_ByService) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type ApplyRecipeParametersResp_ServiceVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service        string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	ServiceId      string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	ServiceVersion string `protobuf:"bytes,3,opt,name=service_version,json=serviceVersion,proto3" json:"service_version,omitempty"`
	Application    string `protobuf:"bytes,4,opt,name=application,proto3" json:"application,omitempty"`
	ApplicationId  string `protobuf:"bytes,5,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
}

func (x *ApplyRecipeParametersResp_ServiceVersion) Reset() {
	*x = ApplyRecipeParametersResp_ServiceVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_recipe_manager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyRecipeParametersResp_ServiceVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyRecipeParametersResp_ServiceVersion) ProtoMessage() {}

func (x *ApplyRecipeParametersResp_ServiceVersion) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_recipe_manager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyRecipeParametersResp_ServiceVersion.ProtoReflect.Descriptor instead.
func (*ApplyRecipeParametersResp_ServiceVersion) Descriptor() ([]byte, []int) {
	return file_prodvana_recipe_manager_proto_rawDescGZIP(), []int{10, 0}
}

func (x *ApplyRecipeParametersResp_ServiceVersion) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ApplyRecipeParametersResp_ServiceVersion) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ApplyRecipeParametersResp_ServiceVersion) GetServiceVersion() string {
	if x != nil {
		return x.ServiceVersion
	}
	return ""
}

func (x *ApplyRecipeParametersResp_ServiceVersion) GetApplication() string {
	if x != nil {
		return x.Application
	}
	return ""
}

func (x *ApplyRecipeParametersResp_ServiceVersion) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

var File_prodvana_recipe_manager_proto protoreflect.FileDescriptor

var file_prodvana_recipe_manager_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e,
	0x61, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd5, 0x01, 0x0a, 0x12, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x30, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x49, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x42, 0x0a,
	0x0d, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x4c, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x65, 0x0a, 0x1b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46,
	0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xf3, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x52, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x42,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x47, 0x0a, 0x09, 0x42, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x6c, 0x0a, 0x0f,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x31, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x07, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2f, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x06, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x22, 0x40, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x06,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x06, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x22, 0x4f, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb9,
	0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x46, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70,
	0x69, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x8f, 0x02, 0x0a, 0x18, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x12, 0x55, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x76, 0x61, 0x6e, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x92, 0x01, 0x07, 0x22, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0xb0, 0x02, 0x0a,
	0x19, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x08, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0xbb, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x70, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x32, 0xa7, 0x06, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x12, 0x7e, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e,
	0x61, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x12, 0x97, 0x01, 0x0a, 0x17, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12,
	0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x65, 0x0a,
	0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x73, 0x12, 0x6a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x73, 0x2f, 0x7b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x3d, 0x2a, 0x7d,
	0x12, 0x83, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x73, 0x2f, 0x7b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x3d, 0x2a, 0x7d, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0xa2, 0x01, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a,
	0x01, 0x2a, 0x22, 0x27, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x2f,
	0x7b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x3d, 0x2a, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x79,
	0x2d, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42, 0x4b, 0x5a, 0x49, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2d, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2d, 0x73,
	0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e,
	0x61, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prodvana_recipe_manager_proto_rawDescOnce sync.Once
	file_prodvana_recipe_manager_proto_rawDescData = file_prodvana_recipe_manager_proto_rawDesc
)

func file_prodvana_recipe_manager_proto_rawDescGZIP() []byte {
	file_prodvana_recipe_manager_proto_rawDescOnce.Do(func() {
		file_prodvana_recipe_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_prodvana_recipe_manager_proto_rawDescData)
	})
	return file_prodvana_recipe_manager_proto_rawDescData
}

var file_prodvana_recipe_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_prodvana_recipe_manager_proto_goTypes = []interface{}{
	(*ConfigureRecipeReq)(nil),                       // 0: prodvana.recipe.ConfigureRecipeReq
	(*ConfigureRecipeResp)(nil),                      // 1: prodvana.recipe.ConfigureRecipeResp
	(*ValidateConfigureRecipeResp)(nil),              // 2: prodvana.recipe.ValidateConfigureRecipeResp
	(*ListRecipesReq)(nil),                           // 3: prodvana.recipe.ListRecipesReq
	(*ListRecipesResp)(nil),                          // 4: prodvana.recipe.ListRecipesResp
	(*GetRecipeReq)(nil),                             // 5: prodvana.recipe.GetRecipeReq
	(*GetRecipeResp)(nil),                            // 6: prodvana.recipe.GetRecipeResp
	(*GetRecipeConfigReq)(nil),                       // 7: prodvana.recipe.GetRecipeConfigReq
	(*GetRecipeConfigResp)(nil),                      // 8: prodvana.recipe.GetRecipeConfigResp
	(*ApplyRecipeParametersReq)(nil),                 // 9: prodvana.recipe.ApplyRecipeParametersReq
	(*ApplyRecipeParametersResp)(nil),                // 10: prodvana.recipe.ApplyRecipeParametersResp
	(*Recipe)(nil),                                   // 11: prodvana.recipe.Recipe
	(*ListRecipesReq_ByService)(nil),                 // 12: prodvana.recipe.ListRecipesReq.ByService
	(*ApplyRecipeParametersResp_ServiceVersion)(nil), // 13: prodvana.recipe.ApplyRecipeParametersResp.ServiceVersion
	(version.Source)(0),                              // 14: prodvana.version.Source
	(*version.SourceMetadata)(nil),                   // 15: prodvana.version.SourceMetadata
	(*RecipeConfig)(nil),                             // 16: prodvana.recipe.RecipeConfig
	(*common_config.ParameterValue)(nil),             // 17: prodvana.common_config.ParameterValue
	(*object.ObjectMeta)(nil),                        // 18: prodvana.object.ObjectMeta
}
var file_prodvana_recipe_manager_proto_depIdxs = []int32{
	14, // 0: prodvana.recipe.ConfigureRecipeReq.source:type_name -> prodvana.version.Source
	15, // 1: prodvana.recipe.ConfigureRecipeReq.source_metadata:type_name -> prodvana.version.SourceMetadata
	16, // 2: prodvana.recipe.ConfigureRecipeReq.recipe_config:type_name -> prodvana.recipe.RecipeConfig
	16, // 3: prodvana.recipe.ValidateConfigureRecipeResp.compiled_config:type_name -> prodvana.recipe.RecipeConfig
	12, // 4: prodvana.recipe.ListRecipesReq.service_filter:type_name -> prodvana.recipe.ListRecipesReq.ByService
	11, // 5: prodvana.recipe.ListRecipesResp.recipes:type_name -> prodvana.recipe.Recipe
	11, // 6: prodvana.recipe.GetRecipeResp.recipe:type_name -> prodvana.recipe.Recipe
	16, // 7: prodvana.recipe.GetRecipeConfigResp.input_config:type_name -> prodvana.recipe.RecipeConfig
	16, // 8: prodvana.recipe.GetRecipeConfigResp.compiled_config:type_name -> prodvana.recipe.RecipeConfig
	14, // 9: prodvana.recipe.ApplyRecipeParametersReq.source:type_name -> prodvana.version.Source
	15, // 10: prodvana.recipe.ApplyRecipeParametersReq.source_metadata:type_name -> prodvana.version.SourceMetadata
	17, // 11: prodvana.recipe.ApplyRecipeParametersReq.parameters:type_name -> prodvana.common_config.ParameterValue
	13, // 12: prodvana.recipe.ApplyRecipeParametersResp.versions:type_name -> prodvana.recipe.ApplyRecipeParametersResp.ServiceVersion
	18, // 13: prodvana.recipe.Recipe.meta:type_name -> prodvana.object.ObjectMeta
	16, // 14: prodvana.recipe.Recipe.config:type_name -> prodvana.recipe.RecipeConfig
	0,  // 15: prodvana.recipe.RecipeManager.ConfigureRecipe:input_type -> prodvana.recipe.ConfigureRecipeReq
	0,  // 16: prodvana.recipe.RecipeManager.ValidateConfigureRecipe:input_type -> prodvana.recipe.ConfigureRecipeReq
	3,  // 17: prodvana.recipe.RecipeManager.ListRecipes:input_type -> prodvana.recipe.ListRecipesReq
	5,  // 18: prodvana.recipe.RecipeManager.GetRecipe:input_type -> prodvana.recipe.GetRecipeReq
	7,  // 19: prodvana.recipe.RecipeManager.GetRecipeConfig:input_type -> prodvana.recipe.GetRecipeConfigReq
	9,  // 20: prodvana.recipe.RecipeManager.ApplyRecipeParameters:input_type -> prodvana.recipe.ApplyRecipeParametersReq
	1,  // 21: prodvana.recipe.RecipeManager.ConfigureRecipe:output_type -> prodvana.recipe.ConfigureRecipeResp
	2,  // 22: prodvana.recipe.RecipeManager.ValidateConfigureRecipe:output_type -> prodvana.recipe.ValidateConfigureRecipeResp
	4,  // 23: prodvana.recipe.RecipeManager.ListRecipes:output_type -> prodvana.recipe.ListRecipesResp
	6,  // 24: prodvana.recipe.RecipeManager.GetRecipe:output_type -> prodvana.recipe.GetRecipeResp
	8,  // 25: prodvana.recipe.RecipeManager.GetRecipeConfig:output_type -> prodvana.recipe.GetRecipeConfigResp
	10, // 26: prodvana.recipe.RecipeManager.ApplyRecipeParameters:output_type -> prodvana.recipe.ApplyRecipeParametersResp
	21, // [21:27] is the sub-list for method output_type
	15, // [15:21] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_prodvana_recipe_manager_proto_init() }
func file_prodvana_recipe_manager_proto_init() {
	if File_prodvana_recipe_manager_proto != nil {
		return
	}
	file_prodvana_recipe_recipe_config_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_prodvana_recipe_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureRecipeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_recipe_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureRecipeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_recipe_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateConfigureRecipeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_recipe_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRecipesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_recipe_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRecipesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_recipe_manager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecipeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_recipe_manager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecipeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_recipe_manager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecipeConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_recipe_manager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecipeConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_recipe_manager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyRecipeParametersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_recipe_manager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyRecipeParametersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_recipe_manager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recipe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_recipe_manager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRecipesReq_ByService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_recipe_manager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyRecipeParametersResp_ServiceVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_prodvana_recipe_manager_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ListRecipesReq_ServiceFilter)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prodvana_recipe_manager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_prodvana_recipe_manager_proto_goTypes,
		DependencyIndexes: file_prodvana_recipe_manager_proto_depIdxs,
		MessageInfos:      file_prodvana_recipe_manager_proto_msgTypes,
	}.Build()
	File_prodvana_recipe_manager_proto = out.File
	file_prodvana_recipe_manager_proto_rawDesc = nil
	file_prodvana_recipe_manager_proto_goTypes = nil
	file_prodvana_recipe_manager_proto_depIdxs = nil
}
