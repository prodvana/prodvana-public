// Code generated by protoc-gen-go-vtproto. DO NOT EDIT.
// protoc-gen-go-vtproto version: v0.6.0
// source: prodvana/environment/environment_manager.proto

package environment

import (
	timestamppb1 "github.com/planetscale/vtprotobuf/types/known/timestamppb"
	proto "google.golang.org/protobuf/proto"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

func (m *GetClusterAgentApiTokenReq) CloneVT() *GetClusterAgentApiTokenReq {
	if m == nil {
		return (*GetClusterAgentApiTokenReq)(nil)
	}
	r := new(GetClusterAgentApiTokenReq)
	r.Name = m.Name
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetClusterAgentApiTokenReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetClusterAgentApiTokenResp) CloneVT() *GetClusterAgentApiTokenResp {
	if m == nil {
		return (*GetClusterAgentApiTokenResp)(nil)
	}
	r := new(GetClusterAgentApiTokenResp)
	r.ApiToken = m.ApiToken
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetClusterAgentApiTokenResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *LinkClusterReq) CloneVT() *LinkClusterReq {
	if m == nil {
		return (*LinkClusterReq)(nil)
	}
	r := new(LinkClusterReq)
	r.Name = m.Name
	r.Auth = m.Auth.CloneVT()
	r.Type = m.Type
	r.Config = m.Config.CloneVT()
	r.Source = m.Source
	r.SourceMetadata = m.SourceMetadata.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *LinkClusterReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *LinkClusterResp) CloneVT() *LinkClusterResp {
	if m == nil {
		return (*LinkClusterResp)(nil)
	}
	r := new(LinkClusterResp)
	r.Success = m.Success
	r.Msg = m.Msg
	r.ClusterId = m.ClusterId
	r.K8SAgentUrl = m.K8SAgentUrl
	r.K8SAgentImage = m.K8SAgentImage
	r.K8SAgentApiToken = m.K8SAgentApiToken
	if rhs := m.K8SAgentArgs; rhs != nil {
		tmpContainer := make([]string, len(rhs))
		copy(tmpContainer, rhs)
		r.K8SAgentArgs = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *LinkClusterResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *RemoveClusterReq) CloneVT() *RemoveClusterReq {
	if m == nil {
		return (*RemoveClusterReq)(nil)
	}
	r := new(RemoveClusterReq)
	r.Name = m.Name
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *RemoveClusterReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *RemoveClusterResp) CloneVT() *RemoveClusterResp {
	if m == nil {
		return (*RemoveClusterResp)(nil)
	}
	r := new(RemoveClusterResp)
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *RemoveClusterResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetClusterAuthReq) CloneVT() *GetClusterAuthReq {
	if m == nil {
		return (*GetClusterAuthReq)(nil)
	}
	r := new(GetClusterAuthReq)
	r.ClusterId = m.ClusterId
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetClusterAuthReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetClusterAuthResp) CloneVT() *GetClusterAuthResp {
	if m == nil {
		return (*GetClusterAuthResp)(nil)
	}
	r := new(GetClusterAuthResp)
	r.Auth = m.Auth.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetClusterAuthResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ListClustersReq) CloneVT() *ListClustersReq {
	if m == nil {
		return (*ListClustersReq)(nil)
	}
	r := new(ListClustersReq)
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ListClustersReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ListClustersResp_ClusterInfo_EcsInfo) CloneVT() *ListClustersResp_ClusterInfo_EcsInfo {
	if m == nil {
		return (*ListClustersResp_ClusterInfo_EcsInfo)(nil)
	}
	r := new(ListClustersResp_ClusterInfo_EcsInfo)
	r.Region = m.Region
	r.ClusterArn = m.ClusterArn
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ListClustersResp_ClusterInfo_EcsInfo) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ListClustersResp_ClusterInfo) CloneVT() *ListClustersResp_ClusterInfo {
	if m == nil {
		return (*ListClustersResp_ClusterInfo)(nil)
	}
	r := new(ListClustersResp_ClusterInfo)
	r.Name = m.Name
	r.Id = m.Id
	r.Endpoint = m.Endpoint
	r.ServiceAccount = m.ServiceAccount
	r.Type = m.Type
	r.LastHeartbeatTimestamp = (*timestamppb.Timestamp)((*timestamppb1.Timestamp)(m.LastHeartbeatTimestamp).CloneVT())
	r.Config = m.Config.CloneVT()
	r.Auth = m.Auth.CloneVT()
	if m.Info != nil {
		r.Info = m.Info.(interface {
			CloneVT() isListClustersResp_ClusterInfo_Info
		}).CloneVT()
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ListClustersResp_ClusterInfo) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ListClustersResp_ClusterInfo_Ecs) CloneVT() isListClustersResp_ClusterInfo_Info {
	if m == nil {
		return (*ListClustersResp_ClusterInfo_Ecs)(nil)
	}
	r := new(ListClustersResp_ClusterInfo_Ecs)
	r.Ecs = m.Ecs.CloneVT()
	return r
}

func (m *ListClustersResp) CloneVT() *ListClustersResp {
	if m == nil {
		return (*ListClustersResp)(nil)
	}
	r := new(ListClustersResp)
	if rhs := m.Clusters; rhs != nil {
		tmpContainer := make([]*ListClustersResp_ClusterInfo, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.Clusters = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ListClustersResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetClusterReq) CloneVT() *GetClusterReq {
	if m == nil {
		return (*GetClusterReq)(nil)
	}
	r := new(GetClusterReq)
	r.Runtime = m.Runtime
	r.IncludeAuth = m.IncludeAuth
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetClusterReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetClusterResp) CloneVT() *GetClusterResp {
	if m == nil {
		return (*GetClusterResp)(nil)
	}
	r := new(GetClusterResp)
	r.Cluster = m.Cluster.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetClusterResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ConfigureClusterReq) CloneVT() *ConfigureClusterReq {
	if m == nil {
		return (*ConfigureClusterReq)(nil)
	}
	r := new(ConfigureClusterReq)
	r.RuntimeName = m.RuntimeName
	r.Config = m.Config.CloneVT()
	r.Source = m.Source
	r.SourceMetadata = m.SourceMetadata.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ConfigureClusterReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ConfigureClusterResp) CloneVT() *ConfigureClusterResp {
	if m == nil {
		return (*ConfigureClusterResp)(nil)
	}
	r := new(ConfigureClusterResp)
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ConfigureClusterResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ValidateConfigureClusterResp) CloneVT() *ValidateConfigureClusterResp {
	if m == nil {
		return (*ValidateConfigureClusterResp)(nil)
	}
	r := new(ValidateConfigureClusterResp)
	r.InputConfig = m.InputConfig.CloneVT()
	r.CompiledConfig = m.CompiledConfig.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ValidateConfigureClusterResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetClusterConfigReq) CloneVT() *GetClusterConfigReq {
	if m == nil {
		return (*GetClusterConfigReq)(nil)
	}
	r := new(GetClusterConfigReq)
	r.RuntimeName = m.RuntimeName
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetClusterConfigReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetClusterConfigResp) CloneVT() *GetClusterConfigResp {
	if m == nil {
		return (*GetClusterConfigResp)(nil)
	}
	r := new(GetClusterConfigResp)
	r.Config = m.Config.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetClusterConfigResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *DetectClusterConfigReq) CloneVT() *DetectClusterConfigReq {
	if m == nil {
		return (*DetectClusterConfigReq)(nil)
	}
	r := new(DetectClusterConfigReq)
	r.RuntimeName = m.RuntimeName
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *DetectClusterConfigReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *DetectClusterConfigResp) CloneVT() *DetectClusterConfigResp {
	if m == nil {
		return (*DetectClusterConfigResp)(nil)
	}
	r := new(DetectClusterConfigResp)
	r.Config = m.Config.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *DetectClusterConfigResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetClusterStatusReq) CloneVT() *GetClusterStatusReq {
	if m == nil {
		return (*GetClusterStatusReq)(nil)
	}
	r := new(GetClusterStatusReq)
	r.ClusterId = m.ClusterId
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetClusterStatusReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetClusterStatusResp) CloneVT() *GetClusterStatusResp {
	if m == nil {
		return (*GetClusterStatusResp)(nil)
	}
	r := new(GetClusterStatusResp)
	r.LastHeartbeatTimestamp = (*timestamppb.Timestamp)((*timestamppb1.Timestamp)(m.LastHeartbeatTimestamp).CloneVT())
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetClusterStatusResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *PauseClusterReq) CloneVT() *PauseClusterReq {
	if m == nil {
		return (*PauseClusterReq)(nil)
	}
	r := new(PauseClusterReq)
	r.Runtime = m.Runtime
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *PauseClusterReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *PauseClusterResp) CloneVT() *PauseClusterResp {
	if m == nil {
		return (*PauseClusterResp)(nil)
	}
	r := new(PauseClusterResp)
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *PauseClusterResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ResumeClusterReq) CloneVT() *ResumeClusterReq {
	if m == nil {
		return (*ResumeClusterReq)(nil)
	}
	r := new(ResumeClusterReq)
	r.Runtime = m.Runtime
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ResumeClusterReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ResumeClusterResp) CloneVT() *ResumeClusterResp {
	if m == nil {
		return (*ResumeClusterResp)(nil)
	}
	r := new(ResumeClusterResp)
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ResumeClusterResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (this *GetClusterAgentApiTokenReq) EqualVT(that *GetClusterAgentApiTokenReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Name != that.Name {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetClusterAgentApiTokenReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetClusterAgentApiTokenReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetClusterAgentApiTokenResp) EqualVT(that *GetClusterAgentApiTokenResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.ApiToken != that.ApiToken {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetClusterAgentApiTokenResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetClusterAgentApiTokenResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *LinkClusterReq) EqualVT(that *LinkClusterReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Name != that.Name {
		return false
	}
	if !this.Auth.EqualVT(that.Auth) {
		return false
	}
	if this.Type != that.Type {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if !this.SourceMetadata.EqualVT(that.SourceMetadata) {
		return false
	}
	if !this.Config.EqualVT(that.Config) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *LinkClusterReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*LinkClusterReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *LinkClusterResp) EqualVT(that *LinkClusterResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Success != that.Success {
		return false
	}
	if this.Msg != that.Msg {
		return false
	}
	if this.ClusterId != that.ClusterId {
		return false
	}
	if this.K8SAgentUrl != that.K8SAgentUrl {
		return false
	}
	if this.K8SAgentImage != that.K8SAgentImage {
		return false
	}
	if len(this.K8SAgentArgs) != len(that.K8SAgentArgs) {
		return false
	}
	for i, vx := range this.K8SAgentArgs {
		vy := that.K8SAgentArgs[i]
		if vx != vy {
			return false
		}
	}
	if this.K8SAgentApiToken != that.K8SAgentApiToken {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *LinkClusterResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*LinkClusterResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *RemoveClusterReq) EqualVT(that *RemoveClusterReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Name != that.Name {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *RemoveClusterReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*RemoveClusterReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *RemoveClusterResp) EqualVT(that *RemoveClusterResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *RemoveClusterResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*RemoveClusterResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetClusterAuthReq) EqualVT(that *GetClusterAuthReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.ClusterId != that.ClusterId {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetClusterAuthReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetClusterAuthReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetClusterAuthResp) EqualVT(that *GetClusterAuthResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.Auth.EqualVT(that.Auth) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetClusterAuthResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetClusterAuthResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ListClustersReq) EqualVT(that *ListClustersReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListClustersReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListClustersReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ListClustersResp_ClusterInfo_EcsInfo) EqualVT(that *ListClustersResp_ClusterInfo_EcsInfo) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Region != that.Region {
		return false
	}
	if this.ClusterArn != that.ClusterArn {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListClustersResp_ClusterInfo_EcsInfo) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListClustersResp_ClusterInfo_EcsInfo)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ListClustersResp_ClusterInfo) EqualVT(that *ListClustersResp_ClusterInfo) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Info == nil && that.Info != nil {
		return false
	} else if this.Info != nil {
		if that.Info == nil {
			return false
		}
		if !this.Info.(interface {
			EqualVT(isListClustersResp_ClusterInfo_Info) bool
		}).EqualVT(that.Info) {
			return false
		}
	}
	if this.Name != that.Name {
		return false
	}
	if this.Id != that.Id {
		return false
	}
	if this.Endpoint != that.Endpoint {
		return false
	}
	if this.ServiceAccount != that.ServiceAccount {
		return false
	}
	if this.Type != that.Type {
		return false
	}
	if !(*timestamppb1.Timestamp)(this.LastHeartbeatTimestamp).EqualVT((*timestamppb1.Timestamp)(that.LastHeartbeatTimestamp)) {
		return false
	}
	if !this.Config.EqualVT(that.Config) {
		return false
	}
	if !this.Auth.EqualVT(that.Auth) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListClustersResp_ClusterInfo) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListClustersResp_ClusterInfo)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ListClustersResp_ClusterInfo_Ecs) EqualVT(thatIface isListClustersResp_ClusterInfo_Info) bool {
	that, ok := thatIface.(*ListClustersResp_ClusterInfo_Ecs)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.Ecs, that.Ecs; p != q {
		if p == nil {
			p = &ListClustersResp_ClusterInfo_EcsInfo{}
		}
		if q == nil {
			q = &ListClustersResp_ClusterInfo_EcsInfo{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *ListClustersResp) EqualVT(that *ListClustersResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.Clusters) != len(that.Clusters) {
		return false
	}
	for i, vx := range this.Clusters {
		vy := that.Clusters[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &ListClustersResp_ClusterInfo{}
			}
			if q == nil {
				q = &ListClustersResp_ClusterInfo{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListClustersResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListClustersResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetClusterReq) EqualVT(that *GetClusterReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Runtime != that.Runtime {
		return false
	}
	if this.IncludeAuth != that.IncludeAuth {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetClusterReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetClusterReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetClusterResp) EqualVT(that *GetClusterResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.Cluster.EqualVT(that.Cluster) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetClusterResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetClusterResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ConfigureClusterReq) EqualVT(that *ConfigureClusterReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.RuntimeName != that.RuntimeName {
		return false
	}
	if !this.Config.EqualVT(that.Config) {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if !this.SourceMetadata.EqualVT(that.SourceMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ConfigureClusterReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ConfigureClusterReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ConfigureClusterResp) EqualVT(that *ConfigureClusterResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ConfigureClusterResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ConfigureClusterResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ValidateConfigureClusterResp) EqualVT(that *ValidateConfigureClusterResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.InputConfig.EqualVT(that.InputConfig) {
		return false
	}
	if !this.CompiledConfig.EqualVT(that.CompiledConfig) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ValidateConfigureClusterResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ValidateConfigureClusterResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetClusterConfigReq) EqualVT(that *GetClusterConfigReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.RuntimeName != that.RuntimeName {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetClusterConfigReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetClusterConfigReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetClusterConfigResp) EqualVT(that *GetClusterConfigResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.Config.EqualVT(that.Config) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetClusterConfigResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetClusterConfigResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *DetectClusterConfigReq) EqualVT(that *DetectClusterConfigReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.RuntimeName != that.RuntimeName {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *DetectClusterConfigReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*DetectClusterConfigReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *DetectClusterConfigResp) EqualVT(that *DetectClusterConfigResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.Config.EqualVT(that.Config) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *DetectClusterConfigResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*DetectClusterConfigResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetClusterStatusReq) EqualVT(that *GetClusterStatusReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.ClusterId != that.ClusterId {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetClusterStatusReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetClusterStatusReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetClusterStatusResp) EqualVT(that *GetClusterStatusResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !(*timestamppb1.Timestamp)(this.LastHeartbeatTimestamp).EqualVT((*timestamppb1.Timestamp)(that.LastHeartbeatTimestamp)) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetClusterStatusResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetClusterStatusResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *PauseClusterReq) EqualVT(that *PauseClusterReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Runtime != that.Runtime {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *PauseClusterReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*PauseClusterReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *PauseClusterResp) EqualVT(that *PauseClusterResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *PauseClusterResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*PauseClusterResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ResumeClusterReq) EqualVT(that *ResumeClusterReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Runtime != that.Runtime {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ResumeClusterReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ResumeClusterReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ResumeClusterResp) EqualVT(that *ResumeClusterResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ResumeClusterResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ResumeClusterResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
