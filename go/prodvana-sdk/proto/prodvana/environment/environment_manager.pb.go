// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.21.10
// source: prodvana/environment/environment_manager.proto

package environment

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	config_writeback "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/config_writeback"
	version "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/version"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetClusterAgentApiTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetClusterAgentApiTokenReq) Reset() {
	*x = GetClusterAgentApiTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterAgentApiTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterAgentApiTokenReq) ProtoMessage() {}

func (x *GetClusterAgentApiTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterAgentApiTokenReq.ProtoReflect.Descriptor instead.
func (*GetClusterAgentApiTokenReq) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{0}
}

func (x *GetClusterAgentApiTokenReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetClusterAgentApiTokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiToken string `protobuf:"bytes,1,opt,name=api_token,json=apiToken,proto3" json:"api_token,omitempty"`
}

func (x *GetClusterAgentApiTokenResp) Reset() {
	*x = GetClusterAgentApiTokenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterAgentApiTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterAgentApiTokenResp) ProtoMessage() {}

func (x *GetClusterAgentApiTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterAgentApiTokenResp.ProtoReflect.Descriptor instead.
func (*GetClusterAgentApiTokenResp) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{1}
}

func (x *GetClusterAgentApiTokenResp) GetApiToken() string {
	if x != nil {
		return x.ApiToken
	}
	return ""
}

type LinkClusterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Auth *ClusterAuth `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	// HACK(naphat) this should never be set by users. delete once pulumi runner no longer relies on this endpoint.
	ProdvanaManaged bool                    `protobuf:"varint,3,opt,name=prodvana_managed,json=prodvanaManaged,proto3" json:"prodvana_managed,omitempty"`
	DisableIstio    bool                    `protobuf:"varint,4,opt,name=disable_istio,json=disableIstio,proto3" json:"disable_istio,omitempty"`
	DisableFlagger  bool                    `protobuf:"varint,5,opt,name=disable_flagger,json=disableFlagger,proto3" json:"disable_flagger,omitempty"`
	Type            ClusterType             `protobuf:"varint,6,opt,name=type,proto3,enum=prodvana.environment.ClusterType" json:"type,omitempty"`
	Source          version.Source          `protobuf:"varint,7,opt,name=source,proto3,enum=prodvana.version.Source" json:"source,omitempty"`
	SourceMetadata  *version.SourceMetadata `protobuf:"bytes,8,opt,name=source_metadata,json=sourceMetadata,proto3" json:"source_metadata,omitempty"`
}

func (x *LinkClusterReq) Reset() {
	*x = LinkClusterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkClusterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkClusterReq) ProtoMessage() {}

func (x *LinkClusterReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkClusterReq.ProtoReflect.Descriptor instead.
func (*LinkClusterReq) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{2}
}

func (x *LinkClusterReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LinkClusterReq) GetAuth() *ClusterAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *LinkClusterReq) GetProdvanaManaged() bool {
	if x != nil {
		return x.ProdvanaManaged
	}
	return false
}

func (x *LinkClusterReq) GetDisableIstio() bool {
	if x != nil {
		return x.DisableIstio
	}
	return false
}

func (x *LinkClusterReq) GetDisableFlagger() bool {
	if x != nil {
		return x.DisableFlagger
	}
	return false
}

func (x *LinkClusterReq) GetType() ClusterType {
	if x != nil {
		return x.Type
	}
	return ClusterType_UNKNOWN
}

func (x *LinkClusterReq) GetSource() version.Source {
	if x != nil {
		return x.Source
	}
	return version.Source(0)
}

func (x *LinkClusterReq) GetSourceMetadata() *version.SourceMetadata {
	if x != nil {
		return x.SourceMetadata
	}
	return nil
}

type LinkClusterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// LinkCluster will attempt to talk to the cluster to validate the
	// credentials. If it fails, want to communicate back what the failure was.
	Success   bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg       string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	ClusterId string `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Magic URL to install agent
	K8SAgentUrl string `protobuf:"bytes,4,opt,name=k8s_agent_url,json=k8sAgentUrl,proto3" json:"k8s_agent_url,omitempty"`
	// agent details broken out for externally constructing the agent configuration
	K8SAgentImage    string   `protobuf:"bytes,5,opt,name=k8s_agent_image,json=k8sAgentImage,proto3" json:"k8s_agent_image,omitempty"`
	K8SAgentArgs     []string `protobuf:"bytes,6,rep,name=k8s_agent_args,json=k8sAgentArgs,proto3" json:"k8s_agent_args,omitempty"`
	K8SAgentApiToken string   `protobuf:"bytes,7,opt,name=k8s_agent_api_token,json=k8sAgentApiToken,proto3" json:"k8s_agent_api_token,omitempty"`
}

func (x *LinkClusterResp) Reset() {
	*x = LinkClusterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkClusterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkClusterResp) ProtoMessage() {}

func (x *LinkClusterResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkClusterResp.ProtoReflect.Descriptor instead.
func (*LinkClusterResp) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{3}
}

func (x *LinkClusterResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LinkClusterResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LinkClusterResp) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *LinkClusterResp) GetK8SAgentUrl() string {
	if x != nil {
		return x.K8SAgentUrl
	}
	return ""
}

func (x *LinkClusterResp) GetK8SAgentImage() string {
	if x != nil {
		return x.K8SAgentImage
	}
	return ""
}

func (x *LinkClusterResp) GetK8SAgentArgs() []string {
	if x != nil {
		return x.K8SAgentArgs
	}
	return nil
}

func (x *LinkClusterResp) GetK8SAgentApiToken() string {
	if x != nil {
		return x.K8SAgentApiToken
	}
	return ""
}

type RemoveClusterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // TODO(mike): add an option to remove by cluster_id as well?
}

func (x *RemoveClusterReq) Reset() {
	*x = RemoveClusterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveClusterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveClusterReq) ProtoMessage() {}

func (x *RemoveClusterReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveClusterReq.ProtoReflect.Descriptor instead.
func (*RemoveClusterReq) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{4}
}

func (x *RemoveClusterReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RemoveClusterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveClusterResp) Reset() {
	*x = RemoveClusterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveClusterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveClusterResp) ProtoMessage() {}

func (x *RemoveClusterResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveClusterResp.ProtoReflect.Descriptor instead.
func (*RemoveClusterResp) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{5}
}

type GetClusterAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
}

func (x *GetClusterAuthReq) Reset() {
	*x = GetClusterAuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterAuthReq) ProtoMessage() {}

func (x *GetClusterAuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterAuthReq.ProtoReflect.Descriptor instead.
func (*GetClusterAuthReq) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{6}
}

func (x *GetClusterAuthReq) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type GetClusterAuthResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *ClusterAuth `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *GetClusterAuthResp) Reset() {
	*x = GetClusterAuthResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterAuthResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterAuthResp) ProtoMessage() {}

func (x *GetClusterAuthResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterAuthResp.ProtoReflect.Descriptor instead.
func (*GetClusterAuthResp) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{7}
}

func (x *GetClusterAuthResp) GetAuth() *ClusterAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

type ListClustersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListClustersReq) Reset() {
	*x = ListClustersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClustersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersReq) ProtoMessage() {}

func (x *ListClustersReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersReq.ProtoReflect.Descriptor instead.
func (*ListClustersReq) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{8}
}

type ListClustersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clusters []*ListClustersResp_ClusterInfo `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
}

func (x *ListClustersResp) Reset() {
	*x = ListClustersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClustersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersResp) ProtoMessage() {}

func (x *ListClustersResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersResp.ProtoReflect.Descriptor instead.
func (*ListClustersResp) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{9}
}

func (x *ListClustersResp) GetClusters() []*ListClustersResp_ClusterInfo {
	if x != nil {
		return x.Clusters
	}
	return nil
}

type GetClusterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Runtime string `protobuf:"bytes,1,opt,name=runtime,proto3" json:"runtime,omitempty"` // name or id
}

func (x *GetClusterReq) Reset() {
	*x = GetClusterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterReq) ProtoMessage() {}

func (x *GetClusterReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterReq.ProtoReflect.Descriptor instead.
func (*GetClusterReq) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{10}
}

func (x *GetClusterReq) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

type GetClusterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster *ListClustersResp_ClusterInfo `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *GetClusterResp) Reset() {
	*x = GetClusterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterResp) ProtoMessage() {}

func (x *GetClusterResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterResp.ProtoReflect.Descriptor instead.
func (*GetClusterResp) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{11}
}

func (x *GetClusterResp) GetCluster() *ListClustersResp_ClusterInfo {
	if x != nil {
		return x.Cluster
	}
	return nil
}

type ConfigureClusterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeName    string                  `protobuf:"bytes,1,opt,name=runtime_name,json=runtimeName,proto3" json:"runtime_name,omitempty"`
	Config         *ClusterConfig          `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	Source         version.Source          `protobuf:"varint,3,opt,name=source,proto3,enum=prodvana.version.Source" json:"source,omitempty"`
	SourceMetadata *version.SourceMetadata `protobuf:"bytes,4,opt,name=source_metadata,json=sourceMetadata,proto3" json:"source_metadata,omitempty"`
}

func (x *ConfigureClusterReq) Reset() {
	*x = ConfigureClusterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureClusterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureClusterReq) ProtoMessage() {}

func (x *ConfigureClusterReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureClusterReq.ProtoReflect.Descriptor instead.
func (*ConfigureClusterReq) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{12}
}

func (x *ConfigureClusterReq) GetRuntimeName() string {
	if x != nil {
		return x.RuntimeName
	}
	return ""
}

func (x *ConfigureClusterReq) GetConfig() *ClusterConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ConfigureClusterReq) GetSource() version.Source {
	if x != nil {
		return x.Source
	}
	return version.Source(0)
}

func (x *ConfigureClusterReq) GetSourceMetadata() *version.SourceMetadata {
	if x != nil {
		return x.SourceMetadata
	}
	return nil
}

type ConfigureClusterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigureClusterResp) Reset() {
	*x = ConfigureClusterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureClusterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureClusterResp) ProtoMessage() {}

func (x *ConfigureClusterResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureClusterResp.ProtoReflect.Descriptor instead.
func (*ConfigureClusterResp) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{13}
}

type ValidateConfigureClusterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateConfigureClusterResp) Reset() {
	*x = ValidateConfigureClusterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateConfigureClusterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateConfigureClusterResp) ProtoMessage() {}

func (x *ValidateConfigureClusterResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateConfigureClusterResp.ProtoReflect.Descriptor instead.
func (*ValidateConfigureClusterResp) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{14}
}

type GetClusterConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeName string `protobuf:"bytes,1,opt,name=runtime_name,json=runtimeName,proto3" json:"runtime_name,omitempty"`
}

func (x *GetClusterConfigReq) Reset() {
	*x = GetClusterConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterConfigReq) ProtoMessage() {}

func (x *GetClusterConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterConfigReq.ProtoReflect.Descriptor instead.
func (*GetClusterConfigReq) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{15}
}

func (x *GetClusterConfigReq) GetRuntimeName() string {
	if x != nil {
		return x.RuntimeName
	}
	return ""
}

type GetClusterConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *ClusterConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetClusterConfigResp) Reset() {
	*x = GetClusterConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterConfigResp) ProtoMessage() {}

func (x *GetClusterConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterConfigResp.ProtoReflect.Descriptor instead.
func (*GetClusterConfigResp) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{16}
}

func (x *GetClusterConfigResp) GetConfig() *ClusterConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type DetectClusterConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeName string `protobuf:"bytes,1,opt,name=runtime_name,json=runtimeName,proto3" json:"runtime_name,omitempty"`
}

func (x *DetectClusterConfigReq) Reset() {
	*x = DetectClusterConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectClusterConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectClusterConfigReq) ProtoMessage() {}

func (x *DetectClusterConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectClusterConfigReq.ProtoReflect.Descriptor instead.
func (*DetectClusterConfigReq) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{17}
}

func (x *DetectClusterConfigReq) GetRuntimeName() string {
	if x != nil {
		return x.RuntimeName
	}
	return ""
}

type DetectClusterConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *ClusterConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *DetectClusterConfigResp) Reset() {
	*x = DetectClusterConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectClusterConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectClusterConfigResp) ProtoMessage() {}

func (x *DetectClusterConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectClusterConfigResp.ProtoReflect.Descriptor instead.
func (*DetectClusterConfigResp) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{18}
}

func (x *DetectClusterConfigResp) GetConfig() *ClusterConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type GetClusterStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
}

func (x *GetClusterStatusReq) Reset() {
	*x = GetClusterStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterStatusReq) ProtoMessage() {}

func (x *GetClusterStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterStatusReq.ProtoReflect.Descriptor instead.
func (*GetClusterStatusReq) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{19}
}

func (x *GetClusterStatusReq) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type GetClusterStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastHeartbeatTimestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=last_heartbeat_timestamp,json=lastHeartbeatTimestamp,proto3" json:"last_heartbeat_timestamp,omitempty"`
}

func (x *GetClusterStatusResp) Reset() {
	*x = GetClusterStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterStatusResp) ProtoMessage() {}

func (x *GetClusterStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterStatusResp.ProtoReflect.Descriptor instead.
func (*GetClusterStatusResp) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{20}
}

func (x *GetClusterStatusResp) GetLastHeartbeatTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LastHeartbeatTimestamp
	}
	return nil
}

type ListClustersResp_ClusterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string                                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id              string                                `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Origin          Cluster_Origin                        `protobuf:"varint,3,opt,name=origin,proto3,enum=prodvana.environment.Cluster_Origin" json:"origin,omitempty"`
	Endpoint        string                                `protobuf:"bytes,4,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	ServiceAccount  string                                `protobuf:"bytes,5,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	WritebackConfig *config_writeback.ConfigWritebackPath `protobuf:"bytes,6,opt,name=writeback_config,json=writebackConfig,proto3" json:"writeback_config,omitempty"`
	Type            ClusterType                           `protobuf:"varint,7,opt,name=type,proto3,enum=prodvana.environment.ClusterType" json:"type,omitempty"`
	// Types that are assignable to Info:
	//
	//	*ListClustersResp_ClusterInfo_Ecs
	Info                   isListClustersResp_ClusterInfo_Info `protobuf_oneof:"info"`
	LastHeartbeatTimestamp *timestamppb.Timestamp              `protobuf:"bytes,9,opt,name=last_heartbeat_timestamp,json=lastHeartbeatTimestamp,proto3" json:"last_heartbeat_timestamp,omitempty"`
	Config                 *ClusterConfig                      `protobuf:"bytes,10,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ListClustersResp_ClusterInfo) Reset() {
	*x = ListClustersResp_ClusterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClustersResp_ClusterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersResp_ClusterInfo) ProtoMessage() {}

func (x *ListClustersResp_ClusterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersResp_ClusterInfo.ProtoReflect.Descriptor instead.
func (*ListClustersResp_ClusterInfo) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ListClustersResp_ClusterInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListClustersResp_ClusterInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListClustersResp_ClusterInfo) GetOrigin() Cluster_Origin {
	if x != nil {
		return x.Origin
	}
	return Cluster_UNKNOWN
}

func (x *ListClustersResp_ClusterInfo) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *ListClustersResp_ClusterInfo) GetServiceAccount() string {
	if x != nil {
		return x.ServiceAccount
	}
	return ""
}

func (x *ListClustersResp_ClusterInfo) GetWritebackConfig() *config_writeback.ConfigWritebackPath {
	if x != nil {
		return x.WritebackConfig
	}
	return nil
}

func (x *ListClustersResp_ClusterInfo) GetType() ClusterType {
	if x != nil {
		return x.Type
	}
	return ClusterType_UNKNOWN
}

func (m *ListClustersResp_ClusterInfo) GetInfo() isListClustersResp_ClusterInfo_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (x *ListClustersResp_ClusterInfo) GetEcs() *ListClustersResp_ClusterInfo_EcsInfo {
	if x, ok := x.GetInfo().(*ListClustersResp_ClusterInfo_Ecs); ok {
		return x.Ecs
	}
	return nil
}

func (x *ListClustersResp_ClusterInfo) GetLastHeartbeatTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LastHeartbeatTimestamp
	}
	return nil
}

func (x *ListClustersResp_ClusterInfo) GetConfig() *ClusterConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type isListClustersResp_ClusterInfo_Info interface {
	isListClustersResp_ClusterInfo_Info()
}

type ListClustersResp_ClusterInfo_Ecs struct {
	Ecs *ListClustersResp_ClusterInfo_EcsInfo `protobuf:"bytes,8,opt,name=ecs,proto3,oneof"`
}

func (*ListClustersResp_ClusterInfo_Ecs) isListClustersResp_ClusterInfo_Info() {}

type ListClustersResp_ClusterInfo_EcsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region     string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	ClusterArn string `protobuf:"bytes,2,opt,name=cluster_arn,json=clusterArn,proto3" json:"cluster_arn,omitempty"`
}

func (x *ListClustersResp_ClusterInfo_EcsInfo) Reset() {
	*x = ListClustersResp_ClusterInfo_EcsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_environment_environment_manager_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClustersResp_ClusterInfo_EcsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersResp_ClusterInfo_EcsInfo) ProtoMessage() {}

func (x *ListClustersResp_ClusterInfo_EcsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_environment_environment_manager_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersResp_ClusterInfo_EcsInfo.ProtoReflect.Descriptor instead.
func (*ListClustersResp_ClusterInfo_EcsInfo) Descriptor() ([]byte, []int) {
	return file_prodvana_environment_environment_manager_proto_rawDescGZIP(), []int{9, 0, 0}
}

func (x *ListClustersResp_ClusterInfo_EcsInfo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ListClustersResp_ClusterInfo_EcsInfo) GetClusterArn() string {
	if x != nil {
		return x.ClusterArn
	}
	return ""
}

var File_prodvana_environment_environment_manager_proto protoreflect.FileDescriptor

var file_prodvana_environment_environment_manager_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x14, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x70, 0x72, 0x6f, 0x64,
	0x76, 0x61, 0x6e, 0x61, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x62, 0x61, 0x63, 0x6b, 0x2f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x39, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x3a, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x88, 0x03,
	0x0a, 0x0e, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x73, 0x74, 0x69, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x67, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6c, 0x61,
	0x67, 0x67, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x49, 0x0a,
	0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e,
	0x61, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xfd, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x6e,
	0x6b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6b, 0x38, 0x73, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6b, 0x38, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x6b,
	0x38, 0x73, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x38, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6b, 0x38, 0x73, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x38, 0x73,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x67, 0x73, 0x12, 0x2d, 0x0a, 0x13, 0x6b, 0x38, 0x73,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6b, 0x38, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x26, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x32, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x22, 0xda, 0x05, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e,
	0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x1a, 0xf5,
	0x04, 0x0a, 0x0b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x59, 0x0a, 0x10, 0x77, 0x72, 0x69, 0x74, 0x65, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x57, 0x72, 0x69, 0x74, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x0f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4e, 0x0a, 0x03, 0x65, 0x63, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x63, 0x73, 0x12, 0x54, 0x0a, 0x18, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3b, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x42, 0x0a, 0x07, 0x45, 0x63,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x72, 0x6e, 0x42, 0x06,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x22, 0x5e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x22, 0xf2, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x76, 0x61, 0x6e, 0x61, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1e,
	0x0a, 0x1c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x38,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3b, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x3b, 0x0a,
	0x16, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x17, 0x44, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x34, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x54, 0x0a, 0x18, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x16,
	0x6c, 0x61, 0x73, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x32, 0xc3, 0x0c, 0x0a, 0x12, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0xa3, 0x01,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x2a, 0x7d, 0x2f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x78, 0x0a, 0x0b, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76,
	0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x78, 0x0a,
	0x0c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x25, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x19, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x7d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x3d,
	0x2a, 0x7d, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x80, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76,
	0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x27, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x12, 0x9a,
	0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x2a,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x2f, 0x7b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x3d, 0x2a, 0x7d, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0xaa, 0x01, 0x0a, 0x13,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x1a, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x3a, 0x01, 0x2a, 0x22, 0x2b, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x2a, 0x7d, 0x2f, 0x64, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x8c, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x29, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76,
	0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22,
	0x16, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0xa5, 0x01, 0x0a, 0x18, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x32, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x8a, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x50, 0x5a, 0x4e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76,
	0x61, 0x6e, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2d, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2d,
	0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prodvana_environment_environment_manager_proto_rawDescOnce sync.Once
	file_prodvana_environment_environment_manager_proto_rawDescData = file_prodvana_environment_environment_manager_proto_rawDesc
)

func file_prodvana_environment_environment_manager_proto_rawDescGZIP() []byte {
	file_prodvana_environment_environment_manager_proto_rawDescOnce.Do(func() {
		file_prodvana_environment_environment_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_prodvana_environment_environment_manager_proto_rawDescData)
	})
	return file_prodvana_environment_environment_manager_proto_rawDescData
}

var file_prodvana_environment_environment_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_prodvana_environment_environment_manager_proto_goTypes = []interface{}{
	(*GetClusterAgentApiTokenReq)(nil),           // 0: prodvana.environment.GetClusterAgentApiTokenReq
	(*GetClusterAgentApiTokenResp)(nil),          // 1: prodvana.environment.GetClusterAgentApiTokenResp
	(*LinkClusterReq)(nil),                       // 2: prodvana.environment.LinkClusterReq
	(*LinkClusterResp)(nil),                      // 3: prodvana.environment.LinkClusterResp
	(*RemoveClusterReq)(nil),                     // 4: prodvana.environment.RemoveClusterReq
	(*RemoveClusterResp)(nil),                    // 5: prodvana.environment.RemoveClusterResp
	(*GetClusterAuthReq)(nil),                    // 6: prodvana.environment.GetClusterAuthReq
	(*GetClusterAuthResp)(nil),                   // 7: prodvana.environment.GetClusterAuthResp
	(*ListClustersReq)(nil),                      // 8: prodvana.environment.ListClustersReq
	(*ListClustersResp)(nil),                     // 9: prodvana.environment.ListClustersResp
	(*GetClusterReq)(nil),                        // 10: prodvana.environment.GetClusterReq
	(*GetClusterResp)(nil),                       // 11: prodvana.environment.GetClusterResp
	(*ConfigureClusterReq)(nil),                  // 12: prodvana.environment.ConfigureClusterReq
	(*ConfigureClusterResp)(nil),                 // 13: prodvana.environment.ConfigureClusterResp
	(*ValidateConfigureClusterResp)(nil),         // 14: prodvana.environment.ValidateConfigureClusterResp
	(*GetClusterConfigReq)(nil),                  // 15: prodvana.environment.GetClusterConfigReq
	(*GetClusterConfigResp)(nil),                 // 16: prodvana.environment.GetClusterConfigResp
	(*DetectClusterConfigReq)(nil),               // 17: prodvana.environment.DetectClusterConfigReq
	(*DetectClusterConfigResp)(nil),              // 18: prodvana.environment.DetectClusterConfigResp
	(*GetClusterStatusReq)(nil),                  // 19: prodvana.environment.GetClusterStatusReq
	(*GetClusterStatusResp)(nil),                 // 20: prodvana.environment.GetClusterStatusResp
	(*ListClustersResp_ClusterInfo)(nil),         // 21: prodvana.environment.ListClustersResp.ClusterInfo
	(*ListClustersResp_ClusterInfo_EcsInfo)(nil), // 22: prodvana.environment.ListClustersResp.ClusterInfo.EcsInfo
	(*ClusterAuth)(nil),                          // 23: prodvana.environment.ClusterAuth
	(ClusterType)(0),                             // 24: prodvana.environment.ClusterType
	(version.Source)(0),                          // 25: prodvana.version.Source
	(*version.SourceMetadata)(nil),               // 26: prodvana.version.SourceMetadata
	(*ClusterConfig)(nil),                        // 27: prodvana.environment.ClusterConfig
	(*timestamppb.Timestamp)(nil),                // 28: google.protobuf.Timestamp
	(Cluster_Origin)(0),                          // 29: prodvana.environment.Cluster.Origin
	(*config_writeback.ConfigWritebackPath)(nil), // 30: prodvana.config_writeback.ConfigWritebackPath
}
var file_prodvana_environment_environment_manager_proto_depIdxs = []int32{
	23, // 0: prodvana.environment.LinkClusterReq.auth:type_name -> prodvana.environment.ClusterAuth
	24, // 1: prodvana.environment.LinkClusterReq.type:type_name -> prodvana.environment.ClusterType
	25, // 2: prodvana.environment.LinkClusterReq.source:type_name -> prodvana.version.Source
	26, // 3: prodvana.environment.LinkClusterReq.source_metadata:type_name -> prodvana.version.SourceMetadata
	23, // 4: prodvana.environment.GetClusterAuthResp.auth:type_name -> prodvana.environment.ClusterAuth
	21, // 5: prodvana.environment.ListClustersResp.clusters:type_name -> prodvana.environment.ListClustersResp.ClusterInfo
	21, // 6: prodvana.environment.GetClusterResp.cluster:type_name -> prodvana.environment.ListClustersResp.ClusterInfo
	27, // 7: prodvana.environment.ConfigureClusterReq.config:type_name -> prodvana.environment.ClusterConfig
	25, // 8: prodvana.environment.ConfigureClusterReq.source:type_name -> prodvana.version.Source
	26, // 9: prodvana.environment.ConfigureClusterReq.source_metadata:type_name -> prodvana.version.SourceMetadata
	27, // 10: prodvana.environment.GetClusterConfigResp.config:type_name -> prodvana.environment.ClusterConfig
	27, // 11: prodvana.environment.DetectClusterConfigResp.config:type_name -> prodvana.environment.ClusterConfig
	28, // 12: prodvana.environment.GetClusterStatusResp.last_heartbeat_timestamp:type_name -> google.protobuf.Timestamp
	29, // 13: prodvana.environment.ListClustersResp.ClusterInfo.origin:type_name -> prodvana.environment.Cluster.Origin
	30, // 14: prodvana.environment.ListClustersResp.ClusterInfo.writeback_config:type_name -> prodvana.config_writeback.ConfigWritebackPath
	24, // 15: prodvana.environment.ListClustersResp.ClusterInfo.type:type_name -> prodvana.environment.ClusterType
	22, // 16: prodvana.environment.ListClustersResp.ClusterInfo.ecs:type_name -> prodvana.environment.ListClustersResp.ClusterInfo.EcsInfo
	28, // 17: prodvana.environment.ListClustersResp.ClusterInfo.last_heartbeat_timestamp:type_name -> google.protobuf.Timestamp
	27, // 18: prodvana.environment.ListClustersResp.ClusterInfo.config:type_name -> prodvana.environment.ClusterConfig
	0,  // 19: prodvana.environment.EnvironmentManager.GetClusterAgentApiToken:input_type -> prodvana.environment.GetClusterAgentApiTokenReq
	2,  // 20: prodvana.environment.EnvironmentManager.LinkCluster:input_type -> prodvana.environment.LinkClusterReq
	8,  // 21: prodvana.environment.EnvironmentManager.ListClusters:input_type -> prodvana.environment.ListClustersReq
	10, // 22: prodvana.environment.EnvironmentManager.GetCluster:input_type -> prodvana.environment.GetClusterReq
	4,  // 23: prodvana.environment.EnvironmentManager.RemoveCluster:input_type -> prodvana.environment.RemoveClusterReq
	6,  // 24: prodvana.environment.EnvironmentManager.GetClusterAuth:input_type -> prodvana.environment.GetClusterAuthReq
	15, // 25: prodvana.environment.EnvironmentManager.GetClusterConfig:input_type -> prodvana.environment.GetClusterConfigReq
	17, // 26: prodvana.environment.EnvironmentManager.DetectClusterConfig:input_type -> prodvana.environment.DetectClusterConfigReq
	12, // 27: prodvana.environment.EnvironmentManager.ConfigureCluster:input_type -> prodvana.environment.ConfigureClusterReq
	12, // 28: prodvana.environment.EnvironmentManager.ValidateConfigureCluster:input_type -> prodvana.environment.ConfigureClusterReq
	19, // 29: prodvana.environment.EnvironmentManager.GetClusterStatus:input_type -> prodvana.environment.GetClusterStatusReq
	1,  // 30: prodvana.environment.EnvironmentManager.GetClusterAgentApiToken:output_type -> prodvana.environment.GetClusterAgentApiTokenResp
	3,  // 31: prodvana.environment.EnvironmentManager.LinkCluster:output_type -> prodvana.environment.LinkClusterResp
	9,  // 32: prodvana.environment.EnvironmentManager.ListClusters:output_type -> prodvana.environment.ListClustersResp
	11, // 33: prodvana.environment.EnvironmentManager.GetCluster:output_type -> prodvana.environment.GetClusterResp
	5,  // 34: prodvana.environment.EnvironmentManager.RemoveCluster:output_type -> prodvana.environment.RemoveClusterResp
	7,  // 35: prodvana.environment.EnvironmentManager.GetClusterAuth:output_type -> prodvana.environment.GetClusterAuthResp
	16, // 36: prodvana.environment.EnvironmentManager.GetClusterConfig:output_type -> prodvana.environment.GetClusterConfigResp
	18, // 37: prodvana.environment.EnvironmentManager.DetectClusterConfig:output_type -> prodvana.environment.DetectClusterConfigResp
	13, // 38: prodvana.environment.EnvironmentManager.ConfigureCluster:output_type -> prodvana.environment.ConfigureClusterResp
	14, // 39: prodvana.environment.EnvironmentManager.ValidateConfigureCluster:output_type -> prodvana.environment.ValidateConfigureClusterResp
	20, // 40: prodvana.environment.EnvironmentManager.GetClusterStatus:output_type -> prodvana.environment.GetClusterStatusResp
	30, // [30:41] is the sub-list for method output_type
	19, // [19:30] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_prodvana_environment_environment_manager_proto_init() }
func file_prodvana_environment_environment_manager_proto_init() {
	if File_prodvana_environment_environment_manager_proto != nil {
		return
	}
	file_prodvana_environment_clusters_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_prodvana_environment_environment_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterAgentApiTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterAgentApiTokenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkClusterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkClusterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveClusterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveClusterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterAuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterAuthResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClustersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClustersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureClusterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureClusterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateConfigureClusterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectClusterConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectClusterConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClustersResp_ClusterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_environment_environment_manager_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClustersResp_ClusterInfo_EcsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_prodvana_environment_environment_manager_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*ListClustersResp_ClusterInfo_Ecs)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prodvana_environment_environment_manager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_prodvana_environment_environment_manager_proto_goTypes,
		DependencyIndexes: file_prodvana_environment_environment_manager_proto_depIdxs,
		MessageInfos:      file_prodvana_environment_environment_manager_proto_msgTypes,
	}.Build()
	File_prodvana_environment_environment_manager_proto = out.File
	file_prodvana_environment_environment_manager_proto_rawDesc = nil
	file_prodvana_environment_environment_manager_proto_goTypes = nil
	file_prodvana_environment_environment_manager_proto_depIdxs = nil
}
