// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.21.10
// source: prodvana/service/object.proto

package service

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	common_config "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/common_config"
	config_writeback "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/config_writeback"
	object "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/object"
	pipelines "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/pipelines"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExternalAddr_Type int32

const (
	ExternalAddr_UNKNOWN  ExternalAddr_Type = 0
	ExternalAddr_AUTO     ExternalAddr_Type = 1
	ExternalAddr_EXTERNAL ExternalAddr_Type = 2
	// RAW_* are generated by the underlying infrastructure, independent of Prodvana
	ExternalAddr_RAW_IP       ExternalAddr_Type = 3
	ExternalAddr_RAW_HOSTNAME ExternalAddr_Type = 4
)

// Enum value maps for ExternalAddr_Type.
var (
	ExternalAddr_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "AUTO",
		2: "EXTERNAL",
		3: "RAW_IP",
		4: "RAW_HOSTNAME",
	}
	ExternalAddr_Type_value = map[string]int32{
		"UNKNOWN":      0,
		"AUTO":         1,
		"EXTERNAL":     2,
		"RAW_IP":       3,
		"RAW_HOSTNAME": 4,
	}
)

func (x ExternalAddr_Type) Enum() *ExternalAddr_Type {
	p := new(ExternalAddr_Type)
	*p = x
	return p
}

func (x ExternalAddr_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExternalAddr_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_prodvana_service_object_proto_enumTypes[0].Descriptor()
}

func (ExternalAddr_Type) Type() protoreflect.EnumType {
	return &file_prodvana_service_object_proto_enumTypes[0]
}

func (x ExternalAddr_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExternalAddr_Type.Descriptor instead.
func (ExternalAddr_Type) EnumDescriptor() ([]byte, []int) {
	return file_prodvana_service_object_proto_rawDescGZIP(), []int{0, 0}
}

type ServiceInstancePodContainer_State int32

const (
	ServiceInstancePodContainer_UNKNOWN            ServiceInstancePodContainer_State = 0
	ServiceInstancePodContainer_INITIALIZING       ServiceInstancePodContainer_State = 1
	ServiceInstancePodContainer_RUNNING            ServiceInstancePodContainer_State = 2
	ServiceInstancePodContainer_FAILED             ServiceInstancePodContainer_State = 3
	ServiceInstancePodContainer_CRASH_LOOP_BACKOFF ServiceInstancePodContainer_State = 4
)

// Enum value maps for ServiceInstancePodContainer_State.
var (
	ServiceInstancePodContainer_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "INITIALIZING",
		2: "RUNNING",
		3: "FAILED",
		4: "CRASH_LOOP_BACKOFF",
	}
	ServiceInstancePodContainer_State_value = map[string]int32{
		"UNKNOWN":            0,
		"INITIALIZING":       1,
		"RUNNING":            2,
		"FAILED":             3,
		"CRASH_LOOP_BACKOFF": 4,
	}
)

func (x ServiceInstancePodContainer_State) Enum() *ServiceInstancePodContainer_State {
	p := new(ServiceInstancePodContainer_State)
	*p = x
	return p
}

func (x ServiceInstancePodContainer_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceInstancePodContainer_State) Descriptor() protoreflect.EnumDescriptor {
	return file_prodvana_service_object_proto_enumTypes[1].Descriptor()
}

func (ServiceInstancePodContainer_State) Type() protoreflect.EnumType {
	return &file_prodvana_service_object_proto_enumTypes[1]
}

func (x ServiceInstancePodContainer_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceInstancePodContainer_State.Descriptor instead.
func (ServiceInstancePodContainer_State) EnumDescriptor() ([]byte, []int) {
	return file_prodvana_service_object_proto_rawDescGZIP(), []int{2, 0}
}

type ServiceInstancePod_State int32

const (
	ServiceInstancePod_UNKNOWN                 ServiceInstancePod_State = 0
	ServiceInstancePod_PENDING                 ServiceInstancePod_State = 1
	ServiceInstancePod_INITIALIZING_CONTAINERS ServiceInstancePod_State = 2
	ServiceInstancePod_RUNNING                 ServiceInstancePod_State = 3
	ServiceInstancePod_SUCCEEDED               ServiceInstancePod_State = 4
	ServiceInstancePod_FAILED                  ServiceInstancePod_State = 5
	ServiceInstancePod_TERMINATING             ServiceInstancePod_State = 6
)

// Enum value maps for ServiceInstancePod_State.
var (
	ServiceInstancePod_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "PENDING",
		2: "INITIALIZING_CONTAINERS",
		3: "RUNNING",
		4: "SUCCEEDED",
		5: "FAILED",
		6: "TERMINATING",
	}
	ServiceInstancePod_State_value = map[string]int32{
		"UNKNOWN":                 0,
		"PENDING":                 1,
		"INITIALIZING_CONTAINERS": 2,
		"RUNNING":                 3,
		"SUCCEEDED":               4,
		"FAILED":                  5,
		"TERMINATING":             6,
	}
)

func (x ServiceInstancePod_State) Enum() *ServiceInstancePod_State {
	p := new(ServiceInstancePod_State)
	*p = x
	return p
}

func (x ServiceInstancePod_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceInstancePod_State) Descriptor() protoreflect.EnumDescriptor {
	return file_prodvana_service_object_proto_enumTypes[2].Descriptor()
}

func (ServiceInstancePod_State) Type() protoreflect.EnumType {
	return &file_prodvana_service_object_proto_enumTypes[2]
}

func (x ServiceInstancePod_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceInstancePod_State.Descriptor instead.
func (ServiceInstancePod_State) EnumDescriptor() ([]byte, []int) {
	return file_prodvana_service_object_proto_rawDescGZIP(), []int{3, 0}
}

type ServiceState_State int32

const (
	ServiceState_UNKNOWN                        ServiceState_State = 0
	ServiceState_INSTANCES_UPDATING_NO_PIPELINE ServiceState_State = 1 // one of the instances is updating, but there is no ongoing pipeline
	ServiceState_HEALTHY                        ServiceState_State = 2
	ServiceState_INFRA_ERROR                    ServiceState_State = 3
	ServiceState_APP_ERROR                      ServiceState_State = 4
	ServiceState_PENDING_DEPLOY                 ServiceState_State = 5 // created but not pushed
	ServiceState_APPROVAL_REQUESTED             ServiceState_State = 6 // a pipeline is waiting on manual approval
	ServiceState_ONGOING_PIPELINE               ServiceState_State = 7
)

// Enum value maps for ServiceState_State.
var (
	ServiceState_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "INSTANCES_UPDATING_NO_PIPELINE",
		2: "HEALTHY",
		3: "INFRA_ERROR",
		4: "APP_ERROR",
		5: "PENDING_DEPLOY",
		6: "APPROVAL_REQUESTED",
		7: "ONGOING_PIPELINE",
	}
	ServiceState_State_value = map[string]int32{
		"UNKNOWN":                        0,
		"INSTANCES_UPDATING_NO_PIPELINE": 1,
		"HEALTHY":                        2,
		"INFRA_ERROR":                    3,
		"APP_ERROR":                      4,
		"PENDING_DEPLOY":                 5,
		"APPROVAL_REQUESTED":             6,
		"ONGOING_PIPELINE":               7,
	}
)

func (x ServiceState_State) Enum() *ServiceState_State {
	p := new(ServiceState_State)
	*p = x
	return p
}

func (x ServiceState_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceState_State) Descriptor() protoreflect.EnumDescriptor {
	return file_prodvana_service_object_proto_enumTypes[3].Descriptor()
}

func (ServiceState_State) Type() protoreflect.EnumType {
	return &file_prodvana_service_object_proto_enumTypes[3]
}

func (x ServiceState_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceState_State.Descriptor instead.
func (ServiceState_State) EnumDescriptor() ([]byte, []int) {
	return file_prodvana_service_object_proto_rawDescGZIP(), []int{4, 0}
}

type ServiceInstanceCanaryState_Status int32

const (
	ServiceInstanceCanaryState_UNKNOWN      ServiceInstanceCanaryState_Status = 0
	ServiceInstanceCanaryState_PENDING      ServiceInstanceCanaryState_Status = 1 // analysis is preparing to start but has not started
	ServiceInstanceCanaryState_RUNNING      ServiceInstanceCanaryState_Status = 2 // analysis is running
	ServiceInstanceCanaryState_SUCCEEDED    ServiceInstanceCanaryState_Status = 3 // analysis at this stage has succeeded
	ServiceInstanceCanaryState_FAILED       ServiceInstanceCanaryState_Status = 4 // analysis ran and the test failed
	ServiceInstanceCanaryState_ERROR        ServiceInstanceCanaryState_Status = 5 //  analysis hit an error while running (not due to analysis failure)
	ServiceInstanceCanaryState_INCONCLUSIVE ServiceInstanceCanaryState_Status = 6 //  analysis ran but neither a failure nor success condition was reached (or none was defined)
)

// Enum value maps for ServiceInstanceCanaryState_Status.
var (
	ServiceInstanceCanaryState_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "PENDING",
		2: "RUNNING",
		3: "SUCCEEDED",
		4: "FAILED",
		5: "ERROR",
		6: "INCONCLUSIVE",
	}
	ServiceInstanceCanaryState_Status_value = map[string]int32{
		"UNKNOWN":      0,
		"PENDING":      1,
		"RUNNING":      2,
		"SUCCEEDED":    3,
		"FAILED":       4,
		"ERROR":        5,
		"INCONCLUSIVE": 6,
	}
)

func (x ServiceInstanceCanaryState_Status) Enum() *ServiceInstanceCanaryState_Status {
	p := new(ServiceInstanceCanaryState_Status)
	*p = x
	return p
}

func (x ServiceInstanceCanaryState_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceInstanceCanaryState_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_prodvana_service_object_proto_enumTypes[4].Descriptor()
}

func (ServiceInstanceCanaryState_Status) Type() protoreflect.EnumType {
	return &file_prodvana_service_object_proto_enumTypes[4]
}

func (x ServiceInstanceCanaryState_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceInstanceCanaryState_Status.Descriptor instead.
func (ServiceInstanceCanaryState_Status) EnumDescriptor() ([]byte, []int) {
	return file_prodvana_service_object_proto_rawDescGZIP(), []int{6, 0}
}

type ServiceInstanceDeliveryState_Status int32

const (
	ServiceInstanceDeliveryState_UNKNOWN     ServiceInstanceDeliveryState_Status = 0
	ServiceInstanceDeliveryState_PROGRESSING ServiceInstanceDeliveryState_Status = 1
	ServiceInstanceDeliveryState_PAUSED      ServiceInstanceDeliveryState_Status = 2
	ServiceInstanceDeliveryState_HEALTHY     ServiceInstanceDeliveryState_Status = 3
	ServiceInstanceDeliveryState_UNHEALTHY   ServiceInstanceDeliveryState_Status = 4
)

// Enum value maps for ServiceInstanceDeliveryState_Status.
var (
	ServiceInstanceDeliveryState_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "PROGRESSING",
		2: "PAUSED",
		3: "HEALTHY",
		4: "UNHEALTHY",
	}
	ServiceInstanceDeliveryState_Status_value = map[string]int32{
		"UNKNOWN":     0,
		"PROGRESSING": 1,
		"PAUSED":      2,
		"HEALTHY":     3,
		"UNHEALTHY":   4,
	}
)

func (x ServiceInstanceDeliveryState_Status) Enum() *ServiceInstanceDeliveryState_Status {
	p := new(ServiceInstanceDeliveryState_Status)
	*p = x
	return p
}

func (x ServiceInstanceDeliveryState_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceInstanceDeliveryState_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_prodvana_service_object_proto_enumTypes[5].Descriptor()
}

func (ServiceInstanceDeliveryState_Status) Type() protoreflect.EnumType {
	return &file_prodvana_service_object_proto_enumTypes[5]
}

func (x ServiceInstanceDeliveryState_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceInstanceDeliveryState_Status.Descriptor instead.
func (ServiceInstanceDeliveryState_Status) EnumDescriptor() ([]byte, []int) {
	return file_prodvana_service_object_proto_rawDescGZIP(), []int{7, 0}
}

type ServiceInstanceState_State int32

const (
	ServiceInstanceState_UNKNOWN        ServiceInstanceState_State = 0
	ServiceInstanceState_UPDATING       ServiceInstanceState_State = 1
	ServiceInstanceState_HEALTHY        ServiceInstanceState_State = 2
	ServiceInstanceState_INFRA_ERROR    ServiceInstanceState_State = 3
	ServiceInstanceState_APP_ERROR      ServiceInstanceState_State = 4 // app error where process started and we have logs
	ServiceInstanceState_PENDING_DEPLOY ServiceInstanceState_State = 5 // service instance is created but it has not been pushed to yet
)

// Enum value maps for ServiceInstanceState_State.
var (
	ServiceInstanceState_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "UPDATING",
		2: "HEALTHY",
		3: "INFRA_ERROR",
		4: "APP_ERROR",
		5: "PENDING_DEPLOY",
	}
	ServiceInstanceState_State_value = map[string]int32{
		"UNKNOWN":        0,
		"UPDATING":       1,
		"HEALTHY":        2,
		"INFRA_ERROR":    3,
		"APP_ERROR":      4,
		"PENDING_DEPLOY": 5,
	}
)

func (x ServiceInstanceState_State) Enum() *ServiceInstanceState_State {
	p := new(ServiceInstanceState_State)
	*p = x
	return p
}

func (x ServiceInstanceState_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceInstanceState_State) Descriptor() protoreflect.EnumDescriptor {
	return file_prodvana_service_object_proto_enumTypes[6].Descriptor()
}

func (ServiceInstanceState_State) Type() protoreflect.EnumType {
	return &file_prodvana_service_object_proto_enumTypes[6]
}

func (x ServiceInstanceState_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceInstanceState_State.Descriptor instead.
func (ServiceInstanceState_State) EnumDescriptor() ([]byte, []int) {
	return file_prodvana_service_object_proto_rawDescGZIP(), []int{8, 0}
}

type ExternalAddr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr string            `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Type ExternalAddr_Type `protobuf:"varint,2,opt,name=type,proto3,enum=prodvana.service.ExternalAddr_Type" json:"type,omitempty"`
}

func (x *ExternalAddr) Reset() {
	*x = ExternalAddr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_service_object_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalAddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalAddr) ProtoMessage() {}

func (x *ExternalAddr) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_service_object_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalAddr.ProtoReflect.Descriptor instead.
func (*ExternalAddr) Descriptor() ([]byte, []int) {
	return file_prodvana_service_object_proto_rawDescGZIP(), []int{0}
}

func (x *ExternalAddr) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ExternalAddr) GetType() ExternalAddr_Type {
	if x != nil {
		return x.Type
	}
	return ExternalAddr_UNKNOWN
}

type Push struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId             string                         `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	ServiceName           string                         `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	ReleaseChannelId      string                         `protobuf:"bytes,3,opt,name=release_channel_id,json=releaseChannelId,proto3" json:"release_channel_id,omitempty"`
	ReleaseChannelName    string                         `protobuf:"bytes,4,opt,name=release_channel_name,json=releaseChannelName,proto3" json:"release_channel_name,omitempty"`
	PushCreationTimestamp *timestamppb.Timestamp         `protobuf:"bytes,5,opt,name=push_creation_timestamp,json=pushCreationTimestamp,proto3" json:"push_creation_timestamp,omitempty"`
	Version               string                         `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"` // will be set if initiator = PRODVANA
	Initiator             string                         `protobuf:"bytes,7,opt,name=initiator,proto3" json:"initiator,omitempty"`
	State                 string                         `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	LastUpdateTimestamp   *timestamppb.Timestamp         `protobuf:"bytes,9,opt,name=last_update_timestamp,json=lastUpdateTimestamp,proto3" json:"last_update_timestamp,omitempty"`
	Terminal              bool                           `protobuf:"varint,10,opt,name=terminal,proto3" json:"terminal,omitempty"`                                  // if push is in a terminal state
	CompiledConfig        *CompiledServiceInstanceConfig `protobuf:"bytes,11,opt,name=compiled_config,json=compiledConfig,proto3" json:"compiled_config,omitempty"` // will be set if initiator = PRODVANA
}

func (x *Push) Reset() {
	*x = Push{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_service_object_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Push) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Push) ProtoMessage() {}

func (x *Push) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_service_object_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Push.ProtoReflect.Descriptor instead.
func (*Push) Descriptor() ([]byte, []int) {
	return file_prodvana_service_object_proto_rawDescGZIP(), []int{1}
}

func (x *Push) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *Push) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *Push) GetReleaseChannelId() string {
	if x != nil {
		return x.ReleaseChannelId
	}
	return ""
}

func (x *Push) GetReleaseChannelName() string {
	if x != nil {
		return x.ReleaseChannelName
	}
	return ""
}

func (x *Push) GetPushCreationTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.PushCreationTimestamp
	}
	return nil
}

func (x *Push) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Push) GetInitiator() string {
	if x != nil {
		return x.Initiator
	}
	return ""
}

func (x *Push) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Push) GetLastUpdateTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdateTimestamp
	}
	return nil
}

func (x *Push) GetTerminal() bool {
	if x != nil {
		return x.Terminal
	}
	return false
}

func (x *Push) GetCompiledConfig() *CompiledServiceInstanceConfig {
	if x != nil {
		return x.CompiledConfig
	}
	return nil
}

type ServiceInstancePodContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State    ServiceInstancePodContainer_State `protobuf:"varint,2,opt,name=state,proto3,enum=prodvana.service.ServiceInstancePodContainer_State" json:"state,omitempty"`
	Reason   string                            `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Restarts int32                             `protobuf:"varint,4,opt,name=restarts,proto3" json:"restarts,omitempty"`
}

func (x *ServiceInstancePodContainer) Reset() {
	*x = ServiceInstancePodContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_service_object_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceInstancePodContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInstancePodContainer) ProtoMessage() {}

func (x *ServiceInstancePodContainer) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_service_object_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInstancePodContainer.ProtoReflect.Descriptor instead.
func (*ServiceInstancePodContainer) Descriptor() ([]byte, []int) {
	return file_prodvana_service_object_proto_rawDescGZIP(), []int{2}
}

func (x *ServiceInstancePodContainer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceInstancePodContainer) GetState() ServiceInstancePodContainer_State {
	if x != nil {
		return x.State
	}
	return ServiceInstancePodContainer_UNKNOWN
}

func (x *ServiceInstancePodContainer) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ServiceInstancePodContainer) GetRestarts() int32 {
	if x != nil {
		return x.Restarts
	}
	return 0
}

type ServiceInstancePod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string                         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ServiceVersion string                         `protobuf:"bytes,2,opt,name=service_version,json=serviceVersion,proto3" json:"service_version,omitempty"`
	State          ServiceInstancePod_State       `protobuf:"varint,3,opt,name=state,proto3,enum=prodvana.service.ServiceInstancePod_State" json:"state,omitempty"`
	NeedsAttention bool                           `protobuf:"varint,4,opt,name=needs_attention,json=needsAttention,proto3" json:"needs_attention,omitempty"`
	Containers     []*ServiceInstancePodContainer `protobuf:"bytes,5,rep,name=containers,proto3" json:"containers,omitempty"`
	IsOngoingPush  bool                           `protobuf:"varint,6,opt,name=is_ongoing_push,json=isOngoingPush,proto3" json:"is_ongoing_push,omitempty"`
}

func (x *ServiceInstancePod) Reset() {
	*x = ServiceInstancePod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_service_object_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceInstancePod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInstancePod) ProtoMessage() {}

func (x *ServiceInstancePod) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_service_object_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInstancePod.ProtoReflect.Descriptor instead.
func (*ServiceInstancePod) Descriptor() ([]byte, []int) {
	return file_prodvana_service_object_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceInstancePod) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceInstancePod) GetServiceVersion() string {
	if x != nil {
		return x.ServiceVersion
	}
	return ""
}

func (x *ServiceInstancePod) GetState() ServiceInstancePod_State {
	if x != nil {
		return x.State
	}
	return ServiceInstancePod_UNKNOWN
}

func (x *ServiceInstancePod) GetNeedsAttention() bool {
	if x != nil {
		return x.NeedsAttention
	}
	return false
}

func (x *ServiceInstancePod) GetContainers() []*ServiceInstancePodContainer {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *ServiceInstancePod) GetIsOngoingPush() bool {
	if x != nil {
		return x.IsOngoingPush
	}
	return false
}

type ServiceState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ongoing pipeline runs. Because there are only going to ever be a few of these (mostly 1) at a time,
	// this will return the full run object as if it was retrieved using the get pipeline run function
	OngoingPipelineRuns []*pipelines.PipelineRun `protobuf:"bytes,1,rep,name=ongoing_pipeline_runs,json=ongoingPipelineRuns,proto3" json:"ongoing_pipeline_runs,omitempty"`
	State               ServiceState_State       `protobuf:"varint,2,opt,name=state,proto3,enum=prodvana.service.ServiceState_State" json:"state,omitempty"`
}

func (x *ServiceState) Reset() {
	*x = ServiceState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_service_object_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceState) ProtoMessage() {}

func (x *ServiceState) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_service_object_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceState.ProtoReflect.Descriptor instead.
func (*ServiceState) Descriptor() ([]byte, []int) {
	return file_prodvana_service_object_proto_rawDescGZIP(), []int{4}
}

func (x *ServiceState) GetOngoingPipelineRuns() []*pipelines.PipelineRun {
	if x != nil {
		return x.OngoingPipelineRuns
	}
	return nil
}

func (x *ServiceState) GetState() ServiceState_State {
	if x != nil {
		return x.State
	}
	return ServiceState_UNKNOWN
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta         *object.ObjectMeta   `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Config       *ServiceConfig       `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	State        *ServiceState        `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	UserMetadata *ServiceUserMetadata `protobuf:"bytes,4,opt,name=user_metadata,json=userMetadata,proto3" json:"user_metadata,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_service_object_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_service_object_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_prodvana_service_object_proto_rawDescGZIP(), []int{5}
}

func (x *Service) GetMeta() *object.ObjectMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Service) GetConfig() *ServiceConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Service) GetState() *ServiceState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *Service) GetUserMetadata() *ServiceUserMetadata {
	if x != nil {
		return x.UserMetadata
	}
	return nil
}

type ServiceInstanceCanaryState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// current canary weight
	CanaryWeight int32 `protobuf:"varint,1,opt,name=canary_weight,json=canaryWeight,proto3" json:"canary_weight,omitempty"`
	// current status of canary analysis
	Status ServiceInstanceCanaryState_Status `protobuf:"varint,2,opt,name=status,proto3,enum=prodvana.service.ServiceInstanceCanaryState_Status" json:"status,omitempty"`
	// message about the current status
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// current stage of canary progress
	CurrentStage int32 `protobuf:"varint,4,opt,name=current_stage,json=currentStage,proto3" json:"current_stage,omitempty"`
	// total number of canary progress stages
	TotalStages int32 `protobuf:"varint,5,opt,name=total_stages,json=totalStages,proto3" json:"total_stages,omitempty"`
}

func (x *ServiceInstanceCanaryState) Reset() {
	*x = ServiceInstanceCanaryState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_service_object_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceInstanceCanaryState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInstanceCanaryState) ProtoMessage() {}

func (x *ServiceInstanceCanaryState) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_service_object_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInstanceCanaryState.ProtoReflect.Descriptor instead.
func (*ServiceInstanceCanaryState) Descriptor() ([]byte, []int) {
	return file_prodvana_service_object_proto_rawDescGZIP(), []int{6}
}

func (x *ServiceInstanceCanaryState) GetCanaryWeight() int32 {
	if x != nil {
		return x.CanaryWeight
	}
	return 0
}

func (x *ServiceInstanceCanaryState) GetStatus() ServiceInstanceCanaryState_Status {
	if x != nil {
		return x.Status
	}
	return ServiceInstanceCanaryState_UNKNOWN
}

func (x *ServiceInstanceCanaryState) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceInstanceCanaryState) GetCurrentStage() int32 {
	if x != nil {
		return x.CurrentStage
	}
	return 0
}

func (x *ServiceInstanceCanaryState) GetTotalStages() int32 {
	if x != nil {
		return x.TotalStages
	}
	return 0
}

type ServiceInstanceDeliveryState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// overall delivery status
	Status ServiceInstanceDeliveryState_Status `protobuf:"varint,6,opt,name=status,proto3,enum=prodvana.service.ServiceInstanceDeliveryState_Status" json:"status,omitempty"`
	// current state of canary progress at this stage
	Canary *ServiceInstanceCanaryState `protobuf:"bytes,1,opt,name=canary,proto3" json:"canary,omitempty"`
	// current stage of delivery
	CurrentStage int32 `protobuf:"varint,2,opt,name=current_stage,json=currentStage,proto3" json:"current_stage,omitempty"` // deprecated, use canary.current_stage
	// total number of stages
	TotalStages int32 `protobuf:"varint,3,opt,name=total_stages,json=totalStages,proto3" json:"total_stages,omitempty"` // deprecated, use canary.total_stages
	// human readable message from the delivery controller
	Message string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	// when status = PAUSED this indicates when the pause started
	PauseStartTimestamp *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=pause_start_timestamp,json=pauseStartTimestamp,proto3" json:"pause_start_timestamp,omitempty"`
	// when status = PAUSED this indicates how long the pause should last
	PauseDuration *durationpb.Duration `protobuf:"bytes,7,opt,name=pause_duration,json=pauseDuration,proto3" json:"pause_duration,omitempty"`
}

func (x *ServiceInstanceDeliveryState) Reset() {
	*x = ServiceInstanceDeliveryState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_service_object_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceInstanceDeliveryState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInstanceDeliveryState) ProtoMessage() {}

func (x *ServiceInstanceDeliveryState) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_service_object_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInstanceDeliveryState.ProtoReflect.Descriptor instead.
func (*ServiceInstanceDeliveryState) Descriptor() ([]byte, []int) {
	return file_prodvana_service_object_proto_rawDescGZIP(), []int{7}
}

func (x *ServiceInstanceDeliveryState) GetStatus() ServiceInstanceDeliveryState_Status {
	if x != nil {
		return x.Status
	}
	return ServiceInstanceDeliveryState_UNKNOWN
}

func (x *ServiceInstanceDeliveryState) GetCanary() *ServiceInstanceCanaryState {
	if x != nil {
		return x.Canary
	}
	return nil
}

func (x *ServiceInstanceDeliveryState) GetCurrentStage() int32 {
	if x != nil {
		return x.CurrentStage
	}
	return 0
}

func (x *ServiceInstanceDeliveryState) GetTotalStages() int32 {
	if x != nil {
		return x.TotalStages
	}
	return 0
}

func (x *ServiceInstanceDeliveryState) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceInstanceDeliveryState) GetPauseStartTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.PauseStartTimestamp
	}
	return nil
}

func (x *ServiceInstanceDeliveryState) GetPauseDuration() *durationpb.Duration {
	if x != nil {
		return x.PauseDuration
	}
	return nil
}

type ServiceInstanceState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State         ServiceInstanceState_State `protobuf:"varint,1,opt,name=state,proto3,enum=prodvana.service.ServiceInstanceState_State" json:"state,omitempty"`
	AvailablePods int32                      `protobuf:"varint,2,opt,name=available_pods,json=availablePods,proto3" json:"available_pods,omitempty"`
	DesiredPods   int32                      `protobuf:"varint,3,opt,name=desired_pods,json=desiredPods,proto3" json:"desired_pods,omitempty"`
	// TODO(naphat) should pods be returned separately?
	Pods []*ServiceInstancePod `protobuf:"bytes,11,rep,name=pods,proto3" json:"pods,omitempty"`
	// This will always be set if a service instance has ever been pushed and can be used to derive the latest version the service instance is on.
	// Will be empty if the service instance has never been pushed.
	LatestSuccessfulProdvanaPush *Push `protobuf:"bytes,4,opt,name=latest_successful_prodvana_push,json=latestSuccessfulProdvanaPush,proto3" json:"latest_successful_prodvana_push,omitempty"`
	// This will be set iff there is a detected unknown push after the latest prodvana push.
	LatestSuccessfulUnknownPushAfterProdvanaPush *Push `protobuf:"bytes,5,opt,name=latest_successful_unknown_push_after_prodvana_push,json=latestSuccessfulUnknownPushAfterProdvanaPush,proto3" json:"latest_successful_unknown_push_after_prodvana_push,omitempty"`
	// Will only be set if there is an ongoing push
	OngoingPush     *Push                                   `protobuf:"bytes,6,opt,name=ongoing_push,json=ongoingPush,proto3" json:"ongoing_push,omitempty"`
	ExternalAddrs   []*ExternalAddr                         `protobuf:"bytes,7,rep,name=external_addrs,json=externalAddrs,proto3" json:"external_addrs,omitempty"`
	WritebackConfig []*config_writeback.ConfigWritebackPath `protobuf:"bytes,8,rep,name=writeback_config,json=writebackConfig,proto3" json:"writeback_config,omitempty"`
	RuntimeId       string                                  `protobuf:"bytes,9,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	RuntimeName     string                                  `protobuf:"bytes,10,opt,name=runtime_name,json=runtimeName,proto3" json:"runtime_name,omitempty"`
	DeliveryState   *ServiceInstanceDeliveryState           `protobuf:"bytes,12,opt,name=delivery_state,json=deliveryState,proto3" json:"delivery_state,omitempty"`
}

func (x *ServiceInstanceState) Reset() {
	*x = ServiceInstanceState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_service_object_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceInstanceState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInstanceState) ProtoMessage() {}

func (x *ServiceInstanceState) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_service_object_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInstanceState.ProtoReflect.Descriptor instead.
func (*ServiceInstanceState) Descriptor() ([]byte, []int) {
	return file_prodvana_service_object_proto_rawDescGZIP(), []int{8}
}

func (x *ServiceInstanceState) GetState() ServiceInstanceState_State {
	if x != nil {
		return x.State
	}
	return ServiceInstanceState_UNKNOWN
}

func (x *ServiceInstanceState) GetAvailablePods() int32 {
	if x != nil {
		return x.AvailablePods
	}
	return 0
}

func (x *ServiceInstanceState) GetDesiredPods() int32 {
	if x != nil {
		return x.DesiredPods
	}
	return 0
}

func (x *ServiceInstanceState) GetPods() []*ServiceInstancePod {
	if x != nil {
		return x.Pods
	}
	return nil
}

func (x *ServiceInstanceState) GetLatestSuccessfulProdvanaPush() *Push {
	if x != nil {
		return x.LatestSuccessfulProdvanaPush
	}
	return nil
}

func (x *ServiceInstanceState) GetLatestSuccessfulUnknownPushAfterProdvanaPush() *Push {
	if x != nil {
		return x.LatestSuccessfulUnknownPushAfterProdvanaPush
	}
	return nil
}

func (x *ServiceInstanceState) GetOngoingPush() *Push {
	if x != nil {
		return x.OngoingPush
	}
	return nil
}

func (x *ServiceInstanceState) GetExternalAddrs() []*ExternalAddr {
	if x != nil {
		return x.ExternalAddrs
	}
	return nil
}

func (x *ServiceInstanceState) GetWritebackConfig() []*config_writeback.ConfigWritebackPath {
	if x != nil {
		return x.WritebackConfig
	}
	return nil
}

func (x *ServiceInstanceState) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *ServiceInstanceState) GetRuntimeName() string {
	if x != nil {
		return x.RuntimeName
	}
	return ""
}

func (x *ServiceInstanceState) GetDeliveryState() *ServiceInstanceDeliveryState {
	if x != nil {
		return x.DeliveryState
	}
	return nil
}

type ServiceInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta   *common_config.ServiceInstanceObjectMeta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Config *CompiledServiceInstanceConfig           `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"` // will be empty if never pushed
	State  *ServiceInstanceState                    `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *ServiceInstance) Reset() {
	*x = ServiceInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_service_object_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInstance) ProtoMessage() {}

func (x *ServiceInstance) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_service_object_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInstance.ProtoReflect.Descriptor instead.
func (*ServiceInstance) Descriptor() ([]byte, []int) {
	return file_prodvana_service_object_proto_rawDescGZIP(), []int{9}
}

func (x *ServiceInstance) GetMeta() *common_config.ServiceInstanceObjectMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ServiceInstance) GetConfig() *CompiledServiceInstanceConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ServiceInstance) GetState() *ServiceInstanceState {
	if x != nil {
		return x.State
	}
	return nil
}

var File_prodvana_service_object_proto protoreflect.FileDescriptor

var file_prodvana_service_object_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1a, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x29, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x2f, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x01, 0x0a, 0x0c, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e,
	0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x49, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x55, 0x54, 0x4f, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x45, 0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x52, 0x41, 0x57, 0x5f, 0x49, 0x50, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x41,
	0x57, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x04, 0x22, 0x90, 0x04, 0x0a,
	0x04, 0x50, 0x75, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x17, 0x70, 0x75, 0x73, 0x68, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x15, 0x70, 0x75, 0x73, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4e, 0x0a, 0x15, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x58, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65,
	0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x89, 0x02, 0x0a, 0x1b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x50, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x73, 0x22, 0x57, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x49, 0x54,
	0x49, 0x41, 0x4c, 0x49, 0x5a, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55,
	0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x52, 0x41, 0x53, 0x48, 0x5f, 0x4c, 0x4f, 0x4f,
	0x50, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x4f, 0x46, 0x46, 0x10, 0x04, 0x22, 0xac, 0x03, 0x0a, 0x12,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50,
	0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x40, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x50, 0x6f, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6e, 0x65, 0x65, 0x64,
	0x73, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x50, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f,
	0x6f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x4f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x50, 0x75, 0x73,
	0x68, 0x22, 0x77, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49,
	0x5a, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x53, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0d,
	0x0a, 0x09, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0a, 0x0a,
	0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x45, 0x52,
	0x4d, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x22, 0xc9, 0x02, 0x0a, 0x0c, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x53, 0x0a, 0x15, 0x6f,
	0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x72, 0x75, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x2e,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x13, 0x6f, 0x6e, 0x67,
	0x6f, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x73,
	0x12, 0x3a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xa7, 0x01, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x53,
	0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x4f, 0x5f, 0x50, 0x49, 0x50,
	0x45, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x45, 0x41, 0x4c, 0x54,
	0x48, 0x59, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x46, 0x52, 0x41, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x50, 0x50, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f,
	0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x50, 0x50, 0x52,
	0x4f, 0x56, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x45, 0x44, 0x10, 0x06,
	0x12, 0x14, 0x0a, 0x10, 0x4f, 0x4e, 0x47, 0x4f, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x49, 0x50, 0x45,
	0x4c, 0x49, 0x4e, 0x45, 0x10, 0x07, 0x22, 0xf5, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x76, 0x61, 0x6e, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe4,
	0x02, 0x0a, 0x1a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a,
	0x0d, 0x63, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x64, 0x28, 0x00, 0x52,
	0x0c, 0x63, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x4b, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0d, 0x0a,
	0x09, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x43, 0x4f, 0x4e, 0x43, 0x4c, 0x55, 0x53,
	0x49, 0x56, 0x45, 0x10, 0x06, 0x22, 0xf7, 0x03, 0x0a, 0x1c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e,
	0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x44, 0x0a, 0x06, 0x63, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x06, 0x63, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4e, 0x0a,
	0x15, 0x70, 0x61, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x13, 0x70, 0x61, 0x75, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x40, 0x0a,
	0x0e, 0x70, 0x61, 0x75, 0x73, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0d, 0x70, 0x61, 0x75, 0x73, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x4e, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45,
	0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x41, 0x55, 0x53, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x59, 0x10, 0x03,
	0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x59, 0x10, 0x04, 0x22,
	0x9b, 0x07, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50,
	0x6f, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x70,
	0x6f, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x69, 0x72,
	0x65, 0x64, 0x50, 0x6f, 0x64, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x64, 0x52, 0x04, 0x70, 0x6f, 0x64, 0x73,
	0x12, 0x5d, 0x0a, 0x1f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x5f, 0x70,
	0x75, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x76, 0x61, 0x6e, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x52, 0x1c, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x66, 0x75, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x50, 0x75, 0x73, 0x68, 0x12,
	0x80, 0x01, 0x0a, 0x32, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x75,
	0x73, 0x68, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e,
	0x61, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x52, 0x2c, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x75, 0x73,
	0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x50, 0x75,
	0x73, 0x68, 0x12, 0x39, 0x0a, 0x0c, 0x6f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x75,
	0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76,
	0x61, 0x6e, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x73, 0x68,
	0x52, 0x0b, 0x6f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x50, 0x75, 0x73, 0x68, 0x12, 0x45, 0x0a,
	0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41,
	0x64, 0x64, 0x72, 0x73, 0x12, 0x59, 0x0a, 0x10, 0x77, 0x72, 0x69, 0x74, 0x65, 0x62, 0x61, 0x63,
	0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x57, 0x72, 0x69, 0x74, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x74, 0x68, 0x52, 0x0f,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x55, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x76, 0x61, 0x6e, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x63, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x55, 0x50, 0x44, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x59, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x46,
	0x52, 0x41, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x50,
	0x50, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x45, 0x4e,
	0x44, 0x49, 0x4e, 0x47, 0x5f, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x10, 0x05, 0x22, 0xdf, 0x01,
	0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x45, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76,
	0x61, 0x6e, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x69, 0x6c, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x3c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x42,
	0x4c, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2d,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prodvana_service_object_proto_rawDescOnce sync.Once
	file_prodvana_service_object_proto_rawDescData = file_prodvana_service_object_proto_rawDesc
)

func file_prodvana_service_object_proto_rawDescGZIP() []byte {
	file_prodvana_service_object_proto_rawDescOnce.Do(func() {
		file_prodvana_service_object_proto_rawDescData = protoimpl.X.CompressGZIP(file_prodvana_service_object_proto_rawDescData)
	})
	return file_prodvana_service_object_proto_rawDescData
}

var file_prodvana_service_object_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_prodvana_service_object_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_prodvana_service_object_proto_goTypes = []interface{}{
	(ExternalAddr_Type)(0),                          // 0: prodvana.service.ExternalAddr.Type
	(ServiceInstancePodContainer_State)(0),          // 1: prodvana.service.ServiceInstancePodContainer.State
	(ServiceInstancePod_State)(0),                   // 2: prodvana.service.ServiceInstancePod.State
	(ServiceState_State)(0),                         // 3: prodvana.service.ServiceState.State
	(ServiceInstanceCanaryState_Status)(0),          // 4: prodvana.service.ServiceInstanceCanaryState.Status
	(ServiceInstanceDeliveryState_Status)(0),        // 5: prodvana.service.ServiceInstanceDeliveryState.Status
	(ServiceInstanceState_State)(0),                 // 6: prodvana.service.ServiceInstanceState.State
	(*ExternalAddr)(nil),                            // 7: prodvana.service.ExternalAddr
	(*Push)(nil),                                    // 8: prodvana.service.Push
	(*ServiceInstancePodContainer)(nil),             // 9: prodvana.service.ServiceInstancePodContainer
	(*ServiceInstancePod)(nil),                      // 10: prodvana.service.ServiceInstancePod
	(*ServiceState)(nil),                            // 11: prodvana.service.ServiceState
	(*Service)(nil),                                 // 12: prodvana.service.Service
	(*ServiceInstanceCanaryState)(nil),              // 13: prodvana.service.ServiceInstanceCanaryState
	(*ServiceInstanceDeliveryState)(nil),            // 14: prodvana.service.ServiceInstanceDeliveryState
	(*ServiceInstanceState)(nil),                    // 15: prodvana.service.ServiceInstanceState
	(*ServiceInstance)(nil),                         // 16: prodvana.service.ServiceInstance
	(*timestamppb.Timestamp)(nil),                   // 17: google.protobuf.Timestamp
	(*CompiledServiceInstanceConfig)(nil),           // 18: prodvana.service.CompiledServiceInstanceConfig
	(*pipelines.PipelineRun)(nil),                   // 19: prodvana.pipelines.PipelineRun
	(*object.ObjectMeta)(nil),                       // 20: prodvana.object.ObjectMeta
	(*ServiceConfig)(nil),                           // 21: prodvana.service.ServiceConfig
	(*ServiceUserMetadata)(nil),                     // 22: prodvana.service.ServiceUserMetadata
	(*durationpb.Duration)(nil),                     // 23: google.protobuf.Duration
	(*config_writeback.ConfigWritebackPath)(nil),    // 24: prodvana.config_writeback.ConfigWritebackPath
	(*common_config.ServiceInstanceObjectMeta)(nil), // 25: prodvana.common_config.ServiceInstanceObjectMeta
}
var file_prodvana_service_object_proto_depIdxs = []int32{
	0,  // 0: prodvana.service.ExternalAddr.type:type_name -> prodvana.service.ExternalAddr.Type
	17, // 1: prodvana.service.Push.push_creation_timestamp:type_name -> google.protobuf.Timestamp
	17, // 2: prodvana.service.Push.last_update_timestamp:type_name -> google.protobuf.Timestamp
	18, // 3: prodvana.service.Push.compiled_config:type_name -> prodvana.service.CompiledServiceInstanceConfig
	1,  // 4: prodvana.service.ServiceInstancePodContainer.state:type_name -> prodvana.service.ServiceInstancePodContainer.State
	2,  // 5: prodvana.service.ServiceInstancePod.state:type_name -> prodvana.service.ServiceInstancePod.State
	9,  // 6: prodvana.service.ServiceInstancePod.containers:type_name -> prodvana.service.ServiceInstancePodContainer
	19, // 7: prodvana.service.ServiceState.ongoing_pipeline_runs:type_name -> prodvana.pipelines.PipelineRun
	3,  // 8: prodvana.service.ServiceState.state:type_name -> prodvana.service.ServiceState.State
	20, // 9: prodvana.service.Service.meta:type_name -> prodvana.object.ObjectMeta
	21, // 10: prodvana.service.Service.config:type_name -> prodvana.service.ServiceConfig
	11, // 11: prodvana.service.Service.state:type_name -> prodvana.service.ServiceState
	22, // 12: prodvana.service.Service.user_metadata:type_name -> prodvana.service.ServiceUserMetadata
	4,  // 13: prodvana.service.ServiceInstanceCanaryState.status:type_name -> prodvana.service.ServiceInstanceCanaryState.Status
	5,  // 14: prodvana.service.ServiceInstanceDeliveryState.status:type_name -> prodvana.service.ServiceInstanceDeliveryState.Status
	13, // 15: prodvana.service.ServiceInstanceDeliveryState.canary:type_name -> prodvana.service.ServiceInstanceCanaryState
	17, // 16: prodvana.service.ServiceInstanceDeliveryState.pause_start_timestamp:type_name -> google.protobuf.Timestamp
	23, // 17: prodvana.service.ServiceInstanceDeliveryState.pause_duration:type_name -> google.protobuf.Duration
	6,  // 18: prodvana.service.ServiceInstanceState.state:type_name -> prodvana.service.ServiceInstanceState.State
	10, // 19: prodvana.service.ServiceInstanceState.pods:type_name -> prodvana.service.ServiceInstancePod
	8,  // 20: prodvana.service.ServiceInstanceState.latest_successful_prodvana_push:type_name -> prodvana.service.Push
	8,  // 21: prodvana.service.ServiceInstanceState.latest_successful_unknown_push_after_prodvana_push:type_name -> prodvana.service.Push
	8,  // 22: prodvana.service.ServiceInstanceState.ongoing_push:type_name -> prodvana.service.Push
	7,  // 23: prodvana.service.ServiceInstanceState.external_addrs:type_name -> prodvana.service.ExternalAddr
	24, // 24: prodvana.service.ServiceInstanceState.writeback_config:type_name -> prodvana.config_writeback.ConfigWritebackPath
	14, // 25: prodvana.service.ServiceInstanceState.delivery_state:type_name -> prodvana.service.ServiceInstanceDeliveryState
	25, // 26: prodvana.service.ServiceInstance.meta:type_name -> prodvana.common_config.ServiceInstanceObjectMeta
	18, // 27: prodvana.service.ServiceInstance.config:type_name -> prodvana.service.CompiledServiceInstanceConfig
	15, // 28: prodvana.service.ServiceInstance.state:type_name -> prodvana.service.ServiceInstanceState
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_prodvana_service_object_proto_init() }
func file_prodvana_service_object_proto_init() {
	if File_prodvana_service_object_proto != nil {
		return
	}
	file_prodvana_service_service_config_proto_init()
	file_prodvana_service_user_metadata_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_prodvana_service_object_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalAddr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_service_object_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Push); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_service_object_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceInstancePodContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_service_object_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceInstancePod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_service_object_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_service_object_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_service_object_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceInstanceCanaryState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_service_object_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceInstanceDeliveryState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_service_object_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceInstanceState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_service_object_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prodvana_service_object_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_prodvana_service_object_proto_goTypes,
		DependencyIndexes: file_prodvana_service_object_proto_depIdxs,
		EnumInfos:         file_prodvana_service_object_proto_enumTypes,
		MessageInfos:      file_prodvana_service_object_proto_msgTypes,
	}.Build()
	File_prodvana_service_object_proto = out.File
	file_prodvana_service_object_proto_rawDesc = nil
	file_prodvana_service_object_proto_goTypes = nil
	file_prodvana_service_object_proto_depIdxs = nil
}
