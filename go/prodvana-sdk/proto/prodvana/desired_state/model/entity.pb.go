// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.21.10
// source: prodvana/desired_state/model/entity.proto

package model

import (
	common_config "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/common_config"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   *Identifier                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DesiredStateId       string                      `protobuf:"bytes,2,opt,name=desired_state_id,json=desiredStateId,proto3" json:"desired_state_id,omitempty"`
	RootDesiredStateId   string                      `protobuf:"bytes,3,opt,name=root_desired_state_id,json=rootDesiredStateId,proto3" json:"root_desired_state_id,omitempty"`
	Annotations          *Annotations                `protobuf:"bytes,4,opt,name=annotations,proto3" json:"annotations,omitempty"`
	Status               Status                      `protobuf:"varint,5,opt,name=status,proto3,enum=prodvana.desired_state.model.Status" json:"status,omitempty"`
	SimpleStatus         SimpleStatus                `protobuf:"varint,17,opt,name=simple_status,json=simpleStatus,proto3,enum=prodvana.desired_state.model.SimpleStatus" json:"simple_status,omitempty"`
	StartingState        *State                      `protobuf:"bytes,6,opt,name=starting_state,json=startingState,proto3" json:"starting_state,omitempty"`
	LastSeenState        *State                      `protobuf:"bytes,7,opt,name=last_seen_state,json=lastSeenState,proto3" json:"last_seen_state,omitempty"`
	DesiredState         *State                      `protobuf:"bytes,8,opt,name=desired_state,json=desiredState,proto3" json:"desired_state,omitempty"` // the state we want to get to before calling convergence complete
	TargetState          *State                      `protobuf:"bytes,19,opt,name=target_state,json=targetState,proto3" json:"target_state,omitempty"`   // the state we are actually going to apply. when preconditions are met, target state = desired state, otherwise, target state = previous desired state
	PreconditionStatuses []*ConditionState           `protobuf:"bytes,9,rep,name=precondition_statuses,json=preconditionStatuses,proto3" json:"precondition_statuses,omitempty"`
	StatusExplanations   []*StatusExplanation        `protobuf:"bytes,10,rep,name=status_explanations,json=statusExplanations,proto3" json:"status_explanations,omitempty"`
	Logs                 []*DebugLog                 `protobuf:"bytes,11,rep,name=logs,proto3" json:"logs,omitempty"`
	ActionExplanation    *ActionExplanation          `protobuf:"bytes,12,opt,name=action_explanation,json=actionExplanation,proto3" json:"action_explanation,omitempty"`
	LastUpdateTimestamp  *timestamppb.Timestamp      `protobuf:"bytes,13,opt,name=last_update_timestamp,json=lastUpdateTimestamp,proto3" json:"last_update_timestamp,omitempty"`    // when the entity state last changed
	LastFetchedTimestamp *timestamppb.Timestamp      `protobuf:"bytes,14,opt,name=last_fetched_timestamp,json=lastFetchedTimestamp,proto3" json:"last_fetched_timestamp,omitempty"` // when prodvana last fetched entity state, best effort
	LastAppliedTimestamp *timestamppb.Timestamp      `protobuf:"bytes,15,opt,name=last_applied_timestamp,json=lastAppliedTimestamp,proto3" json:"last_applied_timestamp,omitempty"` // when prodvana last applied state for this entity, best effort
	Dependencies         []*Identifier               `protobuf:"bytes,16,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	Lifecycle            common_config.TaskLifecycle `protobuf:"varint,18,opt,name=lifecycle,proto3,enum=prodvana.common_config.TaskLifecycle" json:"lifecycle,omitempty"`
	MissingApproval      *MissingApproval            `protobuf:"bytes,20,opt,name=missing_approval,json=missingApproval,proto3" json:"missing_approval,omitempty"` // next tag: 21
}

func (x *Entity) Reset() {
	*x = Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_desired_state_model_entity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_desired_state_model_entity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_prodvana_desired_state_model_entity_proto_rawDescGZIP(), []int{0}
}

func (x *Entity) GetId() *Identifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Entity) GetDesiredStateId() string {
	if x != nil {
		return x.DesiredStateId
	}
	return ""
}

func (x *Entity) GetRootDesiredStateId() string {
	if x != nil {
		return x.RootDesiredStateId
	}
	return ""
}

func (x *Entity) GetAnnotations() *Annotations {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Entity) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN_STATUS
}

func (x *Entity) GetSimpleStatus() SimpleStatus {
	if x != nil {
		return x.SimpleStatus
	}
	return SimpleStatus_SS_UNKNOWN
}

func (x *Entity) GetStartingState() *State {
	if x != nil {
		return x.StartingState
	}
	return nil
}

func (x *Entity) GetLastSeenState() *State {
	if x != nil {
		return x.LastSeenState
	}
	return nil
}

func (x *Entity) GetDesiredState() *State {
	if x != nil {
		return x.DesiredState
	}
	return nil
}

func (x *Entity) GetTargetState() *State {
	if x != nil {
		return x.TargetState
	}
	return nil
}

func (x *Entity) GetPreconditionStatuses() []*ConditionState {
	if x != nil {
		return x.PreconditionStatuses
	}
	return nil
}

func (x *Entity) GetStatusExplanations() []*StatusExplanation {
	if x != nil {
		return x.StatusExplanations
	}
	return nil
}

func (x *Entity) GetLogs() []*DebugLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Entity) GetActionExplanation() *ActionExplanation {
	if x != nil {
		return x.ActionExplanation
	}
	return nil
}

func (x *Entity) GetLastUpdateTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdateTimestamp
	}
	return nil
}

func (x *Entity) GetLastFetchedTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LastFetchedTimestamp
	}
	return nil
}

func (x *Entity) GetLastAppliedTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LastAppliedTimestamp
	}
	return nil
}

func (x *Entity) GetDependencies() []*Identifier {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *Entity) GetLifecycle() common_config.TaskLifecycle {
	if x != nil {
		return x.Lifecycle
	}
	return common_config.TaskLifecycle(0)
}

func (x *Entity) GetMissingApproval() *MissingApproval {
	if x != nil {
		return x.MissingApproval
	}
	return nil
}

type EntityGraph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root     *Identifier `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Entities []*Entity   `protobuf:"bytes,2,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *EntityGraph) Reset() {
	*x = EntityGraph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodvana_desired_state_model_entity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityGraph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityGraph) ProtoMessage() {}

func (x *EntityGraph) ProtoReflect() protoreflect.Message {
	mi := &file_prodvana_desired_state_model_entity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityGraph.ProtoReflect.Descriptor instead.
func (*EntityGraph) Descriptor() ([]byte, []int) {
	return file_prodvana_desired_state_model_entity_proto_rawDescGZIP(), []int{1}
}

func (x *EntityGraph) GetRoot() *Identifier {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *EntityGraph) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

var File_prodvana_desired_state_model_entity_proto protoreflect.FileDescriptor

var file_prodvana_desired_state_model_entity_proto_rawDesc = []byte{
	0x0a, 0x29, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x64, 0x65, 0x73, 0x69, 0x72,
	0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x21, 0x70, 0x72, 0x6f, 0x64, 0x76,
	0x61, 0x6e, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2f, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x64, 0x65, 0x73, 0x69, 0x72,
	0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xe8, 0x0b, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e,
	0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x31,
	0x0a, 0x15, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72,
	0x6f, 0x6f, 0x74, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x4b, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e,
	0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65,
	0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4f, 0x0a, 0x0d,
	0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x64,
	0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x0c, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4a, 0x0a,
	0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4b, 0x0a, 0x0f, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x64, 0x65,
	0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65,
	0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x46, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e,
	0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x61, 0x0a, 0x15, 0x70, 0x72, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61,
	0x6e, 0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x14, 0x70, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x60, 0x0a, 0x13, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76,
	0x61, 0x6e, 0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x78,
	0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a,
	0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67,
	0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x5e, 0x0a, 0x12, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x6c, 0x61,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78,
	0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x15, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x50, 0x0a, 0x16, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x50, 0x0a, 0x16, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x4c, 0x0a,
	0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x10, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x64,
	0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0c, 0x64,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x09, 0x6c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x66, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x09, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x12, 0x58, 0x0a, 0x10, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x0f, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x22, 0x8d, 0x01, 0x0a, 0x0b, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x3c, 0x0a, 0x04, 0x72, 0x6f,
	0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x76,
	0x61, 0x6e, 0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x40, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x76, 0x61, 0x6e, 0x61, 0x2e, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x58, 0x5a, 0x56, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e,
	0x61, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2d, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x76, 0x61, 0x6e, 0x61,
	0x2f, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prodvana_desired_state_model_entity_proto_rawDescOnce sync.Once
	file_prodvana_desired_state_model_entity_proto_rawDescData = file_prodvana_desired_state_model_entity_proto_rawDesc
)

func file_prodvana_desired_state_model_entity_proto_rawDescGZIP() []byte {
	file_prodvana_desired_state_model_entity_proto_rawDescOnce.Do(func() {
		file_prodvana_desired_state_model_entity_proto_rawDescData = protoimpl.X.CompressGZIP(file_prodvana_desired_state_model_entity_proto_rawDescData)
	})
	return file_prodvana_desired_state_model_entity_proto_rawDescData
}

var file_prodvana_desired_state_model_entity_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_prodvana_desired_state_model_entity_proto_goTypes = []interface{}{
	(*Entity)(nil),                   // 0: prodvana.desired_state.model.Entity
	(*EntityGraph)(nil),              // 1: prodvana.desired_state.model.EntityGraph
	(*Identifier)(nil),               // 2: prodvana.desired_state.model.Identifier
	(*Annotations)(nil),              // 3: prodvana.desired_state.model.Annotations
	(Status)(0),                      // 4: prodvana.desired_state.model.Status
	(SimpleStatus)(0),                // 5: prodvana.desired_state.model.SimpleStatus
	(*State)(nil),                    // 6: prodvana.desired_state.model.State
	(*ConditionState)(nil),           // 7: prodvana.desired_state.model.ConditionState
	(*StatusExplanation)(nil),        // 8: prodvana.desired_state.model.StatusExplanation
	(*DebugLog)(nil),                 // 9: prodvana.desired_state.model.DebugLog
	(*ActionExplanation)(nil),        // 10: prodvana.desired_state.model.ActionExplanation
	(*timestamppb.Timestamp)(nil),    // 11: google.protobuf.Timestamp
	(common_config.TaskLifecycle)(0), // 12: prodvana.common_config.TaskLifecycle
	(*MissingApproval)(nil),          // 13: prodvana.desired_state.model.MissingApproval
}
var file_prodvana_desired_state_model_entity_proto_depIdxs = []int32{
	2,  // 0: prodvana.desired_state.model.Entity.id:type_name -> prodvana.desired_state.model.Identifier
	3,  // 1: prodvana.desired_state.model.Entity.annotations:type_name -> prodvana.desired_state.model.Annotations
	4,  // 2: prodvana.desired_state.model.Entity.status:type_name -> prodvana.desired_state.model.Status
	5,  // 3: prodvana.desired_state.model.Entity.simple_status:type_name -> prodvana.desired_state.model.SimpleStatus
	6,  // 4: prodvana.desired_state.model.Entity.starting_state:type_name -> prodvana.desired_state.model.State
	6,  // 5: prodvana.desired_state.model.Entity.last_seen_state:type_name -> prodvana.desired_state.model.State
	6,  // 6: prodvana.desired_state.model.Entity.desired_state:type_name -> prodvana.desired_state.model.State
	6,  // 7: prodvana.desired_state.model.Entity.target_state:type_name -> prodvana.desired_state.model.State
	7,  // 8: prodvana.desired_state.model.Entity.precondition_statuses:type_name -> prodvana.desired_state.model.ConditionState
	8,  // 9: prodvana.desired_state.model.Entity.status_explanations:type_name -> prodvana.desired_state.model.StatusExplanation
	9,  // 10: prodvana.desired_state.model.Entity.logs:type_name -> prodvana.desired_state.model.DebugLog
	10, // 11: prodvana.desired_state.model.Entity.action_explanation:type_name -> prodvana.desired_state.model.ActionExplanation
	11, // 12: prodvana.desired_state.model.Entity.last_update_timestamp:type_name -> google.protobuf.Timestamp
	11, // 13: prodvana.desired_state.model.Entity.last_fetched_timestamp:type_name -> google.protobuf.Timestamp
	11, // 14: prodvana.desired_state.model.Entity.last_applied_timestamp:type_name -> google.protobuf.Timestamp
	2,  // 15: prodvana.desired_state.model.Entity.dependencies:type_name -> prodvana.desired_state.model.Identifier
	12, // 16: prodvana.desired_state.model.Entity.lifecycle:type_name -> prodvana.common_config.TaskLifecycle
	13, // 17: prodvana.desired_state.model.Entity.missing_approval:type_name -> prodvana.desired_state.model.MissingApproval
	2,  // 18: prodvana.desired_state.model.EntityGraph.root:type_name -> prodvana.desired_state.model.Identifier
	0,  // 19: prodvana.desired_state.model.EntityGraph.entities:type_name -> prodvana.desired_state.model.Entity
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_prodvana_desired_state_model_entity_proto_init() }
func file_prodvana_desired_state_model_entity_proto_init() {
	if File_prodvana_desired_state_model_entity_proto != nil {
		return
	}
	file_prodvana_desired_state_model_desired_state_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_prodvana_desired_state_model_entity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodvana_desired_state_model_entity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityGraph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prodvana_desired_state_model_entity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_prodvana_desired_state_model_entity_proto_goTypes,
		DependencyIndexes: file_prodvana_desired_state_model_entity_proto_depIdxs,
		MessageInfos:      file_prodvana_desired_state_model_entity_proto_msgTypes,
	}.Build()
	File_prodvana_desired_state_model_entity_proto = out.File
	file_prodvana_desired_state_model_entity_proto_rawDesc = nil
	file_prodvana_desired_state_model_entity_proto_goTypes = nil
	file_prodvana_desired_state_model_entity_proto_depIdxs = nil
}
