// Code generated by protoc-gen-go-vtproto. DO NOT EDIT.
// protoc-gen-go-vtproto version: v0.6.0
// source: prodvana/desired_state/manager.proto

package desired_state

import (
	timestamppb1 "github.com/planetscale/vtprotobuf/types/known/timestamppb"
	maestro "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/desired_state/maestro"
	model "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/desired_state/model"
	service "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/service"
	proto "google.golang.org/protobuf/proto"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

func (m *SetDesiredStateReq) CloneVT() *SetDesiredStateReq {
	if m == nil {
		return (*SetDesiredStateReq)(nil)
	}
	r := new(SetDesiredStateReq)
	r.DesiredState = m.DesiredState.CloneVT()
	r.Rollback = m.Rollback
	r.BypassPreconditionsAndProtections = m.BypassPreconditionsAndProtections
	r.Source = m.Source
	r.SourceMetadata = m.SourceMetadata.CloneVT()
	r.ForceAsyncSetDesiredState = m.ForceAsyncSetDesiredState
	r.MaestroConfigOverride = m.MaestroConfigOverride.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *SetDesiredStateReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ValidateDesiredStateReq) CloneVT() *ValidateDesiredStateReq {
	if m == nil {
		return (*ValidateDesiredStateReq)(nil)
	}
	r := new(ValidateDesiredStateReq)
	r.DesiredState = m.DesiredState.CloneVT()
	r.Rollback = m.Rollback
	r.BypassPreconditionsAndProtections = m.BypassPreconditionsAndProtections
	r.LabelExpansionOnly = m.LabelExpansionOnly
	r.DisregardServiceVersions = m.DisregardServiceVersions
	if rhs := m.ServiceInstanceConfigs; rhs != nil {
		tmpContainer := make([]*service.CompiledServiceInstanceConfig, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.ServiceInstanceConfigs = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ValidateDesiredStateReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *SetDesiredStateResp) CloneVT() *SetDesiredStateResp {
	if m == nil {
		return (*SetDesiredStateResp)(nil)
	}
	r := new(SetDesiredStateResp)
	if m.IdOneof != nil {
		r.IdOneof = m.IdOneof.(interface {
			CloneVT() isSetDesiredStateResp_IdOneof
		}).CloneVT()
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *SetDesiredStateResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *SetDesiredStateResp_DesiredStateId) CloneVT() isSetDesiredStateResp_IdOneof {
	if m == nil {
		return (*SetDesiredStateResp_DesiredStateId)(nil)
	}
	r := new(SetDesiredStateResp_DesiredStateId)
	r.DesiredStateId = m.DesiredStateId
	return r
}

func (m *SetDesiredStateResp_ReleaseId) CloneVT() isSetDesiredStateResp_IdOneof {
	if m == nil {
		return (*SetDesiredStateResp_ReleaseId)(nil)
	}
	r := new(SetDesiredStateResp_ReleaseId)
	r.ReleaseId = m.ReleaseId
	return r
}

func (m *PreviewEntityGraphResp) CloneVT() *PreviewEntityGraphResp {
	if m == nil {
		return (*PreviewEntityGraphResp)(nil)
	}
	r := new(PreviewEntityGraphResp)
	r.EntityGraph = m.EntityGraph.CloneVT()
	r.DesiredStateId = m.DesiredStateId
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *PreviewEntityGraphResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetServiceDesiredStateConvergenceSummaryReq) CloneVT() *GetServiceDesiredStateConvergenceSummaryReq {
	if m == nil {
		return (*GetServiceDesiredStateConvergenceSummaryReq)(nil)
	}
	r := new(GetServiceDesiredStateConvergenceSummaryReq)
	r.Application = m.Application
	r.Service = m.Service
	r.FastNoDeprecatedFields = m.FastNoDeprecatedFields
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetServiceDesiredStateConvergenceSummaryReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *StatusExplanations) CloneVT() *StatusExplanations {
	if m == nil {
		return (*StatusExplanations)(nil)
	}
	r := new(StatusExplanations)
	if rhs := m.StatusExplanations; rhs != nil {
		tmpContainer := make([]*model.StatusExplanation, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.StatusExplanations = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *StatusExplanations) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *DebugLogs) CloneVT() *DebugLogs {
	if m == nil {
		return (*DebugLogs)(nil)
	}
	r := new(DebugLogs)
	if rhs := m.DebugLogs; rhs != nil {
		tmpContainer := make([]*model.DebugLog, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.DebugLogs = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *DebugLogs) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *PendingSetDesiredState) CloneVT() *PendingSetDesiredState {
	if m == nil {
		return (*PendingSetDesiredState)(nil)
	}
	r := new(PendingSetDesiredState)
	r.DesiredStateId = m.DesiredStateId
	r.CompiledDesiredState = m.CompiledDesiredState.CloneVT()
	r.TaskStatus = m.TaskStatus
	r.TaskResult = m.TaskResult.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *PendingSetDesiredState) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *DesiredStateSummary) CloneVT() *DesiredStateSummary {
	if m == nil {
		return (*DesiredStateSummary)(nil)
	}
	r := new(DesiredStateSummary)
	r.EntityGraph = m.EntityGraph.CloneVT()
	r.CreationTimestamp = (*timestamppb.Timestamp)((*timestamppb1.Timestamp)(m.CreationTimestamp).CloneVT())
	r.LastUpdateTimestamp = (*timestamppb.Timestamp)((*timestamppb1.Timestamp)(m.LastUpdateTimestamp).CloneVT())
	r.ReplacedTimestamp = (*timestamppb.Timestamp)((*timestamppb1.Timestamp)(m.ReplacedTimestamp).CloneVT())
	r.InputDesiredState = m.InputDesiredState.CloneVT()
	r.DesiredState = m.DesiredState.CloneVT()
	r.StartingState = m.StartingState.CloneVT()
	r.LastSeenState = m.LastSeenState.CloneVT()
	r.Status = m.Status
	r.Source = m.Source
	r.SourceMetadata = m.SourceMetadata.CloneVT()
	r.PendingSetDesiredState = m.PendingSetDesiredState.CloneVT()
	r.SetDesiredStateMetadata = m.SetDesiredStateMetadata.CloneVT()
	if rhs := m.Statuses; rhs != nil {
		tmpContainer := make(map[string]model.Status, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v
		}
		r.Statuses = tmpContainer
	}
	if rhs := m.PreconditionStatuses; rhs != nil {
		tmpContainer := make(map[string]*model.ConditionState, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.PreconditionStatuses = tmpContainer
	}
	if rhs := m.StatusExplanations; rhs != nil {
		tmpContainer := make(map[string]*StatusExplanations, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.StatusExplanations = tmpContainer
	}
	if rhs := m.DebugLogs; rhs != nil {
		tmpContainer := make(map[string]*DebugLogs, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.DebugLogs = tmpContainer
	}
	if rhs := m.ActionExplanations; rhs != nil {
		tmpContainer := make(map[string]*model.ActionExplanation, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.ActionExplanations = tmpContainer
	}
	if rhs := m.LastUpdateTimestamps; rhs != nil {
		tmpContainer := make(map[string]*timestamppb.Timestamp, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = (*timestamppb.Timestamp)((*timestamppb1.Timestamp)(v).CloneVT())
		}
		r.LastUpdateTimestamps = tmpContainer
	}
	if rhs := m.LastFetchedTimestamps; rhs != nil {
		tmpContainer := make(map[string]*timestamppb.Timestamp, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = (*timestamppb.Timestamp)((*timestamppb1.Timestamp)(v).CloneVT())
		}
		r.LastFetchedTimestamps = tmpContainer
	}
	if rhs := m.LastAppliedTimestamps; rhs != nil {
		tmpContainer := make(map[string]*timestamppb.Timestamp, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = (*timestamppb.Timestamp)((*timestamppb1.Timestamp)(v).CloneVT())
		}
		r.LastAppliedTimestamps = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *DesiredStateSummary) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetDesiredStateConvergenceReq) CloneVT() *GetDesiredStateConvergenceReq {
	if m == nil {
		return (*GetDesiredStateConvergenceReq)(nil)
	}
	r := new(GetDesiredStateConvergenceReq)
	r.DesiredStateId = m.DesiredStateId
	r.FastNoDeprecatedFields = m.FastNoDeprecatedFields
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetDesiredStateConvergenceReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetDesiredStateConvergenceSummaryResp) CloneVT() *GetDesiredStateConvergenceSummaryResp {
	if m == nil {
		return (*GetDesiredStateConvergenceSummaryResp)(nil)
	}
	r := new(GetDesiredStateConvergenceSummaryResp)
	r.Summary = m.Summary.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetDesiredStateConvergenceSummaryResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetServiceDesiredStateConvergenceSummaryResp) CloneVT() *GetServiceDesiredStateConvergenceSummaryResp {
	if m == nil {
		return (*GetServiceDesiredStateConvergenceSummaryResp)(nil)
	}
	r := new(GetServiceDesiredStateConvergenceSummaryResp)
	r.Summary = m.Summary.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetServiceDesiredStateConvergenceSummaryResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetServiceLastConvergedStateReq) CloneVT() *GetServiceLastConvergedStateReq {
	if m == nil {
		return (*GetServiceLastConvergedStateReq)(nil)
	}
	r := new(GetServiceLastConvergedStateReq)
	r.Application = m.Application
	r.Service = m.Service
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetServiceLastConvergedStateReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetServiceLastConvergedStateResp) CloneVT() *GetServiceLastConvergedStateResp {
	if m == nil {
		return (*GetServiceLastConvergedStateResp)(nil)
	}
	r := new(GetServiceLastConvergedStateResp)
	if rhs := m.ServiceInstanceStates; rhs != nil {
		tmpContainer := make([]*model.ServiceInstanceState, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.ServiceInstanceStates = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetServiceLastConvergedStateResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetServiceDesiredStateHistoryReq) CloneVT() *GetServiceDesiredStateHistoryReq {
	if m == nil {
		return (*GetServiceDesiredStateHistoryReq)(nil)
	}
	r := new(GetServiceDesiredStateHistoryReq)
	r.Application = m.Application
	r.Service = m.Service
	r.PageToken = m.PageToken
	r.PageSize = m.PageSize
	r.FastNoDeprecatedFields = m.FastNoDeprecatedFields
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetServiceDesiredStateHistoryReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetServiceDesiredStateHistoryResp) CloneVT() *GetServiceDesiredStateHistoryResp {
	if m == nil {
		return (*GetServiceDesiredStateHistoryResp)(nil)
	}
	r := new(GetServiceDesiredStateHistoryResp)
	r.NextPageToken = m.NextPageToken
	if rhs := m.DesiredStates; rhs != nil {
		tmpContainer := make([]*DesiredStateSummary, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.DesiredStates = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetServiceDesiredStateHistoryResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetDesiredStateReq) CloneVT() *GetDesiredStateReq {
	if m == nil {
		return (*GetDesiredStateReq)(nil)
	}
	r := new(GetDesiredStateReq)
	r.DesiredStateId = m.DesiredStateId
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetDesiredStateReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetDesiredStateResp) CloneVT() *GetDesiredStateResp {
	if m == nil {
		return (*GetDesiredStateResp)(nil)
	}
	r := new(GetDesiredStateResp)
	r.DesiredState = m.DesiredState.CloneVT()
	r.CompiledDesiredState = m.CompiledDesiredState.CloneVT()
	r.SetDesiredStateMetadata = m.SetDesiredStateMetadata.CloneVT()
	r.CreationTimestamp = (*timestamppb.Timestamp)((*timestamppb1.Timestamp)(m.CreationTimestamp).CloneVT())
	r.Source = m.Source
	r.SourceMetadata = m.SourceMetadata.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetDesiredStateResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetDesiredStateGraphReq_LiteEntitiesFilter) CloneVT() *GetDesiredStateGraphReq_LiteEntitiesFilter {
	if m == nil {
		return (*GetDesiredStateGraphReq_LiteEntitiesFilter)(nil)
	}
	r := new(GetDesiredStateGraphReq_LiteEntitiesFilter)
	if rhs := m.Types; rhs != nil {
		tmpContainer := make([]model.Type, len(rhs))
		copy(tmpContainer, rhs)
		r.Types = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetDesiredStateGraphReq_LiteEntitiesFilter) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetDesiredStateGraphReq_QueryByService) CloneVT() *GetDesiredStateGraphReq_QueryByService {
	if m == nil {
		return (*GetDesiredStateGraphReq_QueryByService)(nil)
	}
	r := new(GetDesiredStateGraphReq_QueryByService)
	r.Application = m.Application
	r.Service = m.Service
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetDesiredStateGraphReq_QueryByService) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetDesiredStateGraphReq_DepthOverrideByStatus) CloneVT() *GetDesiredStateGraphReq_DepthOverrideByStatus {
	if m == nil {
		return (*GetDesiredStateGraphReq_DepthOverrideByStatus)(nil)
	}
	r := new(GetDesiredStateGraphReq_DepthOverrideByStatus)
	r.Status = m.Status
	r.Depth = m.Depth
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetDesiredStateGraphReq_DepthOverrideByStatus) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetDesiredStateGraphReq) CloneVT() *GetDesiredStateGraphReq {
	if m == nil {
		return (*GetDesiredStateGraphReq)(nil)
	}
	r := new(GetDesiredStateGraphReq)
	r.RequiredAnnotations = m.RequiredAnnotations.CloneVT()
	r.Depth = m.Depth
	r.IncludeDesiredStateTimestamps = m.IncludeDesiredStateTimestamps
	r.IncludeDesiredStateMetadata = m.IncludeDesiredStateMetadata
	r.IncludeParents = m.IncludeParents
	r.LiteEntitiesFilter = m.LiteEntitiesFilter.CloneVT()
	if m.Query != nil {
		r.Query = m.Query.(interface {
			CloneVT() isGetDesiredStateGraphReq_Query
		}).CloneVT()
	}
	if rhs := m.Types; rhs != nil {
		tmpContainer := make([]model.Type, len(rhs))
		copy(tmpContainer, rhs)
		r.Types = tmpContainer
	}
	if rhs := m.RequiredEntityNames; rhs != nil {
		tmpContainer := make([]string, len(rhs))
		copy(tmpContainer, rhs)
		r.RequiredEntityNames = tmpContainer
	}
	if rhs := m.DepthOverridesByStatus; rhs != nil {
		tmpContainer := make([]*GetDesiredStateGraphReq_DepthOverrideByStatus, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.DepthOverridesByStatus = tmpContainer
	}
	if rhs := m.ExcludeDependencyType; rhs != nil {
		tmpContainer := make([]model.DependencyType, len(rhs))
		copy(tmpContainer, rhs)
		r.ExcludeDependencyType = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetDesiredStateGraphReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetDesiredStateGraphReq_DesiredStateId) CloneVT() isGetDesiredStateGraphReq_Query {
	if m == nil {
		return (*GetDesiredStateGraphReq_DesiredStateId)(nil)
	}
	r := new(GetDesiredStateGraphReq_DesiredStateId)
	r.DesiredStateId = m.DesiredStateId
	return r
}

func (m *GetDesiredStateGraphReq_QueryByService_) CloneVT() isGetDesiredStateGraphReq_Query {
	if m == nil {
		return (*GetDesiredStateGraphReq_QueryByService_)(nil)
	}
	r := new(GetDesiredStateGraphReq_QueryByService_)
	r.QueryByService = m.QueryByService.CloneVT()
	return r
}

func (m *DesiredStateTimestamps) CloneVT() *DesiredStateTimestamps {
	if m == nil {
		return (*DesiredStateTimestamps)(nil)
	}
	r := new(DesiredStateTimestamps)
	r.CreationTimestamp = (*timestamppb.Timestamp)((*timestamppb1.Timestamp)(m.CreationTimestamp).CloneVT())
	r.LastUpdateTimestamp = (*timestamppb.Timestamp)((*timestamppb1.Timestamp)(m.LastUpdateTimestamp).CloneVT())
	r.ReplacedTimestamp = (*timestamppb.Timestamp)((*timestamppb1.Timestamp)(m.ReplacedTimestamp).CloneVT())
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *DesiredStateTimestamps) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetDesiredStateGraphResp) CloneVT() *GetDesiredStateGraphResp {
	if m == nil {
		return (*GetDesiredStateGraphResp)(nil)
	}
	r := new(GetDesiredStateGraphResp)
	r.EntityGraph = m.EntityGraph.CloneVT()
	r.PendingSetDesiredState = m.PendingSetDesiredState.CloneVT()
	r.Timestamps = m.Timestamps.CloneVT()
	r.SetDesiredStateMetadata = m.SetDesiredStateMetadata.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetDesiredStateGraphResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetServiceLatestDesiredStateIdReq) CloneVT() *GetServiceLatestDesiredStateIdReq {
	if m == nil {
		return (*GetServiceLatestDesiredStateIdReq)(nil)
	}
	r := new(GetServiceLatestDesiredStateIdReq)
	r.Application = m.Application
	r.Service = m.Service
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetServiceLatestDesiredStateIdReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetServiceLatestDesiredStateIdResp) CloneVT() *GetServiceLatestDesiredStateIdResp {
	if m == nil {
		return (*GetServiceLatestDesiredStateIdResp)(nil)
	}
	r := new(GetServiceLatestDesiredStateIdResp)
	r.DesiredStateId = m.DesiredStateId
	r.PendingSetDesiredState = m.PendingSetDesiredState.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetServiceLatestDesiredStateIdResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetServiceDesiredStateIdHistoryReq) CloneVT() *GetServiceDesiredStateIdHistoryReq {
	if m == nil {
		return (*GetServiceDesiredStateIdHistoryReq)(nil)
	}
	r := new(GetServiceDesiredStateIdHistoryReq)
	r.Application = m.Application
	r.Service = m.Service
	r.PageToken = m.PageToken
	r.PageSize = m.PageSize
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetServiceDesiredStateIdHistoryReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetServiceDesiredStateIdHistoryResp) CloneVT() *GetServiceDesiredStateIdHistoryResp {
	if m == nil {
		return (*GetServiceDesiredStateIdHistoryResp)(nil)
	}
	r := new(GetServiceDesiredStateIdHistoryResp)
	r.NextPageToken = m.NextPageToken
	if rhs := m.DesiredStateIds; rhs != nil {
		tmpContainer := make([]string, len(rhs))
		copy(tmpContainer, rhs)
		r.DesiredStateIds = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetServiceDesiredStateIdHistoryResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ValidateDesiredStateResp) CloneVT() *ValidateDesiredStateResp {
	if m == nil {
		return (*ValidateDesiredStateResp)(nil)
	}
	r := new(ValidateDesiredStateResp)
	r.DesiredState = m.DesiredState.CloneVT()
	r.CompiledDesiredState = m.CompiledDesiredState.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ValidateDesiredStateResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *SetManualApprovalReq) CloneVT() *SetManualApprovalReq {
	if m == nil {
		return (*SetManualApprovalReq)(nil)
	}
	r := new(SetManualApprovalReq)
	r.DesiredStateId = m.DesiredStateId
	r.Topic = m.Topic
	r.Reject = m.Reject
	r.SignalType = m.SignalType
	r.Source = m.Source
	r.SourceMetadata = m.SourceMetadata.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *SetManualApprovalReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *SetManualApprovalResp) CloneVT() *SetManualApprovalResp {
	if m == nil {
		return (*SetManualApprovalResp)(nil)
	}
	r := new(SetManualApprovalResp)
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *SetManualApprovalResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *PromoteDeliveryReq) CloneVT() *PromoteDeliveryReq {
	if m == nil {
		return (*PromoteDeliveryReq)(nil)
	}
	r := new(PromoteDeliveryReq)
	r.DesiredStateId = m.DesiredStateId
	r.Stage = m.Stage
	r.Full = m.Full
	r.Reject = m.Reject
	r.Source = m.Source
	r.CallSource = m.CallSource
	r.SourceMetadata = m.SourceMetadata.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *PromoteDeliveryReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *PromoteDeliveryResp) CloneVT() *PromoteDeliveryResp {
	if m == nil {
		return (*PromoteDeliveryResp)(nil)
	}
	r := new(PromoteDeliveryResp)
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *PromoteDeliveryResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *BypassProtectionReq) CloneVT() *BypassProtectionReq {
	if m == nil {
		return (*BypassProtectionReq)(nil)
	}
	r := new(BypassProtectionReq)
	r.DesiredStateId = m.DesiredStateId
	r.Source = m.Source
	r.CallSource = m.CallSource
	r.SourceMetadata = m.SourceMetadata.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *BypassProtectionReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *BypassProtectionResp) CloneVT() *BypassProtectionResp {
	if m == nil {
		return (*BypassProtectionResp)(nil)
	}
	r := new(BypassProtectionResp)
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *BypassProtectionResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *BypassDependenciesReq) CloneVT() *BypassDependenciesReq {
	if m == nil {
		return (*BypassDependenciesReq)(nil)
	}
	r := new(BypassDependenciesReq)
	r.DesiredStateId = m.DesiredStateId
	r.Source = m.Source
	r.CallSource = m.CallSource
	r.SourceMetadata = m.SourceMetadata.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *BypassDependenciesReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *BypassDependenciesResp) CloneVT() *BypassDependenciesResp {
	if m == nil {
		return (*BypassDependenciesResp)(nil)
	}
	r := new(BypassDependenciesResp)
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *BypassDependenciesResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *BypassConcurrencyLimitReq) CloneVT() *BypassConcurrencyLimitReq {
	if m == nil {
		return (*BypassConcurrencyLimitReq)(nil)
	}
	r := new(BypassConcurrencyLimitReq)
	r.DesiredStateId = m.DesiredStateId
	r.Source = m.Source
	r.CallSource = m.CallSource
	r.SourceMetadata = m.SourceMetadata.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *BypassConcurrencyLimitReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *BypassConcurrencyLimitResp) CloneVT() *BypassConcurrencyLimitResp {
	if m == nil {
		return (*BypassConcurrencyLimitResp)(nil)
	}
	r := new(BypassConcurrencyLimitResp)
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *BypassConcurrencyLimitResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ListMaestroReleasesReq) CloneVT() *ListMaestroReleasesReq {
	if m == nil {
		return (*ListMaestroReleasesReq)(nil)
	}
	r := new(ListMaestroReleasesReq)
	r.EntityId = m.EntityId.CloneVT()
	r.Descending = m.Descending
	r.StartingReleaseId = m.StartingReleaseId
	r.PageToken = m.PageToken
	r.PageSize = m.PageSize
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ListMaestroReleasesReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ListMaestroReleasesResp) CloneVT() *ListMaestroReleasesResp {
	if m == nil {
		return (*ListMaestroReleasesResp)(nil)
	}
	r := new(ListMaestroReleasesResp)
	r.NextPageToken = m.NextPageToken
	if rhs := m.MaestroReleases; rhs != nil {
		tmpContainer := make([]*maestro.MaestroRelease, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.MaestroReleases = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ListMaestroReleasesResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetMaestroReleaseReq) CloneVT() *GetMaestroReleaseReq {
	if m == nil {
		return (*GetMaestroReleaseReq)(nil)
	}
	r := new(GetMaestroReleaseReq)
	r.ReleaseId = m.ReleaseId
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetMaestroReleaseReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetMaestroReleaseResp) CloneVT() *GetMaestroReleaseResp {
	if m == nil {
		return (*GetMaestroReleaseResp)(nil)
	}
	r := new(GetMaestroReleaseResp)
	r.MaestroRelease = m.MaestroRelease.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetMaestroReleaseResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ListCombinedReleasesReq) CloneVT() *ListCombinedReleasesReq {
	if m == nil {
		return (*ListCombinedReleasesReq)(nil)
	}
	r := new(ListCombinedReleasesReq)
	r.EntityId = m.EntityId.CloneVT()
	r.Descending = m.Descending
	r.PageToken = m.PageToken
	r.PageSize = m.PageSize
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ListCombinedReleasesReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ListServiceCombinedReleasesReq) CloneVT() *ListServiceCombinedReleasesReq {
	if m == nil {
		return (*ListServiceCombinedReleasesReq)(nil)
	}
	r := new(ListServiceCombinedReleasesReq)
	r.Application = m.Application
	r.Service = m.Service
	r.Descending = m.Descending
	r.PageToken = m.PageToken
	r.PageSize = m.PageSize
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ListServiceCombinedReleasesReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ListCombinedReleasesResp_Release) CloneVT() *ListCombinedReleasesResp_Release {
	if m == nil {
		return (*ListCombinedReleasesResp_Release)(nil)
	}
	r := new(ListCombinedReleasesResp_Release)
	r.CreationTimestamp = (*timestamppb.Timestamp)((*timestamppb1.Timestamp)(m.CreationTimestamp).CloneVT())
	if m.ReleaseOneof != nil {
		r.ReleaseOneof = m.ReleaseOneof.(interface {
			CloneVT() isListCombinedReleasesResp_Release_ReleaseOneof
		}).CloneVT()
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ListCombinedReleasesResp_Release) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ListCombinedReleasesResp_Release_DesiredStateId) CloneVT() isListCombinedReleasesResp_Release_ReleaseOneof {
	if m == nil {
		return (*ListCombinedReleasesResp_Release_DesiredStateId)(nil)
	}
	r := new(ListCombinedReleasesResp_Release_DesiredStateId)
	r.DesiredStateId = m.DesiredStateId
	return r
}

func (m *ListCombinedReleasesResp_Release_ReleaseId) CloneVT() isListCombinedReleasesResp_Release_ReleaseOneof {
	if m == nil {
		return (*ListCombinedReleasesResp_Release_ReleaseId)(nil)
	}
	r := new(ListCombinedReleasesResp_Release_ReleaseId)
	r.ReleaseId = m.ReleaseId
	return r
}

func (m *ListCombinedReleasesResp) CloneVT() *ListCombinedReleasesResp {
	if m == nil {
		return (*ListCombinedReleasesResp)(nil)
	}
	r := new(ListCombinedReleasesResp)
	r.NextPageToken = m.NextPageToken
	if rhs := m.Releases; rhs != nil {
		tmpContainer := make([]*ListCombinedReleasesResp_Release, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.Releases = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ListCombinedReleasesResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetLatestCombinedReleaseDesiredStateReq) CloneVT() *GetLatestCombinedReleaseDesiredStateReq {
	if m == nil {
		return (*GetLatestCombinedReleaseDesiredStateReq)(nil)
	}
	r := new(GetLatestCombinedReleaseDesiredStateReq)
	r.EntityId = m.EntityId.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetLatestCombinedReleaseDesiredStateReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetServiceLatestCombinedReleaseDesiredStateReq) CloneVT() *GetServiceLatestCombinedReleaseDesiredStateReq {
	if m == nil {
		return (*GetServiceLatestCombinedReleaseDesiredStateReq)(nil)
	}
	r := new(GetServiceLatestCombinedReleaseDesiredStateReq)
	r.Application = m.Application
	r.Service = m.Service
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetServiceLatestCombinedReleaseDesiredStateReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetLatestCombinedReleaseDesiredStateResp) CloneVT() *GetLatestCombinedReleaseDesiredStateResp {
	if m == nil {
		return (*GetLatestCombinedReleaseDesiredStateResp)(nil)
	}
	r := new(GetLatestCombinedReleaseDesiredStateResp)
	r.InputDesiredState = m.InputDesiredState.CloneVT()
	r.CompiledDesiredState = m.CompiledDesiredState.CloneVT()
	r.SetDesiredStateMetadata = m.SetDesiredStateMetadata.CloneVT()
	r.CreationTimestamp = (*timestamppb.Timestamp)((*timestamppb1.Timestamp)(m.CreationTimestamp).CloneVT())
	r.Source = m.Source
	r.SourceMetadata = m.SourceMetadata.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetLatestCombinedReleaseDesiredStateResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (this *SetDesiredStateReq) StableEqualVT(that *SetDesiredStateReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.DesiredState.StableEqualVT(that.DesiredState) {
		return false
	}
	if this.Rollback != that.Rollback {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if !this.SourceMetadata.StableEqualVT(that.SourceMetadata) {
		return false
	}
	if this.ForceAsyncSetDesiredState != that.ForceAsyncSetDesiredState {
		return false
	}
	if this.BypassPreconditionsAndProtections != that.BypassPreconditionsAndProtections {
		return false
	}
	if !this.MaestroConfigOverride.StableEqualVT(that.MaestroConfigOverride) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *SetDesiredStateReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*SetDesiredStateReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *SetDesiredStateReq) EqualVT(that *SetDesiredStateReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.DesiredState.EqualVT(that.DesiredState) {
		return false
	}
	if this.Rollback != that.Rollback {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if !this.SourceMetadata.EqualVT(that.SourceMetadata) {
		return false
	}
	if this.ForceAsyncSetDesiredState != that.ForceAsyncSetDesiredState {
		return false
	}
	if this.BypassPreconditionsAndProtections != that.BypassPreconditionsAndProtections {
		return false
	}
	if !this.MaestroConfigOverride.EqualVT(that.MaestroConfigOverride) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *SetDesiredStateReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*SetDesiredStateReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ValidateDesiredStateReq) StableEqualVT(that *ValidateDesiredStateReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.DesiredState.StableEqualVT(that.DesiredState) {
		return false
	}
	if this.Rollback != that.Rollback {
		return false
	}
	if len(this.ServiceInstanceConfigs) != len(that.ServiceInstanceConfigs) {
		return false
	}
	for i, vx := range this.ServiceInstanceConfigs {
		vy := that.ServiceInstanceConfigs[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &service.CompiledServiceInstanceConfig{}
			}
			if q == nil {
				q = &service.CompiledServiceInstanceConfig{}
			}
			if !p.StableEqualVT(q) {
				return false
			}
		}
	}
	if this.LabelExpansionOnly != that.LabelExpansionOnly {
		return false
	}
	if this.DisregardServiceVersions != that.DisregardServiceVersions {
		return false
	}
	if this.BypassPreconditionsAndProtections != that.BypassPreconditionsAndProtections {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ValidateDesiredStateReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ValidateDesiredStateReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *ValidateDesiredStateReq) EqualVT(that *ValidateDesiredStateReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.DesiredState.EqualVT(that.DesiredState) {
		return false
	}
	if this.Rollback != that.Rollback {
		return false
	}
	if len(this.ServiceInstanceConfigs) != len(that.ServiceInstanceConfigs) {
		return false
	}
	for i, vx := range this.ServiceInstanceConfigs {
		vy := that.ServiceInstanceConfigs[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &service.CompiledServiceInstanceConfig{}
			}
			if q == nil {
				q = &service.CompiledServiceInstanceConfig{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	if this.LabelExpansionOnly != that.LabelExpansionOnly {
		return false
	}
	if this.DisregardServiceVersions != that.DisregardServiceVersions {
		return false
	}
	if this.BypassPreconditionsAndProtections != that.BypassPreconditionsAndProtections {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ValidateDesiredStateReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ValidateDesiredStateReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *SetDesiredStateResp) StableEqualVT(that *SetDesiredStateResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.IdOneof == nil && that.IdOneof != nil {
		return false
	} else if this.IdOneof != nil {
		if that.IdOneof == nil {
			return false
		}
		if !this.IdOneof.(interface {
			StableEqualVT(isSetDesiredStateResp_IdOneof) bool
		}).StableEqualVT(that.IdOneof) {
			return false
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *SetDesiredStateResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*SetDesiredStateResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *SetDesiredStateResp_DesiredStateId) StableEqualVT(thatIface isSetDesiredStateResp_IdOneof) bool {
	that, ok := thatIface.(*SetDesiredStateResp_DesiredStateId)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	return true
}

func (this *SetDesiredStateResp_ReleaseId) StableEqualVT(thatIface isSetDesiredStateResp_IdOneof) bool {
	that, ok := thatIface.(*SetDesiredStateResp_ReleaseId)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if this.ReleaseId != that.ReleaseId {
		return false
	}
	return true
}

func (this *SetDesiredStateResp) EqualVT(that *SetDesiredStateResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.IdOneof == nil && that.IdOneof != nil {
		return false
	} else if this.IdOneof != nil {
		if that.IdOneof == nil {
			return false
		}
		if !this.IdOneof.(interface {
			EqualVT(isSetDesiredStateResp_IdOneof) bool
		}).EqualVT(that.IdOneof) {
			return false
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *SetDesiredStateResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*SetDesiredStateResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *SetDesiredStateResp_DesiredStateId) EqualVT(thatIface isSetDesiredStateResp_IdOneof) bool {
	that, ok := thatIface.(*SetDesiredStateResp_DesiredStateId)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	return true
}

func (this *SetDesiredStateResp_ReleaseId) EqualVT(thatIface isSetDesiredStateResp_IdOneof) bool {
	that, ok := thatIface.(*SetDesiredStateResp_ReleaseId)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if this.ReleaseId != that.ReleaseId {
		return false
	}
	return true
}

func (this *PreviewEntityGraphResp) StableEqualVT(that *PreviewEntityGraphResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.EntityGraph.StableEqualVT(that.EntityGraph) {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *PreviewEntityGraphResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*PreviewEntityGraphResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *PreviewEntityGraphResp) EqualVT(that *PreviewEntityGraphResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.EntityGraph.EqualVT(that.EntityGraph) {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *PreviewEntityGraphResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*PreviewEntityGraphResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetServiceDesiredStateConvergenceSummaryReq) StableEqualVT(that *GetServiceDesiredStateConvergenceSummaryReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Service != that.Service {
		return false
	}
	if this.FastNoDeprecatedFields != that.FastNoDeprecatedFields {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceDesiredStateConvergenceSummaryReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceDesiredStateConvergenceSummaryReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetServiceDesiredStateConvergenceSummaryReq) EqualVT(that *GetServiceDesiredStateConvergenceSummaryReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Service != that.Service {
		return false
	}
	if this.FastNoDeprecatedFields != that.FastNoDeprecatedFields {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceDesiredStateConvergenceSummaryReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceDesiredStateConvergenceSummaryReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *StatusExplanations) StableEqualVT(that *StatusExplanations) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.StatusExplanations) != len(that.StatusExplanations) {
		return false
	}
	for i, vx := range this.StatusExplanations {
		vy := that.StatusExplanations[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &model.StatusExplanation{}
			}
			if q == nil {
				q = &model.StatusExplanation{}
			}
			if !p.StableEqualVT(q) {
				return false
			}
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *StatusExplanations) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*StatusExplanations)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *StatusExplanations) EqualVT(that *StatusExplanations) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.StatusExplanations) != len(that.StatusExplanations) {
		return false
	}
	for i, vx := range this.StatusExplanations {
		vy := that.StatusExplanations[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &model.StatusExplanation{}
			}
			if q == nil {
				q = &model.StatusExplanation{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *StatusExplanations) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*StatusExplanations)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *DebugLogs) StableEqualVT(that *DebugLogs) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.DebugLogs) != len(that.DebugLogs) {
		return false
	}
	for i, vx := range this.DebugLogs {
		vy := that.DebugLogs[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &model.DebugLog{}
			}
			if q == nil {
				q = &model.DebugLog{}
			}
			if !p.StableEqualVT(q) {
				return false
			}
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *DebugLogs) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*DebugLogs)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *DebugLogs) EqualVT(that *DebugLogs) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.DebugLogs) != len(that.DebugLogs) {
		return false
	}
	for i, vx := range this.DebugLogs {
		vy := that.DebugLogs[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &model.DebugLog{}
			}
			if q == nil {
				q = &model.DebugLog{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *DebugLogs) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*DebugLogs)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *PendingSetDesiredState) StableEqualVT(that *PendingSetDesiredState) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.CompiledDesiredState.StableEqualVT(that.CompiledDesiredState) {
		return false
	}
	if this.TaskStatus != that.TaskStatus {
		return false
	}
	if !this.TaskResult.StableEqualVT(that.TaskResult) {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *PendingSetDesiredState) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*PendingSetDesiredState)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *PendingSetDesiredState) EqualVT(that *PendingSetDesiredState) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.CompiledDesiredState.EqualVT(that.CompiledDesiredState) {
		return false
	}
	if this.TaskStatus != that.TaskStatus {
		return false
	}
	if !this.TaskResult.EqualVT(that.TaskResult) {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *PendingSetDesiredState) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*PendingSetDesiredState)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *DesiredStateSummary) StableEqualVT(that *DesiredStateSummary) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.StartingState.StableEqualVT(that.StartingState) {
		return false
	}
	if !this.LastSeenState.StableEqualVT(that.LastSeenState) {
		return false
	}
	if !this.DesiredState.StableEqualVT(that.DesiredState) {
		return false
	}
	if len(this.Statuses) != len(that.Statuses) {
		return false
	}
	for i, vx := range this.Statuses {
		vy, ok := that.Statuses[i]
		if !ok {
			return false
		}
		if vx != vy {
			return false
		}
	}
	if !(*timestamppb1.Timestamp)(this.CreationTimestamp).StableEqualVT((*timestamppb1.Timestamp)(that.CreationTimestamp)) {
		return false
	}
	if !(*timestamppb1.Timestamp)(this.LastUpdateTimestamp).StableEqualVT((*timestamppb1.Timestamp)(that.LastUpdateTimestamp)) {
		return false
	}
	if !(*timestamppb1.Timestamp)(this.ReplacedTimestamp).StableEqualVT((*timestamppb1.Timestamp)(that.ReplacedTimestamp)) {
		return false
	}
	if len(this.PreconditionStatuses) != len(that.PreconditionStatuses) {
		return false
	}
	for i, vx := range this.PreconditionStatuses {
		vy, ok := that.PreconditionStatuses[i]
		if !ok {
			return false
		}
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &model.ConditionState{}
			}
			if q == nil {
				q = &model.ConditionState{}
			}
			if !p.StableEqualVT(q) {
				return false
			}
		}
	}
	if len(this.StatusExplanations) != len(that.StatusExplanations) {
		return false
	}
	for i, vx := range this.StatusExplanations {
		vy, ok := that.StatusExplanations[i]
		if !ok {
			return false
		}
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &StatusExplanations{}
			}
			if q == nil {
				q = &StatusExplanations{}
			}
			if !p.StableEqualVT(q) {
				return false
			}
		}
	}
	if len(this.DebugLogs) != len(that.DebugLogs) {
		return false
	}
	for i, vx := range this.DebugLogs {
		vy, ok := that.DebugLogs[i]
		if !ok {
			return false
		}
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &DebugLogs{}
			}
			if q == nil {
				q = &DebugLogs{}
			}
			if !p.StableEqualVT(q) {
				return false
			}
		}
	}
	if len(this.ActionExplanations) != len(that.ActionExplanations) {
		return false
	}
	for i, vx := range this.ActionExplanations {
		vy, ok := that.ActionExplanations[i]
		if !ok {
			return false
		}
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &model.ActionExplanation{}
			}
			if q == nil {
				q = &model.ActionExplanation{}
			}
			if !p.StableEqualVT(q) {
				return false
			}
		}
	}
	if len(this.LastUpdateTimestamps) != len(that.LastUpdateTimestamps) {
		return false
	}
	for i, vx := range this.LastUpdateTimestamps {
		vy, ok := that.LastUpdateTimestamps[i]
		if !ok {
			return false
		}
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &timestamppb.Timestamp{}
			}
			if q == nil {
				q = &timestamppb.Timestamp{}
			}
			if !(*timestamppb1.Timestamp)(p).StableEqualVT((*timestamppb1.Timestamp)(q)) {
				return false
			}
		}
	}
	if len(this.LastFetchedTimestamps) != len(that.LastFetchedTimestamps) {
		return false
	}
	for i, vx := range this.LastFetchedTimestamps {
		vy, ok := that.LastFetchedTimestamps[i]
		if !ok {
			return false
		}
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &timestamppb.Timestamp{}
			}
			if q == nil {
				q = &timestamppb.Timestamp{}
			}
			if !(*timestamppb1.Timestamp)(p).StableEqualVT((*timestamppb1.Timestamp)(q)) {
				return false
			}
		}
	}
	if len(this.LastAppliedTimestamps) != len(that.LastAppliedTimestamps) {
		return false
	}
	for i, vx := range this.LastAppliedTimestamps {
		vy, ok := that.LastAppliedTimestamps[i]
		if !ok {
			return false
		}
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &timestamppb.Timestamp{}
			}
			if q == nil {
				q = &timestamppb.Timestamp{}
			}
			if !(*timestamppb1.Timestamp)(p).StableEqualVT((*timestamppb1.Timestamp)(q)) {
				return false
			}
		}
	}
	if !this.EntityGraph.StableEqualVT(that.EntityGraph) {
		return false
	}
	if !this.InputDesiredState.StableEqualVT(that.InputDesiredState) {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if !this.SourceMetadata.StableEqualVT(that.SourceMetadata) {
		return false
	}
	if this.Status != that.Status {
		return false
	}
	if !this.PendingSetDesiredState.StableEqualVT(that.PendingSetDesiredState) {
		return false
	}
	if !this.SetDesiredStateMetadata.StableEqualVT(that.SetDesiredStateMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *DesiredStateSummary) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*DesiredStateSummary)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *DesiredStateSummary) EqualVT(that *DesiredStateSummary) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.StartingState.EqualVT(that.StartingState) {
		return false
	}
	if !this.LastSeenState.EqualVT(that.LastSeenState) {
		return false
	}
	if !this.DesiredState.EqualVT(that.DesiredState) {
		return false
	}
	if len(this.Statuses) != len(that.Statuses) {
		return false
	}
	for i, vx := range this.Statuses {
		vy, ok := that.Statuses[i]
		if !ok {
			return false
		}
		if vx != vy {
			return false
		}
	}
	if !(*timestamppb1.Timestamp)(this.CreationTimestamp).EqualVT((*timestamppb1.Timestamp)(that.CreationTimestamp)) {
		return false
	}
	if !(*timestamppb1.Timestamp)(this.LastUpdateTimestamp).EqualVT((*timestamppb1.Timestamp)(that.LastUpdateTimestamp)) {
		return false
	}
	if !(*timestamppb1.Timestamp)(this.ReplacedTimestamp).EqualVT((*timestamppb1.Timestamp)(that.ReplacedTimestamp)) {
		return false
	}
	if len(this.PreconditionStatuses) != len(that.PreconditionStatuses) {
		return false
	}
	for i, vx := range this.PreconditionStatuses {
		vy, ok := that.PreconditionStatuses[i]
		if !ok {
			return false
		}
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &model.ConditionState{}
			}
			if q == nil {
				q = &model.ConditionState{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	if len(this.StatusExplanations) != len(that.StatusExplanations) {
		return false
	}
	for i, vx := range this.StatusExplanations {
		vy, ok := that.StatusExplanations[i]
		if !ok {
			return false
		}
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &StatusExplanations{}
			}
			if q == nil {
				q = &StatusExplanations{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	if len(this.DebugLogs) != len(that.DebugLogs) {
		return false
	}
	for i, vx := range this.DebugLogs {
		vy, ok := that.DebugLogs[i]
		if !ok {
			return false
		}
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &DebugLogs{}
			}
			if q == nil {
				q = &DebugLogs{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	if len(this.ActionExplanations) != len(that.ActionExplanations) {
		return false
	}
	for i, vx := range this.ActionExplanations {
		vy, ok := that.ActionExplanations[i]
		if !ok {
			return false
		}
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &model.ActionExplanation{}
			}
			if q == nil {
				q = &model.ActionExplanation{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	if len(this.LastUpdateTimestamps) != len(that.LastUpdateTimestamps) {
		return false
	}
	for i, vx := range this.LastUpdateTimestamps {
		vy, ok := that.LastUpdateTimestamps[i]
		if !ok {
			return false
		}
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &timestamppb.Timestamp{}
			}
			if q == nil {
				q = &timestamppb.Timestamp{}
			}
			if !(*timestamppb1.Timestamp)(p).EqualVT((*timestamppb1.Timestamp)(q)) {
				return false
			}
		}
	}
	if len(this.LastFetchedTimestamps) != len(that.LastFetchedTimestamps) {
		return false
	}
	for i, vx := range this.LastFetchedTimestamps {
		vy, ok := that.LastFetchedTimestamps[i]
		if !ok {
			return false
		}
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &timestamppb.Timestamp{}
			}
			if q == nil {
				q = &timestamppb.Timestamp{}
			}
			if !(*timestamppb1.Timestamp)(p).EqualVT((*timestamppb1.Timestamp)(q)) {
				return false
			}
		}
	}
	if len(this.LastAppliedTimestamps) != len(that.LastAppliedTimestamps) {
		return false
	}
	for i, vx := range this.LastAppliedTimestamps {
		vy, ok := that.LastAppliedTimestamps[i]
		if !ok {
			return false
		}
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &timestamppb.Timestamp{}
			}
			if q == nil {
				q = &timestamppb.Timestamp{}
			}
			if !(*timestamppb1.Timestamp)(p).EqualVT((*timestamppb1.Timestamp)(q)) {
				return false
			}
		}
	}
	if !this.EntityGraph.EqualVT(that.EntityGraph) {
		return false
	}
	if !this.InputDesiredState.EqualVT(that.InputDesiredState) {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if !this.SourceMetadata.EqualVT(that.SourceMetadata) {
		return false
	}
	if this.Status != that.Status {
		return false
	}
	if !this.PendingSetDesiredState.EqualVT(that.PendingSetDesiredState) {
		return false
	}
	if !this.SetDesiredStateMetadata.EqualVT(that.SetDesiredStateMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *DesiredStateSummary) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*DesiredStateSummary)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetDesiredStateConvergenceReq) StableEqualVT(that *GetDesiredStateConvergenceReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	if this.FastNoDeprecatedFields != that.FastNoDeprecatedFields {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetDesiredStateConvergenceReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetDesiredStateConvergenceReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetDesiredStateConvergenceReq) EqualVT(that *GetDesiredStateConvergenceReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	if this.FastNoDeprecatedFields != that.FastNoDeprecatedFields {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetDesiredStateConvergenceReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetDesiredStateConvergenceReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetDesiredStateConvergenceSummaryResp) StableEqualVT(that *GetDesiredStateConvergenceSummaryResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.Summary.StableEqualVT(that.Summary) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetDesiredStateConvergenceSummaryResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetDesiredStateConvergenceSummaryResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetDesiredStateConvergenceSummaryResp) EqualVT(that *GetDesiredStateConvergenceSummaryResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.Summary.EqualVT(that.Summary) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetDesiredStateConvergenceSummaryResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetDesiredStateConvergenceSummaryResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetServiceDesiredStateConvergenceSummaryResp) StableEqualVT(that *GetServiceDesiredStateConvergenceSummaryResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.Summary.StableEqualVT(that.Summary) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceDesiredStateConvergenceSummaryResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceDesiredStateConvergenceSummaryResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetServiceDesiredStateConvergenceSummaryResp) EqualVT(that *GetServiceDesiredStateConvergenceSummaryResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.Summary.EqualVT(that.Summary) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceDesiredStateConvergenceSummaryResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceDesiredStateConvergenceSummaryResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetServiceLastConvergedStateReq) StableEqualVT(that *GetServiceLastConvergedStateReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Service != that.Service {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceLastConvergedStateReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceLastConvergedStateReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetServiceLastConvergedStateReq) EqualVT(that *GetServiceLastConvergedStateReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Service != that.Service {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceLastConvergedStateReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceLastConvergedStateReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetServiceLastConvergedStateResp) StableEqualVT(that *GetServiceLastConvergedStateResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.ServiceInstanceStates) != len(that.ServiceInstanceStates) {
		return false
	}
	for i, vx := range this.ServiceInstanceStates {
		vy := that.ServiceInstanceStates[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &model.ServiceInstanceState{}
			}
			if q == nil {
				q = &model.ServiceInstanceState{}
			}
			if !p.StableEqualVT(q) {
				return false
			}
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceLastConvergedStateResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceLastConvergedStateResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetServiceLastConvergedStateResp) EqualVT(that *GetServiceLastConvergedStateResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.ServiceInstanceStates) != len(that.ServiceInstanceStates) {
		return false
	}
	for i, vx := range this.ServiceInstanceStates {
		vy := that.ServiceInstanceStates[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &model.ServiceInstanceState{}
			}
			if q == nil {
				q = &model.ServiceInstanceState{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceLastConvergedStateResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceLastConvergedStateResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetServiceDesiredStateHistoryReq) StableEqualVT(that *GetServiceDesiredStateHistoryReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Service != that.Service {
		return false
	}
	if this.PageToken != that.PageToken {
		return false
	}
	if this.PageSize != that.PageSize {
		return false
	}
	if this.FastNoDeprecatedFields != that.FastNoDeprecatedFields {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceDesiredStateHistoryReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceDesiredStateHistoryReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetServiceDesiredStateHistoryReq) EqualVT(that *GetServiceDesiredStateHistoryReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Service != that.Service {
		return false
	}
	if this.PageToken != that.PageToken {
		return false
	}
	if this.PageSize != that.PageSize {
		return false
	}
	if this.FastNoDeprecatedFields != that.FastNoDeprecatedFields {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceDesiredStateHistoryReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceDesiredStateHistoryReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetServiceDesiredStateHistoryResp) StableEqualVT(that *GetServiceDesiredStateHistoryResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.DesiredStates) != len(that.DesiredStates) {
		return false
	}
	for i, vx := range this.DesiredStates {
		vy := that.DesiredStates[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &DesiredStateSummary{}
			}
			if q == nil {
				q = &DesiredStateSummary{}
			}
			if !p.StableEqualVT(q) {
				return false
			}
		}
	}
	if this.NextPageToken != that.NextPageToken {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceDesiredStateHistoryResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceDesiredStateHistoryResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetServiceDesiredStateHistoryResp) EqualVT(that *GetServiceDesiredStateHistoryResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.DesiredStates) != len(that.DesiredStates) {
		return false
	}
	for i, vx := range this.DesiredStates {
		vy := that.DesiredStates[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &DesiredStateSummary{}
			}
			if q == nil {
				q = &DesiredStateSummary{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	if this.NextPageToken != that.NextPageToken {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceDesiredStateHistoryResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceDesiredStateHistoryResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetDesiredStateReq) StableEqualVT(that *GetDesiredStateReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetDesiredStateReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetDesiredStateReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetDesiredStateReq) EqualVT(that *GetDesiredStateReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetDesiredStateReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetDesiredStateReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetDesiredStateResp) StableEqualVT(that *GetDesiredStateResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.DesiredState.StableEqualVT(that.DesiredState) {
		return false
	}
	if !this.CompiledDesiredState.StableEqualVT(that.CompiledDesiredState) {
		return false
	}
	if !this.SetDesiredStateMetadata.StableEqualVT(that.SetDesiredStateMetadata) {
		return false
	}
	if !(*timestamppb1.Timestamp)(this.CreationTimestamp).StableEqualVT((*timestamppb1.Timestamp)(that.CreationTimestamp)) {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if !this.SourceMetadata.StableEqualVT(that.SourceMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetDesiredStateResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetDesiredStateResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetDesiredStateResp) EqualVT(that *GetDesiredStateResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.DesiredState.EqualVT(that.DesiredState) {
		return false
	}
	if !this.CompiledDesiredState.EqualVT(that.CompiledDesiredState) {
		return false
	}
	if !this.SetDesiredStateMetadata.EqualVT(that.SetDesiredStateMetadata) {
		return false
	}
	if !(*timestamppb1.Timestamp)(this.CreationTimestamp).EqualVT((*timestamppb1.Timestamp)(that.CreationTimestamp)) {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if !this.SourceMetadata.EqualVT(that.SourceMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetDesiredStateResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetDesiredStateResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetDesiredStateGraphReq_LiteEntitiesFilter) StableEqualVT(that *GetDesiredStateGraphReq_LiteEntitiesFilter) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.Types) != len(that.Types) {
		return false
	}
	for i, vx := range this.Types {
		vy := that.Types[i]
		if vx != vy {
			return false
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetDesiredStateGraphReq_LiteEntitiesFilter) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetDesiredStateGraphReq_LiteEntitiesFilter)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetDesiredStateGraphReq_QueryByService) StableEqualVT(that *GetDesiredStateGraphReq_QueryByService) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Service != that.Service {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetDesiredStateGraphReq_QueryByService) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetDesiredStateGraphReq_QueryByService)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetDesiredStateGraphReq_DepthOverrideByStatus) StableEqualVT(that *GetDesiredStateGraphReq_DepthOverrideByStatus) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Status != that.Status {
		return false
	}
	if this.Depth != that.Depth {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetDesiredStateGraphReq_DepthOverrideByStatus) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetDesiredStateGraphReq_DepthOverrideByStatus)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetDesiredStateGraphReq) StableEqualVT(that *GetDesiredStateGraphReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Query == nil && that.Query != nil {
		return false
	} else if this.Query != nil {
		if that.Query == nil {
			return false
		}
		if !this.Query.(interface {
			StableEqualVT(isGetDesiredStateGraphReq_Query) bool
		}).StableEqualVT(that.Query) {
			return false
		}
	}
	if !this.RequiredAnnotations.StableEqualVT(that.RequiredAnnotations) {
		return false
	}
	if this.Depth != that.Depth {
		return false
	}
	if this.IncludeDesiredStateTimestamps != that.IncludeDesiredStateTimestamps {
		return false
	}
	if len(this.Types) != len(that.Types) {
		return false
	}
	for i, vx := range this.Types {
		vy := that.Types[i]
		if vx != vy {
			return false
		}
	}
	if len(this.DepthOverridesByStatus) != len(that.DepthOverridesByStatus) {
		return false
	}
	for i, vx := range this.DepthOverridesByStatus {
		vy := that.DepthOverridesByStatus[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &GetDesiredStateGraphReq_DepthOverrideByStatus{}
			}
			if q == nil {
				q = &GetDesiredStateGraphReq_DepthOverrideByStatus{}
			}
			if !p.StableEqualVT(q) {
				return false
			}
		}
	}
	if len(this.RequiredEntityNames) != len(that.RequiredEntityNames) {
		return false
	}
	for i, vx := range this.RequiredEntityNames {
		vy := that.RequiredEntityNames[i]
		if vx != vy {
			return false
		}
	}
	if this.IncludeParents != that.IncludeParents {
		return false
	}
	if len(this.ExcludeDependencyType) != len(that.ExcludeDependencyType) {
		return false
	}
	for i, vx := range this.ExcludeDependencyType {
		vy := that.ExcludeDependencyType[i]
		if vx != vy {
			return false
		}
	}
	if !this.LiteEntitiesFilter.StableEqualVT(that.LiteEntitiesFilter) {
		return false
	}
	if this.IncludeDesiredStateMetadata != that.IncludeDesiredStateMetadata {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetDesiredStateGraphReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetDesiredStateGraphReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetDesiredStateGraphReq_DesiredStateId) StableEqualVT(thatIface isGetDesiredStateGraphReq_Query) bool {
	that, ok := thatIface.(*GetDesiredStateGraphReq_DesiredStateId)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	return true
}

func (this *GetDesiredStateGraphReq_QueryByService_) StableEqualVT(thatIface isGetDesiredStateGraphReq_Query) bool {
	that, ok := thatIface.(*GetDesiredStateGraphReq_QueryByService_)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.QueryByService, that.QueryByService; p != q {
		if p == nil {
			p = &GetDesiredStateGraphReq_QueryByService{}
		}
		if q == nil {
			q = &GetDesiredStateGraphReq_QueryByService{}
		}
		if !p.StableEqualVT(q) {
			return false
		}
	}
	return true
}

func (this *GetDesiredStateGraphReq_LiteEntitiesFilter) EqualVT(that *GetDesiredStateGraphReq_LiteEntitiesFilter) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.Types) != len(that.Types) {
		return false
	}
	for i, vx := range this.Types {
		vy := that.Types[i]
		if vx != vy {
			return false
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetDesiredStateGraphReq_LiteEntitiesFilter) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetDesiredStateGraphReq_LiteEntitiesFilter)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetDesiredStateGraphReq_QueryByService) EqualVT(that *GetDesiredStateGraphReq_QueryByService) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Service != that.Service {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetDesiredStateGraphReq_QueryByService) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetDesiredStateGraphReq_QueryByService)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetDesiredStateGraphReq_DepthOverrideByStatus) EqualVT(that *GetDesiredStateGraphReq_DepthOverrideByStatus) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Status != that.Status {
		return false
	}
	if this.Depth != that.Depth {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetDesiredStateGraphReq_DepthOverrideByStatus) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetDesiredStateGraphReq_DepthOverrideByStatus)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetDesiredStateGraphReq) EqualVT(that *GetDesiredStateGraphReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Query == nil && that.Query != nil {
		return false
	} else if this.Query != nil {
		if that.Query == nil {
			return false
		}
		if !this.Query.(interface {
			EqualVT(isGetDesiredStateGraphReq_Query) bool
		}).EqualVT(that.Query) {
			return false
		}
	}
	if !this.RequiredAnnotations.EqualVT(that.RequiredAnnotations) {
		return false
	}
	if this.Depth != that.Depth {
		return false
	}
	if this.IncludeDesiredStateTimestamps != that.IncludeDesiredStateTimestamps {
		return false
	}
	if len(this.Types) != len(that.Types) {
		return false
	}
	for i, vx := range this.Types {
		vy := that.Types[i]
		if vx != vy {
			return false
		}
	}
	if len(this.DepthOverridesByStatus) != len(that.DepthOverridesByStatus) {
		return false
	}
	for i, vx := range this.DepthOverridesByStatus {
		vy := that.DepthOverridesByStatus[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &GetDesiredStateGraphReq_DepthOverrideByStatus{}
			}
			if q == nil {
				q = &GetDesiredStateGraphReq_DepthOverrideByStatus{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	if len(this.RequiredEntityNames) != len(that.RequiredEntityNames) {
		return false
	}
	for i, vx := range this.RequiredEntityNames {
		vy := that.RequiredEntityNames[i]
		if vx != vy {
			return false
		}
	}
	if this.IncludeParents != that.IncludeParents {
		return false
	}
	if len(this.ExcludeDependencyType) != len(that.ExcludeDependencyType) {
		return false
	}
	for i, vx := range this.ExcludeDependencyType {
		vy := that.ExcludeDependencyType[i]
		if vx != vy {
			return false
		}
	}
	if !this.LiteEntitiesFilter.EqualVT(that.LiteEntitiesFilter) {
		return false
	}
	if this.IncludeDesiredStateMetadata != that.IncludeDesiredStateMetadata {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetDesiredStateGraphReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetDesiredStateGraphReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetDesiredStateGraphReq_DesiredStateId) EqualVT(thatIface isGetDesiredStateGraphReq_Query) bool {
	that, ok := thatIface.(*GetDesiredStateGraphReq_DesiredStateId)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	return true
}

func (this *GetDesiredStateGraphReq_QueryByService_) EqualVT(thatIface isGetDesiredStateGraphReq_Query) bool {
	that, ok := thatIface.(*GetDesiredStateGraphReq_QueryByService_)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.QueryByService, that.QueryByService; p != q {
		if p == nil {
			p = &GetDesiredStateGraphReq_QueryByService{}
		}
		if q == nil {
			q = &GetDesiredStateGraphReq_QueryByService{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *DesiredStateTimestamps) StableEqualVT(that *DesiredStateTimestamps) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !(*timestamppb1.Timestamp)(this.CreationTimestamp).StableEqualVT((*timestamppb1.Timestamp)(that.CreationTimestamp)) {
		return false
	}
	if !(*timestamppb1.Timestamp)(this.LastUpdateTimestamp).StableEqualVT((*timestamppb1.Timestamp)(that.LastUpdateTimestamp)) {
		return false
	}
	if !(*timestamppb1.Timestamp)(this.ReplacedTimestamp).StableEqualVT((*timestamppb1.Timestamp)(that.ReplacedTimestamp)) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *DesiredStateTimestamps) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*DesiredStateTimestamps)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *DesiredStateTimestamps) EqualVT(that *DesiredStateTimestamps) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !(*timestamppb1.Timestamp)(this.CreationTimestamp).EqualVT((*timestamppb1.Timestamp)(that.CreationTimestamp)) {
		return false
	}
	if !(*timestamppb1.Timestamp)(this.LastUpdateTimestamp).EqualVT((*timestamppb1.Timestamp)(that.LastUpdateTimestamp)) {
		return false
	}
	if !(*timestamppb1.Timestamp)(this.ReplacedTimestamp).EqualVT((*timestamppb1.Timestamp)(that.ReplacedTimestamp)) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *DesiredStateTimestamps) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*DesiredStateTimestamps)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetDesiredStateGraphResp) StableEqualVT(that *GetDesiredStateGraphResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.EntityGraph.StableEqualVT(that.EntityGraph) {
		return false
	}
	if !this.PendingSetDesiredState.StableEqualVT(that.PendingSetDesiredState) {
		return false
	}
	if !this.Timestamps.StableEqualVT(that.Timestamps) {
		return false
	}
	if !this.SetDesiredStateMetadata.StableEqualVT(that.SetDesiredStateMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetDesiredStateGraphResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetDesiredStateGraphResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetDesiredStateGraphResp) EqualVT(that *GetDesiredStateGraphResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.EntityGraph.EqualVT(that.EntityGraph) {
		return false
	}
	if !this.PendingSetDesiredState.EqualVT(that.PendingSetDesiredState) {
		return false
	}
	if !this.Timestamps.EqualVT(that.Timestamps) {
		return false
	}
	if !this.SetDesiredStateMetadata.EqualVT(that.SetDesiredStateMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetDesiredStateGraphResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetDesiredStateGraphResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetServiceLatestDesiredStateIdReq) StableEqualVT(that *GetServiceLatestDesiredStateIdReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Service != that.Service {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceLatestDesiredStateIdReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceLatestDesiredStateIdReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetServiceLatestDesiredStateIdReq) EqualVT(that *GetServiceLatestDesiredStateIdReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Service != that.Service {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceLatestDesiredStateIdReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceLatestDesiredStateIdReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetServiceLatestDesiredStateIdResp) StableEqualVT(that *GetServiceLatestDesiredStateIdResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	if !this.PendingSetDesiredState.StableEqualVT(that.PendingSetDesiredState) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceLatestDesiredStateIdResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceLatestDesiredStateIdResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetServiceLatestDesiredStateIdResp) EqualVT(that *GetServiceLatestDesiredStateIdResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	if !this.PendingSetDesiredState.EqualVT(that.PendingSetDesiredState) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceLatestDesiredStateIdResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceLatestDesiredStateIdResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetServiceDesiredStateIdHistoryReq) StableEqualVT(that *GetServiceDesiredStateIdHistoryReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Service != that.Service {
		return false
	}
	if this.PageToken != that.PageToken {
		return false
	}
	if this.PageSize != that.PageSize {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceDesiredStateIdHistoryReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceDesiredStateIdHistoryReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetServiceDesiredStateIdHistoryReq) EqualVT(that *GetServiceDesiredStateIdHistoryReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Service != that.Service {
		return false
	}
	if this.PageToken != that.PageToken {
		return false
	}
	if this.PageSize != that.PageSize {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceDesiredStateIdHistoryReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceDesiredStateIdHistoryReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetServiceDesiredStateIdHistoryResp) StableEqualVT(that *GetServiceDesiredStateIdHistoryResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.DesiredStateIds) != len(that.DesiredStateIds) {
		return false
	}
	for i, vx := range this.DesiredStateIds {
		vy := that.DesiredStateIds[i]
		if vx != vy {
			return false
		}
	}
	if this.NextPageToken != that.NextPageToken {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceDesiredStateIdHistoryResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceDesiredStateIdHistoryResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetServiceDesiredStateIdHistoryResp) EqualVT(that *GetServiceDesiredStateIdHistoryResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.DesiredStateIds) != len(that.DesiredStateIds) {
		return false
	}
	for i, vx := range this.DesiredStateIds {
		vy := that.DesiredStateIds[i]
		if vx != vy {
			return false
		}
	}
	if this.NextPageToken != that.NextPageToken {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceDesiredStateIdHistoryResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceDesiredStateIdHistoryResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ValidateDesiredStateResp) StableEqualVT(that *ValidateDesiredStateResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.DesiredState.StableEqualVT(that.DesiredState) {
		return false
	}
	if !this.CompiledDesiredState.StableEqualVT(that.CompiledDesiredState) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ValidateDesiredStateResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ValidateDesiredStateResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *ValidateDesiredStateResp) EqualVT(that *ValidateDesiredStateResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.DesiredState.EqualVT(that.DesiredState) {
		return false
	}
	if !this.CompiledDesiredState.EqualVT(that.CompiledDesiredState) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ValidateDesiredStateResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ValidateDesiredStateResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *SetManualApprovalReq) StableEqualVT(that *SetManualApprovalReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	if this.Topic != that.Topic {
		return false
	}
	if this.Reject != that.Reject {
		return false
	}
	if this.SignalType != that.SignalType {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if !this.SourceMetadata.StableEqualVT(that.SourceMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *SetManualApprovalReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*SetManualApprovalReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *SetManualApprovalReq) EqualVT(that *SetManualApprovalReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	if this.Topic != that.Topic {
		return false
	}
	if this.Reject != that.Reject {
		return false
	}
	if this.SignalType != that.SignalType {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if !this.SourceMetadata.EqualVT(that.SourceMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *SetManualApprovalReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*SetManualApprovalReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *SetManualApprovalResp) StableEqualVT(that *SetManualApprovalResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *SetManualApprovalResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*SetManualApprovalResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *SetManualApprovalResp) EqualVT(that *SetManualApprovalResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *SetManualApprovalResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*SetManualApprovalResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *PromoteDeliveryReq) StableEqualVT(that *PromoteDeliveryReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	if this.Stage != that.Stage {
		return false
	}
	if this.Full != that.Full {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if this.Reject != that.Reject {
		return false
	}
	if this.CallSource != that.CallSource {
		return false
	}
	if !this.SourceMetadata.StableEqualVT(that.SourceMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *PromoteDeliveryReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*PromoteDeliveryReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *PromoteDeliveryReq) EqualVT(that *PromoteDeliveryReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	if this.Stage != that.Stage {
		return false
	}
	if this.Full != that.Full {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if this.Reject != that.Reject {
		return false
	}
	if this.CallSource != that.CallSource {
		return false
	}
	if !this.SourceMetadata.EqualVT(that.SourceMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *PromoteDeliveryReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*PromoteDeliveryReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *PromoteDeliveryResp) StableEqualVT(that *PromoteDeliveryResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *PromoteDeliveryResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*PromoteDeliveryResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *PromoteDeliveryResp) EqualVT(that *PromoteDeliveryResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *PromoteDeliveryResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*PromoteDeliveryResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *BypassProtectionReq) StableEqualVT(that *BypassProtectionReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if this.CallSource != that.CallSource {
		return false
	}
	if !this.SourceMetadata.StableEqualVT(that.SourceMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *BypassProtectionReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*BypassProtectionReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *BypassProtectionReq) EqualVT(that *BypassProtectionReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if this.CallSource != that.CallSource {
		return false
	}
	if !this.SourceMetadata.EqualVT(that.SourceMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *BypassProtectionReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*BypassProtectionReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *BypassProtectionResp) StableEqualVT(that *BypassProtectionResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *BypassProtectionResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*BypassProtectionResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *BypassProtectionResp) EqualVT(that *BypassProtectionResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *BypassProtectionResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*BypassProtectionResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *BypassDependenciesReq) StableEqualVT(that *BypassDependenciesReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if this.CallSource != that.CallSource {
		return false
	}
	if !this.SourceMetadata.StableEqualVT(that.SourceMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *BypassDependenciesReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*BypassDependenciesReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *BypassDependenciesReq) EqualVT(that *BypassDependenciesReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if this.CallSource != that.CallSource {
		return false
	}
	if !this.SourceMetadata.EqualVT(that.SourceMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *BypassDependenciesReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*BypassDependenciesReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *BypassDependenciesResp) StableEqualVT(that *BypassDependenciesResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *BypassDependenciesResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*BypassDependenciesResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *BypassDependenciesResp) EqualVT(that *BypassDependenciesResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *BypassDependenciesResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*BypassDependenciesResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *BypassConcurrencyLimitReq) StableEqualVT(that *BypassConcurrencyLimitReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if this.CallSource != that.CallSource {
		return false
	}
	if !this.SourceMetadata.StableEqualVT(that.SourceMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *BypassConcurrencyLimitReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*BypassConcurrencyLimitReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *BypassConcurrencyLimitReq) EqualVT(that *BypassConcurrencyLimitReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if this.CallSource != that.CallSource {
		return false
	}
	if !this.SourceMetadata.EqualVT(that.SourceMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *BypassConcurrencyLimitReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*BypassConcurrencyLimitReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *BypassConcurrencyLimitResp) StableEqualVT(that *BypassConcurrencyLimitResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *BypassConcurrencyLimitResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*BypassConcurrencyLimitResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *BypassConcurrencyLimitResp) EqualVT(that *BypassConcurrencyLimitResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *BypassConcurrencyLimitResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*BypassConcurrencyLimitResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ListMaestroReleasesReq) StableEqualVT(that *ListMaestroReleasesReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.EntityId.StableEqualVT(that.EntityId) {
		return false
	}
	if this.StartingReleaseId != that.StartingReleaseId {
		return false
	}
	if this.PageToken != that.PageToken {
		return false
	}
	if this.PageSize != that.PageSize {
		return false
	}
	if this.Descending != that.Descending {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListMaestroReleasesReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListMaestroReleasesReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *ListMaestroReleasesReq) EqualVT(that *ListMaestroReleasesReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.EntityId.EqualVT(that.EntityId) {
		return false
	}
	if this.StartingReleaseId != that.StartingReleaseId {
		return false
	}
	if this.PageToken != that.PageToken {
		return false
	}
	if this.PageSize != that.PageSize {
		return false
	}
	if this.Descending != that.Descending {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListMaestroReleasesReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListMaestroReleasesReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ListMaestroReleasesResp) StableEqualVT(that *ListMaestroReleasesResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.MaestroReleases) != len(that.MaestroReleases) {
		return false
	}
	for i, vx := range this.MaestroReleases {
		vy := that.MaestroReleases[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &maestro.MaestroRelease{}
			}
			if q == nil {
				q = &maestro.MaestroRelease{}
			}
			if !p.StableEqualVT(q) {
				return false
			}
		}
	}
	if this.NextPageToken != that.NextPageToken {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListMaestroReleasesResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListMaestroReleasesResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *ListMaestroReleasesResp) EqualVT(that *ListMaestroReleasesResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.MaestroReleases) != len(that.MaestroReleases) {
		return false
	}
	for i, vx := range this.MaestroReleases {
		vy := that.MaestroReleases[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &maestro.MaestroRelease{}
			}
			if q == nil {
				q = &maestro.MaestroRelease{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	if this.NextPageToken != that.NextPageToken {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListMaestroReleasesResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListMaestroReleasesResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetMaestroReleaseReq) StableEqualVT(that *GetMaestroReleaseReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.ReleaseId != that.ReleaseId {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetMaestroReleaseReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetMaestroReleaseReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetMaestroReleaseReq) EqualVT(that *GetMaestroReleaseReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.ReleaseId != that.ReleaseId {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetMaestroReleaseReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetMaestroReleaseReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetMaestroReleaseResp) StableEqualVT(that *GetMaestroReleaseResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.MaestroRelease.StableEqualVT(that.MaestroRelease) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetMaestroReleaseResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetMaestroReleaseResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetMaestroReleaseResp) EqualVT(that *GetMaestroReleaseResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.MaestroRelease.EqualVT(that.MaestroRelease) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetMaestroReleaseResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetMaestroReleaseResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ListCombinedReleasesReq) StableEqualVT(that *ListCombinedReleasesReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.EntityId.StableEqualVT(that.EntityId) {
		return false
	}
	if this.PageToken != that.PageToken {
		return false
	}
	if this.PageSize != that.PageSize {
		return false
	}
	if this.Descending != that.Descending {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListCombinedReleasesReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListCombinedReleasesReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *ListCombinedReleasesReq) EqualVT(that *ListCombinedReleasesReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.EntityId.EqualVT(that.EntityId) {
		return false
	}
	if this.PageToken != that.PageToken {
		return false
	}
	if this.PageSize != that.PageSize {
		return false
	}
	if this.Descending != that.Descending {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListCombinedReleasesReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListCombinedReleasesReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ListServiceCombinedReleasesReq) StableEqualVT(that *ListServiceCombinedReleasesReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Service != that.Service {
		return false
	}
	if this.Descending != that.Descending {
		return false
	}
	if this.PageToken != that.PageToken {
		return false
	}
	if this.PageSize != that.PageSize {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListServiceCombinedReleasesReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListServiceCombinedReleasesReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *ListServiceCombinedReleasesReq) EqualVT(that *ListServiceCombinedReleasesReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Service != that.Service {
		return false
	}
	if this.Descending != that.Descending {
		return false
	}
	if this.PageToken != that.PageToken {
		return false
	}
	if this.PageSize != that.PageSize {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListServiceCombinedReleasesReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListServiceCombinedReleasesReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ListCombinedReleasesResp_Release) StableEqualVT(that *ListCombinedReleasesResp_Release) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.ReleaseOneof == nil && that.ReleaseOneof != nil {
		return false
	} else if this.ReleaseOneof != nil {
		if that.ReleaseOneof == nil {
			return false
		}
		if !this.ReleaseOneof.(interface {
			StableEqualVT(isListCombinedReleasesResp_Release_ReleaseOneof) bool
		}).StableEqualVT(that.ReleaseOneof) {
			return false
		}
	}
	if !(*timestamppb1.Timestamp)(this.CreationTimestamp).StableEqualVT((*timestamppb1.Timestamp)(that.CreationTimestamp)) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListCombinedReleasesResp_Release) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListCombinedReleasesResp_Release)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *ListCombinedReleasesResp_Release_DesiredStateId) StableEqualVT(thatIface isListCombinedReleasesResp_Release_ReleaseOneof) bool {
	that, ok := thatIface.(*ListCombinedReleasesResp_Release_DesiredStateId)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	return true
}

func (this *ListCombinedReleasesResp_Release_ReleaseId) StableEqualVT(thatIface isListCombinedReleasesResp_Release_ReleaseOneof) bool {
	that, ok := thatIface.(*ListCombinedReleasesResp_Release_ReleaseId)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if this.ReleaseId != that.ReleaseId {
		return false
	}
	return true
}

func (this *ListCombinedReleasesResp) StableEqualVT(that *ListCombinedReleasesResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.Releases) != len(that.Releases) {
		return false
	}
	for i, vx := range this.Releases {
		vy := that.Releases[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &ListCombinedReleasesResp_Release{}
			}
			if q == nil {
				q = &ListCombinedReleasesResp_Release{}
			}
			if !p.StableEqualVT(q) {
				return false
			}
		}
	}
	if this.NextPageToken != that.NextPageToken {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListCombinedReleasesResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListCombinedReleasesResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *ListCombinedReleasesResp_Release) EqualVT(that *ListCombinedReleasesResp_Release) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.ReleaseOneof == nil && that.ReleaseOneof != nil {
		return false
	} else if this.ReleaseOneof != nil {
		if that.ReleaseOneof == nil {
			return false
		}
		if !this.ReleaseOneof.(interface {
			EqualVT(isListCombinedReleasesResp_Release_ReleaseOneof) bool
		}).EqualVT(that.ReleaseOneof) {
			return false
		}
	}
	if !(*timestamppb1.Timestamp)(this.CreationTimestamp).EqualVT((*timestamppb1.Timestamp)(that.CreationTimestamp)) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListCombinedReleasesResp_Release) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListCombinedReleasesResp_Release)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ListCombinedReleasesResp_Release_DesiredStateId) EqualVT(thatIface isListCombinedReleasesResp_Release_ReleaseOneof) bool {
	that, ok := thatIface.(*ListCombinedReleasesResp_Release_DesiredStateId)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if this.DesiredStateId != that.DesiredStateId {
		return false
	}
	return true
}

func (this *ListCombinedReleasesResp_Release_ReleaseId) EqualVT(thatIface isListCombinedReleasesResp_Release_ReleaseOneof) bool {
	that, ok := thatIface.(*ListCombinedReleasesResp_Release_ReleaseId)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if this.ReleaseId != that.ReleaseId {
		return false
	}
	return true
}

func (this *ListCombinedReleasesResp) EqualVT(that *ListCombinedReleasesResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.Releases) != len(that.Releases) {
		return false
	}
	for i, vx := range this.Releases {
		vy := that.Releases[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &ListCombinedReleasesResp_Release{}
			}
			if q == nil {
				q = &ListCombinedReleasesResp_Release{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	if this.NextPageToken != that.NextPageToken {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListCombinedReleasesResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListCombinedReleasesResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetLatestCombinedReleaseDesiredStateReq) StableEqualVT(that *GetLatestCombinedReleaseDesiredStateReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.EntityId.StableEqualVT(that.EntityId) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetLatestCombinedReleaseDesiredStateReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetLatestCombinedReleaseDesiredStateReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetLatestCombinedReleaseDesiredStateReq) EqualVT(that *GetLatestCombinedReleaseDesiredStateReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.EntityId.EqualVT(that.EntityId) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetLatestCombinedReleaseDesiredStateReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetLatestCombinedReleaseDesiredStateReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetServiceLatestCombinedReleaseDesiredStateReq) StableEqualVT(that *GetServiceLatestCombinedReleaseDesiredStateReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Service != that.Service {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceLatestCombinedReleaseDesiredStateReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceLatestCombinedReleaseDesiredStateReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetServiceLatestCombinedReleaseDesiredStateReq) EqualVT(that *GetServiceLatestCombinedReleaseDesiredStateReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Service != that.Service {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetServiceLatestCombinedReleaseDesiredStateReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetServiceLatestCombinedReleaseDesiredStateReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetLatestCombinedReleaseDesiredStateResp) StableEqualVT(that *GetLatestCombinedReleaseDesiredStateResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.InputDesiredState.StableEqualVT(that.InputDesiredState) {
		return false
	}
	if !this.CompiledDesiredState.StableEqualVT(that.CompiledDesiredState) {
		return false
	}
	if !this.SetDesiredStateMetadata.StableEqualVT(that.SetDesiredStateMetadata) {
		return false
	}
	if !(*timestamppb1.Timestamp)(this.CreationTimestamp).StableEqualVT((*timestamppb1.Timestamp)(that.CreationTimestamp)) {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if !this.SourceMetadata.StableEqualVT(that.SourceMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetLatestCombinedReleaseDesiredStateResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetLatestCombinedReleaseDesiredStateResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetLatestCombinedReleaseDesiredStateResp) EqualVT(that *GetLatestCombinedReleaseDesiredStateResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.InputDesiredState.EqualVT(that.InputDesiredState) {
		return false
	}
	if !this.CompiledDesiredState.EqualVT(that.CompiledDesiredState) {
		return false
	}
	if !this.SetDesiredStateMetadata.EqualVT(that.SetDesiredStateMetadata) {
		return false
	}
	if !(*timestamppb1.Timestamp)(this.CreationTimestamp).EqualVT((*timestamppb1.Timestamp)(that.CreationTimestamp)) {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if !this.SourceMetadata.EqualVT(that.SourceMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetLatestCombinedReleaseDesiredStateResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetLatestCombinedReleaseDesiredStateResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
