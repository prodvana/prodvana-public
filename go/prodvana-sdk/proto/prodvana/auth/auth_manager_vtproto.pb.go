// Code generated by protoc-gen-go-vtproto. DO NOT EDIT.
// protoc-gen-go-vtproto version: v0.6.0
// source: prodvana/auth/auth_manager.proto

package auth

import (
	timestamppb1 "github.com/planetscale/vtprotobuf/types/known/timestamppb"
	proto "google.golang.org/protobuf/proto"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

func (m *GetTokenRequest) CloneVT() *GetTokenRequest {
	if m == nil {
		return (*GetTokenRequest)(nil)
	}
	r := new(GetTokenRequest)
	r.Code = m.Code
	r.RedirectUrl = m.RedirectUrl
	r.ForCli = m.ForCli
	r.ProdvanaOnlyAdminOrg = m.ProdvanaOnlyAdminOrg
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetTokenRequest) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetAuthUrlResponse) CloneVT() *GetAuthUrlResponse {
	if m == nil {
		return (*GetAuthUrlResponse)(nil)
	}
	r := new(GetAuthUrlResponse)
	r.AuthUrl = m.AuthUrl
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetAuthUrlResponse) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetAuthUrlRequest) CloneVT() *GetAuthUrlRequest {
	if m == nil {
		return (*GetAuthUrlRequest)(nil)
	}
	r := new(GetAuthUrlRequest)
	r.State = m.State
	r.ForCli = m.ForCli
	r.Invitation = m.Invitation
	r.ProdvanaOnlyAdminOrg = m.ProdvanaOnlyAdminOrg
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetAuthUrlRequest) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *CliAuthReq) CloneVT() *CliAuthReq {
	if m == nil {
		return (*CliAuthReq)(nil)
	}
	r := new(CliAuthReq)
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *CliAuthReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *CliAuthResp_UserPrompt) CloneVT() *CliAuthResp_UserPrompt {
	if m == nil {
		return (*CliAuthResp_UserPrompt)(nil)
	}
	r := new(CliAuthResp_UserPrompt)
	r.UserCode = m.UserCode
	r.VerificationUri = m.VerificationUri
	r.VerificationUriComplete = m.VerificationUriComplete
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *CliAuthResp_UserPrompt) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *CliAuthResp) CloneVT() *CliAuthResp {
	if m == nil {
		return (*CliAuthResp)(nil)
	}
	r := new(CliAuthResp)
	if m.RespOneof != nil {
		r.RespOneof = m.RespOneof.(interface {
			CloneVT() isCliAuthResp_RespOneof
		}).CloneVT()
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *CliAuthResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *CliAuthResp_UserPrompt_) CloneVT() isCliAuthResp_RespOneof {
	if m == nil {
		return (*CliAuthResp_UserPrompt_)(nil)
	}
	r := new(CliAuthResp_UserPrompt_)
	r.UserPrompt = m.UserPrompt.CloneVT()
	return r
}

func (m *CliAuthResp_Token) CloneVT() isCliAuthResp_RespOneof {
	if m == nil {
		return (*CliAuthResp_Token)(nil)
	}
	r := new(CliAuthResp_Token)
	r.Token = m.Token.CloneVT()
	return r
}

func (m *RefreshTokenReq) CloneVT() *RefreshTokenReq {
	if m == nil {
		return (*RefreshTokenReq)(nil)
	}
	r := new(RefreshTokenReq)
	r.Token = m.Token.CloneVT()
	r.ForCli = m.ForCli
	r.ProdvanaOnlyAdminOrg = m.ProdvanaOnlyAdminOrg
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *RefreshTokenReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetAuthTokenResp) CloneVT() *GetAuthTokenResp {
	if m == nil {
		return (*GetAuthTokenResp)(nil)
	}
	r := new(GetAuthTokenResp)
	r.Token = m.Token.CloneVT()
	r.User = m.User.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetAuthTokenResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *Empty) CloneVT() *Empty {
	if m == nil {
		return (*Empty)(nil)
	}
	r := new(Empty)
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *Empty) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *LogoutReq) CloneVT() *LogoutReq {
	if m == nil {
		return (*LogoutReq)(nil)
	}
	r := new(LogoutReq)
	r.ForCli = m.ForCli
	r.RedirectUrl = m.RedirectUrl
	r.ProdvanaOnlyAdminOrg = m.ProdvanaOnlyAdminOrg
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *LogoutReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *LogoutResp) CloneVT() *LogoutResp {
	if m == nil {
		return (*LogoutResp)(nil)
	}
	r := new(LogoutResp)
	r.LogoutUrl = m.LogoutUrl
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *LogoutResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *CreateOrgApiTokenReq) CloneVT() *CreateOrgApiTokenReq {
	if m == nil {
		return (*CreateOrgApiTokenReq)(nil)
	}
	r := new(CreateOrgApiTokenReq)
	r.Name = m.Name
	r.Description = m.Description
	r.ExpiresTimestamp = (*timestamppb.Timestamp)((*timestamppb1.Timestamp)(m.ExpiresTimestamp).CloneVT())
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *CreateOrgApiTokenReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *CreateOrgApiTokenResp) CloneVT() *CreateOrgApiTokenResp {
	if m == nil {
		return (*CreateOrgApiTokenResp)(nil)
	}
	r := new(CreateOrgApiTokenResp)
	r.ApiToken = m.ApiToken
	r.Info = m.Info.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *CreateOrgApiTokenResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *DeleteOrgApiTokenReq) CloneVT() *DeleteOrgApiTokenReq {
	if m == nil {
		return (*DeleteOrgApiTokenReq)(nil)
	}
	r := new(DeleteOrgApiTokenReq)
	r.Name = m.Name
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *DeleteOrgApiTokenReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *DeleteOrgApiTokenResp) CloneVT() *DeleteOrgApiTokenResp {
	if m == nil {
		return (*DeleteOrgApiTokenResp)(nil)
	}
	r := new(DeleteOrgApiTokenResp)
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *DeleteOrgApiTokenResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ListOrgApiTokensReq) CloneVT() *ListOrgApiTokensReq {
	if m == nil {
		return (*ListOrgApiTokensReq)(nil)
	}
	r := new(ListOrgApiTokensReq)
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ListOrgApiTokensReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ListOrgApiTokensResp) CloneVT() *ListOrgApiTokensResp {
	if m == nil {
		return (*ListOrgApiTokensResp)(nil)
	}
	r := new(ListOrgApiTokensResp)
	if rhs := m.Tokens; rhs != nil {
		tmpContainer := make([]*ApiTokenInfo, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.Tokens = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ListOrgApiTokensResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (this *GetTokenRequest) EqualVT(that *GetTokenRequest) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Code != that.Code {
		return false
	}
	if this.RedirectUrl != that.RedirectUrl {
		return false
	}
	if this.ForCli != that.ForCli {
		return false
	}
	if this.ProdvanaOnlyAdminOrg != that.ProdvanaOnlyAdminOrg {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetTokenRequest) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetTokenRequest)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetAuthUrlResponse) EqualVT(that *GetAuthUrlResponse) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.AuthUrl != that.AuthUrl {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetAuthUrlResponse) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetAuthUrlResponse)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetAuthUrlRequest) EqualVT(that *GetAuthUrlRequest) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.State != that.State {
		return false
	}
	if this.ForCli != that.ForCli {
		return false
	}
	if this.Invitation != that.Invitation {
		return false
	}
	if this.ProdvanaOnlyAdminOrg != that.ProdvanaOnlyAdminOrg {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetAuthUrlRequest) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetAuthUrlRequest)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *CliAuthReq) EqualVT(that *CliAuthReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *CliAuthReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*CliAuthReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *CliAuthResp_UserPrompt) EqualVT(that *CliAuthResp_UserPrompt) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.UserCode != that.UserCode {
		return false
	}
	if this.VerificationUri != that.VerificationUri {
		return false
	}
	if this.VerificationUriComplete != that.VerificationUriComplete {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *CliAuthResp_UserPrompt) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*CliAuthResp_UserPrompt)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *CliAuthResp) EqualVT(that *CliAuthResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.RespOneof == nil && that.RespOneof != nil {
		return false
	} else if this.RespOneof != nil {
		if that.RespOneof == nil {
			return false
		}
		if !this.RespOneof.(interface {
			EqualVT(isCliAuthResp_RespOneof) bool
		}).EqualVT(that.RespOneof) {
			return false
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *CliAuthResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*CliAuthResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *CliAuthResp_UserPrompt_) EqualVT(thatIface isCliAuthResp_RespOneof) bool {
	that, ok := thatIface.(*CliAuthResp_UserPrompt_)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.UserPrompt, that.UserPrompt; p != q {
		if p == nil {
			p = &CliAuthResp_UserPrompt{}
		}
		if q == nil {
			q = &CliAuthResp_UserPrompt{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *CliAuthResp_Token) EqualVT(thatIface isCliAuthResp_RespOneof) bool {
	that, ok := thatIface.(*CliAuthResp_Token)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.Token, that.Token; p != q {
		if p == nil {
			p = &AuthToken{}
		}
		if q == nil {
			q = &AuthToken{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *RefreshTokenReq) EqualVT(that *RefreshTokenReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.Token.EqualVT(that.Token) {
		return false
	}
	if this.ForCli != that.ForCli {
		return false
	}
	if this.ProdvanaOnlyAdminOrg != that.ProdvanaOnlyAdminOrg {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *RefreshTokenReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*RefreshTokenReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetAuthTokenResp) EqualVT(that *GetAuthTokenResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.Token.EqualVT(that.Token) {
		return false
	}
	if !this.User.EqualVT(that.User) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetAuthTokenResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetAuthTokenResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *Empty) EqualVT(that *Empty) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *Empty) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*Empty)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *LogoutReq) EqualVT(that *LogoutReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.ForCli != that.ForCli {
		return false
	}
	if this.RedirectUrl != that.RedirectUrl {
		return false
	}
	if this.ProdvanaOnlyAdminOrg != that.ProdvanaOnlyAdminOrg {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *LogoutReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*LogoutReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *LogoutResp) EqualVT(that *LogoutResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.LogoutUrl != that.LogoutUrl {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *LogoutResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*LogoutResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *CreateOrgApiTokenReq) EqualVT(that *CreateOrgApiTokenReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Name != that.Name {
		return false
	}
	if this.Description != that.Description {
		return false
	}
	if !(*timestamppb1.Timestamp)(this.ExpiresTimestamp).EqualVT((*timestamppb1.Timestamp)(that.ExpiresTimestamp)) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *CreateOrgApiTokenReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*CreateOrgApiTokenReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *CreateOrgApiTokenResp) EqualVT(that *CreateOrgApiTokenResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.ApiToken != that.ApiToken {
		return false
	}
	if !this.Info.EqualVT(that.Info) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *CreateOrgApiTokenResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*CreateOrgApiTokenResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *DeleteOrgApiTokenReq) EqualVT(that *DeleteOrgApiTokenReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Name != that.Name {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *DeleteOrgApiTokenReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*DeleteOrgApiTokenReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *DeleteOrgApiTokenResp) EqualVT(that *DeleteOrgApiTokenResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *DeleteOrgApiTokenResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*DeleteOrgApiTokenResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ListOrgApiTokensReq) EqualVT(that *ListOrgApiTokensReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListOrgApiTokensReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListOrgApiTokensReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ListOrgApiTokensResp) EqualVT(that *ListOrgApiTokensResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.Tokens) != len(that.Tokens) {
		return false
	}
	for i, vx := range this.Tokens {
		vy := that.Tokens[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &ApiTokenInfo{}
			}
			if q == nil {
				q = &ApiTokenInfo{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListOrgApiTokensResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListOrgApiTokensResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
