// Code generated by protoc-gen-go-vtproto. DO NOT EDIT.
// protoc-gen-go-vtproto version: v0.6.0
// source: prodvana/release_channel/release_channel_manager.proto

package release_channel

import (
	events "github.com/prodvana/prodvana-public/go/prodvana-sdk/proto/prodvana/events"
	proto "google.golang.org/protobuf/proto"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

func (m *ConfigureReleaseChannelReq) CloneVT() *ConfigureReleaseChannelReq {
	if m == nil {
		return (*ConfigureReleaseChannelReq)(nil)
	}
	r := new(ConfigureReleaseChannelReq)
	r.Application = m.Application
	r.ReleaseChannel = m.ReleaseChannel.CloneVT()
	r.Source = m.Source
	r.SourceMetadata = m.SourceMetadata.CloneVT()
	r.ForceCreateNewVersion = m.ForceCreateNewVersion
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ConfigureReleaseChannelReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ConfigureReleaseChannelResp) CloneVT() *ConfigureReleaseChannelResp {
	if m == nil {
		return (*ConfigureReleaseChannelResp)(nil)
	}
	r := new(ConfigureReleaseChannelResp)
	r.Version = m.Version
	r.CreatedNewVersion = m.CreatedNewVersion
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ConfigureReleaseChannelResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *DeleteReleaseChannelReq) CloneVT() *DeleteReleaseChannelReq {
	if m == nil {
		return (*DeleteReleaseChannelReq)(nil)
	}
	r := new(DeleteReleaseChannelReq)
	r.ReleaseChannel = m.ReleaseChannel
	r.Application = m.Application
	r.Source = m.Source
	r.SourceMetadata = m.SourceMetadata.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *DeleteReleaseChannelReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *DeleteReleaseChannelResp) CloneVT() *DeleteReleaseChannelResp {
	if m == nil {
		return (*DeleteReleaseChannelResp)(nil)
	}
	r := new(DeleteReleaseChannelResp)
	r.Version = m.Version
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *DeleteReleaseChannelResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ListReleaseChannelsReq) CloneVT() *ListReleaseChannelsReq {
	if m == nil {
		return (*ListReleaseChannelsReq)(nil)
	}
	r := new(ListReleaseChannelsReq)
	r.Application = m.Application
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ListReleaseChannelsReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *ListReleaseChannelsResp) CloneVT() *ListReleaseChannelsResp {
	if m == nil {
		return (*ListReleaseChannelsResp)(nil)
	}
	r := new(ListReleaseChannelsResp)
	if rhs := m.ReleaseChannels; rhs != nil {
		tmpContainer := make([]*ReleaseChannel, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.ReleaseChannels = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ListReleaseChannelsResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetReleaseChannelReq) CloneVT() *GetReleaseChannelReq {
	if m == nil {
		return (*GetReleaseChannelReq)(nil)
	}
	r := new(GetReleaseChannelReq)
	r.Application = m.Application
	r.ReleaseChannel = m.ReleaseChannel
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetReleaseChannelReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetReleaseChannelResp) CloneVT() *GetReleaseChannelResp {
	if m == nil {
		return (*GetReleaseChannelResp)(nil)
	}
	r := new(GetReleaseChannelResp)
	r.ReleaseChannel = m.ReleaseChannel.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetReleaseChannelResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetReleaseChannelConfigReq) CloneVT() *GetReleaseChannelConfigReq {
	if m == nil {
		return (*GetReleaseChannelConfigReq)(nil)
	}
	r := new(GetReleaseChannelConfigReq)
	r.Application = m.Application
	r.ReleaseChannel = m.ReleaseChannel
	r.Version = m.Version
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetReleaseChannelConfigReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetReleaseChannelConfigResp) CloneVT() *GetReleaseChannelConfigResp {
	if m == nil {
		return (*GetReleaseChannelConfigResp)(nil)
	}
	r := new(GetReleaseChannelConfigResp)
	r.Config = m.Config.CloneVT()
	r.Version = m.Version
	r.CompiledConfig = m.CompiledConfig.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetReleaseChannelConfigResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetReleaseChannelEventsReq) CloneVT() *GetReleaseChannelEventsReq {
	if m == nil {
		return (*GetReleaseChannelEventsReq)(nil)
	}
	r := new(GetReleaseChannelEventsReq)
	r.Application = m.Application
	r.ReleaseChannel = m.ReleaseChannel
	r.PageToken = m.PageToken
	r.PageSize = m.PageSize
	r.OrderByDescTimestamp = m.OrderByDescTimestamp
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetReleaseChannelEventsReq) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (m *GetReleaseChannelEventsResp) CloneVT() *GetReleaseChannelEventsResp {
	if m == nil {
		return (*GetReleaseChannelEventsResp)(nil)
	}
	r := new(GetReleaseChannelEventsResp)
	r.NextPageToken = m.NextPageToken
	if rhs := m.Events; rhs != nil {
		tmpContainer := make([]*events.Event, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.Events = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetReleaseChannelEventsResp) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (this *ConfigureReleaseChannelReq) StableEqualVT(that *ConfigureReleaseChannelReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.ReleaseChannel.StableEqualVT(that.ReleaseChannel) {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if !this.SourceMetadata.StableEqualVT(that.SourceMetadata) {
		return false
	}
	if this.ForceCreateNewVersion != that.ForceCreateNewVersion {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ConfigureReleaseChannelReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ConfigureReleaseChannelReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *ConfigureReleaseChannelReq) EqualVT(that *ConfigureReleaseChannelReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.ReleaseChannel.EqualVT(that.ReleaseChannel) {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if !this.SourceMetadata.EqualVT(that.SourceMetadata) {
		return false
	}
	if this.ForceCreateNewVersion != that.ForceCreateNewVersion {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ConfigureReleaseChannelReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ConfigureReleaseChannelReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ConfigureReleaseChannelResp) StableEqualVT(that *ConfigureReleaseChannelResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Version != that.Version {
		return false
	}
	if this.CreatedNewVersion != that.CreatedNewVersion {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ConfigureReleaseChannelResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ConfigureReleaseChannelResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *ConfigureReleaseChannelResp) EqualVT(that *ConfigureReleaseChannelResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Version != that.Version {
		return false
	}
	if this.CreatedNewVersion != that.CreatedNewVersion {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ConfigureReleaseChannelResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ConfigureReleaseChannelResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *DeleteReleaseChannelReq) StableEqualVT(that *DeleteReleaseChannelReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.ReleaseChannel != that.ReleaseChannel {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if !this.SourceMetadata.StableEqualVT(that.SourceMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *DeleteReleaseChannelReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*DeleteReleaseChannelReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *DeleteReleaseChannelReq) EqualVT(that *DeleteReleaseChannelReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.ReleaseChannel != that.ReleaseChannel {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.Source != that.Source {
		return false
	}
	if !this.SourceMetadata.EqualVT(that.SourceMetadata) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *DeleteReleaseChannelReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*DeleteReleaseChannelReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *DeleteReleaseChannelResp) StableEqualVT(that *DeleteReleaseChannelResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Version != that.Version {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *DeleteReleaseChannelResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*DeleteReleaseChannelResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *DeleteReleaseChannelResp) EqualVT(that *DeleteReleaseChannelResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Version != that.Version {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *DeleteReleaseChannelResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*DeleteReleaseChannelResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ListReleaseChannelsReq) StableEqualVT(that *ListReleaseChannelsReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListReleaseChannelsReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListReleaseChannelsReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *ListReleaseChannelsReq) EqualVT(that *ListReleaseChannelsReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListReleaseChannelsReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListReleaseChannelsReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *ListReleaseChannelsResp) StableEqualVT(that *ListReleaseChannelsResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.ReleaseChannels) != len(that.ReleaseChannels) {
		return false
	}
	for i, vx := range this.ReleaseChannels {
		vy := that.ReleaseChannels[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &ReleaseChannel{}
			}
			if q == nil {
				q = &ReleaseChannel{}
			}
			if !p.StableEqualVT(q) {
				return false
			}
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListReleaseChannelsResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListReleaseChannelsResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *ListReleaseChannelsResp) EqualVT(that *ListReleaseChannelsResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.ReleaseChannels) != len(that.ReleaseChannels) {
		return false
	}
	for i, vx := range this.ReleaseChannels {
		vy := that.ReleaseChannels[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &ReleaseChannel{}
			}
			if q == nil {
				q = &ReleaseChannel{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ListReleaseChannelsResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ListReleaseChannelsResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetReleaseChannelReq) StableEqualVT(that *GetReleaseChannelReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.ReleaseChannel != that.ReleaseChannel {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetReleaseChannelReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetReleaseChannelReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetReleaseChannelReq) EqualVT(that *GetReleaseChannelReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.ReleaseChannel != that.ReleaseChannel {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetReleaseChannelReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetReleaseChannelReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetReleaseChannelResp) StableEqualVT(that *GetReleaseChannelResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.ReleaseChannel.StableEqualVT(that.ReleaseChannel) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetReleaseChannelResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetReleaseChannelResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetReleaseChannelResp) EqualVT(that *GetReleaseChannelResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.ReleaseChannel.EqualVT(that.ReleaseChannel) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetReleaseChannelResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetReleaseChannelResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetReleaseChannelConfigReq) StableEqualVT(that *GetReleaseChannelConfigReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.ReleaseChannel != that.ReleaseChannel {
		return false
	}
	if this.Version != that.Version {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetReleaseChannelConfigReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetReleaseChannelConfigReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetReleaseChannelConfigReq) EqualVT(that *GetReleaseChannelConfigReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.ReleaseChannel != that.ReleaseChannel {
		return false
	}
	if this.Version != that.Version {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetReleaseChannelConfigReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetReleaseChannelConfigReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetReleaseChannelConfigResp) StableEqualVT(that *GetReleaseChannelConfigResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.Config.StableEqualVT(that.Config) {
		return false
	}
	if this.Version != that.Version {
		return false
	}
	if !this.CompiledConfig.StableEqualVT(that.CompiledConfig) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetReleaseChannelConfigResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetReleaseChannelConfigResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetReleaseChannelConfigResp) EqualVT(that *GetReleaseChannelConfigResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.Config.EqualVT(that.Config) {
		return false
	}
	if this.Version != that.Version {
		return false
	}
	if !this.CompiledConfig.EqualVT(that.CompiledConfig) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetReleaseChannelConfigResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetReleaseChannelConfigResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetReleaseChannelEventsReq) StableEqualVT(that *GetReleaseChannelEventsReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.ReleaseChannel != that.ReleaseChannel {
		return false
	}
	if this.PageToken != that.PageToken {
		return false
	}
	if this.PageSize != that.PageSize {
		return false
	}
	if this.OrderByDescTimestamp != that.OrderByDescTimestamp {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetReleaseChannelEventsReq) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetReleaseChannelEventsReq)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetReleaseChannelEventsReq) EqualVT(that *GetReleaseChannelEventsReq) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Application != that.Application {
		return false
	}
	if this.ReleaseChannel != that.ReleaseChannel {
		return false
	}
	if this.PageToken != that.PageToken {
		return false
	}
	if this.PageSize != that.PageSize {
		return false
	}
	if this.OrderByDescTimestamp != that.OrderByDescTimestamp {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetReleaseChannelEventsReq) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetReleaseChannelEventsReq)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetReleaseChannelEventsResp) StableEqualVT(that *GetReleaseChannelEventsResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.Events) != len(that.Events) {
		return false
	}
	for i, vx := range this.Events {
		vy := that.Events[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &events.Event{}
			}
			if q == nil {
				q = &events.Event{}
			}
			if !p.StableEqualVT(q) {
				return false
			}
		}
	}
	if this.NextPageToken != that.NextPageToken {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetReleaseChannelEventsResp) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetReleaseChannelEventsResp)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *GetReleaseChannelEventsResp) EqualVT(that *GetReleaseChannelEventsResp) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.Events) != len(that.Events) {
		return false
	}
	for i, vx := range this.Events {
		vy := that.Events[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &events.Event{}
			}
			if q == nil {
				q = &events.Event{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	if this.NextPageToken != that.NextPageToken {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetReleaseChannelEventsResp) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*GetReleaseChannelEventsResp)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
