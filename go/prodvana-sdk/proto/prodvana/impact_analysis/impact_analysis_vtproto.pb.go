// Code generated by protoc-gen-go-vtproto. DO NOT EDIT.
// protoc-gen-go-vtproto version: v0.6.0
// source: prodvana/impact_analysis/impact_analysis.proto

package impact_analysis

import (
	proto "google.golang.org/protobuf/proto"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

func (m *ImpactAnalysisResult) CloneVT() *ImpactAnalysisResult {
	if m == nil {
		return (*ImpactAnalysisResult)(nil)
	}
	r := new(ImpactAnalysisResult)
	r.Category = m.Category
	r.IncidentType = m.IncidentType
	r.ImpactScore = m.ImpactScore
	r.ImpactReasoning = m.ImpactReasoning
	r.LikelihoodScore = m.LikelihoodScore
	r.LikelihoodReasoning = m.LikelihoodReasoning
	r.OverallScore = m.OverallScore
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *ImpactAnalysisResult) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (this *ImpactAnalysisResult) StableEqualVT(that *ImpactAnalysisResult) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Category != that.Category {
		return false
	}
	if this.IncidentType != that.IncidentType {
		return false
	}
	if this.ImpactScore != that.ImpactScore {
		return false
	}
	if this.ImpactReasoning != that.ImpactReasoning {
		return false
	}
	if this.LikelihoodScore != that.LikelihoodScore {
		return false
	}
	if this.LikelihoodReasoning != that.LikelihoodReasoning {
		return false
	}
	if this.OverallScore != that.OverallScore {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ImpactAnalysisResult) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ImpactAnalysisResult)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *ImpactAnalysisResult) EqualVT(that *ImpactAnalysisResult) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Category != that.Category {
		return false
	}
	if this.IncidentType != that.IncidentType {
		return false
	}
	if this.ImpactScore != that.ImpactScore {
		return false
	}
	if this.ImpactReasoning != that.ImpactReasoning {
		return false
	}
	if this.LikelihoodScore != that.LikelihoodScore {
		return false
	}
	if this.LikelihoodReasoning != that.LikelihoodReasoning {
		return false
	}
	if this.OverallScore != that.OverallScore {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *ImpactAnalysisResult) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*ImpactAnalysisResult)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
