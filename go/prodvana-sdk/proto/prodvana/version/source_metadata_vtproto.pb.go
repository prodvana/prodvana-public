// Code generated by protoc-gen-go-vtproto. DO NOT EDIT.
// protoc-gen-go-vtproto version: v0.6.0
// source: prodvana/version/source_metadata.proto

package version

import (
	proto "google.golang.org/protobuf/proto"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

func (m *SourceMetadata) CloneVT() *SourceMetadata {
	if m == nil {
		return (*SourceMetadata)(nil)
	}
	r := new(SourceMetadata)
	r.RepoUrl = m.RepoUrl
	r.FilePath = m.FilePath
	r.Commit = m.Commit
	r.UserId = m.UserId
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *SourceMetadata) CloneMessageVT() proto.Message {
	return m.CloneVT()
}

func (this *SourceMetadata) StableEqualVT(that *SourceMetadata) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.RepoUrl != that.RepoUrl {
		return false
	}
	if this.FilePath != that.FilePath {
		return false
	}
	if this.Commit != that.Commit {
		return false
	}
	if this.UserId != that.UserId {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *SourceMetadata) StableEqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*SourceMetadata)
	if !ok {
		return false
	}
	return this.StableEqualVT(that)
}
func (this *SourceMetadata) EqualVT(that *SourceMetadata) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.RepoUrl != that.RepoUrl {
		return false
	}
	if this.FilePath != that.FilePath {
		return false
	}
	if this.Commit != that.Commit {
		return false
	}
	if this.UserId != that.UserId {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *SourceMetadata) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*SourceMetadata)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
