"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import prodvana.proto.prodvana.object.meta_pb2
import prodvana.proto.prodvana.repo.repo_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class ReleaseConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DEPLOYMENT_SYSTEM_FIELD_NUMBER: builtins.int
    SERVICE_FIELD_NUMBER: builtins.int
    RELEASE_CHANNEL_FIELD_NUMBER: builtins.int
    REPOSITORY_FIELD_NUMBER: builtins.int
    COMMIT_ID_FIELD_NUMBER: builtins.int
    @property
    def creation_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """must be unset on input"""
    deployment_system: builtins.str
    service: builtins.str
    release_channel: builtins.str
    repository: builtins.str
    """e.g. github.com/foo/bar"""
    commit_id: builtins.str
    """commit hash"""
    def __init__(
        self,
        *,
        creation_timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        deployment_system: builtins.str = ...,
        service: builtins.str = ...,
        release_channel: builtins.str = ...,
        repository: builtins.str = ...,
        commit_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["creation_timestamp", b"creation_timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["commit_id", b"commit_id", "creation_timestamp", b"creation_timestamp", "deployment_system", b"deployment_system", "release_channel", b"release_channel", "repository", b"repository", "service", b"service"]) -> None: ...

global___ReleaseConfig = ReleaseConfig

class ImpactAnalysisComparison(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RELEVANT_COMMITS_FIELD_NUMBER: builtins.int
    @property
    def relevant_commits(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[prodvana.proto.prodvana.repo.repo_pb2.Commit]:
        """commits likely to be impactful, prev_commit_id and new_commit_id have a merge base"""
    def __init__(
        self,
        *,
        relevant_commits: collections.abc.Iterable[prodvana.proto.prodvana.repo.repo_pb2.Commit] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["relevant_commits", b"relevant_commits"]) -> None: ...

global___ImpactAnalysisComparison = ImpactAnalysisComparison

class ReleaseComparison(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PREV_FIELD_NUMBER: builtins.int
    PREV_REPOSITORY_FIELD_NUMBER: builtins.int
    NEW_REPOSITORY_FIELD_NUMBER: builtins.int
    PREV_COMMIT_ID_FIELD_NUMBER: builtins.int
    NEW_COMMIT_ID_FIELD_NUMBER: builtins.int
    IMPACT_ANALYSIS_FIELD_NUMBER: builtins.int
    @property
    def prev(self) -> prodvana.proto.prodvana.object.meta_pb2.ObjectMeta: ...
    prev_repository: builtins.str
    new_repository: builtins.str
    prev_commit_id: builtins.str
    new_commit_id: builtins.str
    @property
    def impact_analysis(self) -> global___ImpactAnalysisComparison: ...
    def __init__(
        self,
        *,
        prev: prodvana.proto.prodvana.object.meta_pb2.ObjectMeta | None = ...,
        prev_repository: builtins.str = ...,
        new_repository: builtins.str = ...,
        prev_commit_id: builtins.str = ...,
        new_commit_id: builtins.str = ...,
        impact_analysis: global___ImpactAnalysisComparison | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["impact_analysis", b"impact_analysis", "prev", b"prev"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["impact_analysis", b"impact_analysis", "new_commit_id", b"new_commit_id", "new_repository", b"new_repository", "prev", b"prev", "prev_commit_id", b"prev_commit_id", "prev_repository", b"prev_repository"]) -> None: ...

global___ReleaseComparison = ReleaseComparison

class Release(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    META_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    COMPARISON_FIELD_NUMBER: builtins.int
    @property
    def meta(self) -> prodvana.proto.prodvana.object.meta_pb2.ObjectMeta: ...
    @property
    def config(self) -> global___ReleaseConfig: ...
    @property
    def comparison(self) -> global___ReleaseComparison:
        """TODO(naphat) should this really be part of the proto here, or should it be a separate endpoint so we can request arbitrary comparison?"""
    def __init__(
        self,
        *,
        meta: prodvana.proto.prodvana.object.meta_pb2.ObjectMeta | None = ...,
        config: global___ReleaseConfig | None = ...,
        comparison: global___ReleaseComparison | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["comparison", b"comparison", "config", b"config", "meta", b"meta"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["comparison", b"comparison", "config", b"config", "meta", b"meta"]) -> None: ...

global___Release = Release
